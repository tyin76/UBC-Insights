{"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":53,"6":53,"7":1,"8":3,"9":3,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":53,"2":3,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/controller/IInsightFacade.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"707cfcc98cfa46a1089e0c800a03786f3413dd65","contentHash":"8b19211f6df741211a34d0f7868c46bdb31359b455791af5e360043e713b5bc9"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":65}},"4":{"start":{"line":6,"column":27},"end":{"line":6,"column":73}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":77}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":80}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":55}},"8":{"start":{"line":12,"column":27},"end":{"line":12,"column":96}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":81}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":68}},"11":{"start":{"line":17,"column":22},"end":{"line":17,"column":31}},"12":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":82}},"14":{"start":{"line":21,"column":41},"end":{"line":21,"column":93}},"15":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":98}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":67}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":18}},"19":{"start":{"line":29,"column":25},"end":{"line":29,"column":77}},"20":{"start":{"line":30,"column":31},"end":{"line":30,"column":85}},"21":{"start":{"line":31,"column":8},"end":{"line":31,"column":30}},"22":{"start":{"line":34,"column":20},"end":{"line":34,"column":72}},"23":{"start":{"line":35,"column":25},"end":{"line":43,"column":10}},"24":{"start":{"line":36,"column":25},"end":{"line":36,"column":70}},"25":{"start":{"line":37,"column":28},"end":{"line":37,"column":73}},"26":{"start":{"line":38,"column":12},"end":{"line":42,"column":14}},"27":{"start":{"line":44,"column":25},"end":{"line":44,"column":52}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"29":{"start":{"line":48,"column":0},"end":{"line":48,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":40},"end":{"line":15,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":28},"end":{"line":27,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":30},"end":{"line":32,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":25},"end":{"line":46,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":33},"end":{"line":35,"column":34}},"loc":{"start":{"line":35,"column":47},"end":{"line":43,"column":9}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"1":{"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":108}},"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":27}},{"start":{"line":18,"column":31},"end":{"line":18,"column":42}},{"start":{"line":18,"column":46},"end":{"line":18,"column":62}},{"start":{"line":18,"column":66},"end":{"line":18,"column":88}},{"start":{"line":18,"column":92},"end":{"line":18,"column":108}}],"line":18},"2":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":72,"6":61,"7":57,"8":57,"9":54,"10":39,"11":16,"12":16,"13":4,"14":12,"15":12,"16":3,"17":9,"18":9,"19":57,"20":24,"21":24,"22":4,"23":4,"24":8,"25":8,"26":8,"27":4,"28":4,"29":1},"f":{"0":72,"1":16,"2":57,"3":4,"4":8},"b":{"0":[4,12],"1":[16,14,13,12,12],"2":[3,9]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/controller/InsightFacade.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/controller/InsightFacade.ts"],"names":[],"mappings":";;AACA,qDAO0B;AAC1B,8DAOmC;AACnC,kEAAyF;AACzF,0EAI6C;AAO7C,MAAqB,aAAa;IAC1B,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,OAAe,EAAE,IAAwB;QAC5E,IAAA,4CAAyB,EAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAE7C,MAAM,IAAA,wDAAqC,EAAC,EAAE,CAAC,CAAC;QAEhD,MAAM,IAAA,iCAAgB,GAAE,CAAC;QAEzB,MAAM,UAAU,GAAG,MAAM,IAAA,2CAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAEjE,MAAM,IAAA,uCAAsB,EAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAEnD,OAAO,MAAM,IAAA,uCAAsB,GAAE,CAAC;IACvC,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,EAAU;QACpC,MAAM,KAAK,GAAG,SAAS,CAAC;QAGxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACrG,MAAM,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC;SACrD;QAED,MAAM,wBAAwB,GAAG,MAAM,IAAA,uCAAsB,GAAE,CAAC;QAEhE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YAC3C,MAAM,IAAI,8BAAa,CAAC,2CAA2C,CAAC,CAAC;SACrE;QAED,MAAM,IAAA,2CAA0B,EAAC,EAAE,CAAC,CAAC;QACrC,OAAO,EAAE,CAAC;IACX,CAAC;IAGM,KAAK,CAAC,YAAY,CAAC,KAAc;QAEvC,MAAM,QAAQ,GAAc,MAAM,IAAA,kCAAmB,EAAC,KAAK,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAoB,IAAA,gCAAiB,EAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAE3E,OAAO,cAAc,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,YAAY;QACxB,MAAM,GAAG,GAAG,MAAM,IAAA,uCAAsB,GAAE,CAAC;QAG3C,MAAM,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;YACrC,MAAM,IAAI,GAAG,MAAM,IAAA,8BAAa,EAAC,EAAE,CAAC,CAAC;YACrC,MAAM,OAAO,GAAG,MAAM,IAAA,8BAAa,EAAC,EAAE,CAAC,CAAC;YAGxC,OAAO;gBACN,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,OAAO;aACE,CAAC;QACrB,CAAC,CAAC,CAAC;QAGH,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7C,OAAO,QAAQ,CAAC;IACjB,CAAC;CACD;AA9DD,gCA8DC","sourcesContent":["import Section from \"../objects/Section\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport {\n\tcreateDataFolder,\n\tgetAllCachedDatasetIds,\n\tgetKindFromId,\n\tgetRowsFromId,\n\tremoveDatasetFromDataCache,\n\tsaveDatasetToDataCache,\n} from \"../objects/FileManagement\";\nimport { getAllValidSections, parseSectionsData } from \"../helperFunctions/QueryHandler\";\nimport {\n\tcheckThatIdDoesNotAlreadyExistInCache,\n\tvalidateDatasetParameters,\n\tcreateDatasetFromContent,\n} from \"../helperFunctions/AddDatasetHelper\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tvalidateDatasetParameters(id, content, kind);\n\n\t\tawait checkThatIdDoesNotAlreadyExistInCache(id);\n\n\t\tawait createDataFolder();\n\n\t\tconst newDataset = await createDatasetFromContent(content, kind);\n\n\t\tawait saveDatasetToDataCache(id, newDataset, kind);\n\n\t\treturn await getAllCachedDatasetIds();\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tconst regex = /^[^_]+$/;\n\n\t\t// checks if id is valid, otherwise throws error\n\t\tif (!regex.test(id) || id === null || id.trim() === \"\" || typeof id !== \"string\" || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id (removeDataset)\");\n\t\t}\n\n\t\tconst idsThatExistInCacheSoFar = await getAllCachedDatasetIds();\n\n\t\tif (!idsThatExistInCacheSoFar.includes(id)) {\n\t\t\tthrow new NotFoundError(\"ID submitted is not found (removeDataset)\");\n\t\t}\n\n\t\tawait removeDatasetFromDataCache(id);\n\t\treturn id;\n\t}\n\n\t// Reminder that query will use keys from the dataset\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// gets all sections\n\t\tconst sections: Section[] = await getAllValidSections(query);\n\t\tconst insightResults: InsightResult[] = parseSectionsData(sections, query);\n\n\t\treturn insightResults;\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tconst ids = await getAllCachedDatasetIds();\n\n\t\t// Create an array of promises for each dataset\n\t\tconst promises = ids.map(async (id) => {\n\t\t\tconst kind = await getKindFromId(id); // Get the kind of dataset\n\t\t\tconst numRows = await getRowsFromId(id); // Get the number of rows in the dataset\n\n\t\t\t// Construct the object\n\t\t\treturn {\n\t\t\t\tid: id,\n\t\t\t\tkind: kind,\n\t\t\t\tnumRows: numRows,\n\t\t\t} as InsightDataset; // Type assertion\n\t\t});\n\n\t\t// Wait for all promises to resolve and return the array\n\t\tconst datasets = await Promise.all(promises);\n\t\treturn datasets; // Return the resolved datasets\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3da50ee7cb9b6469682eeb083069d3226390f9dc","contentHash":"2ef18efa5818bf7b4a798a4160167c70d5d1f683c57fcd1011fda3d601f93c4c"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\FileManagement.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\FileManagement.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":212}},"28":{"start":{"line":30,"column":15},"end":{"line":30,"column":47}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":64}},"31":{"start":{"line":33,"column":18},"end":{"line":33,"column":55}},"32":{"start":{"line":34,"column":18},"end":{"line":34,"column":55}},"33":{"start":{"line":35,"column":15},"end":{"line":35,"column":49}},"34":{"start":{"line":36,"column":22},"end":{"line":36,"column":72}},"35":{"start":{"line":37,"column":20},"end":{"line":37,"column":26}},"36":{"start":{"line":38,"column":20},"end":{"line":38,"column":26}},"37":{"start":{"line":40,"column":4},"end":{"line":55,"column":5}},"38":{"start":{"line":41,"column":8},"end":{"line":41,"column":47}},"39":{"start":{"line":44,"column":8},"end":{"line":54,"column":9}},"40":{"start":{"line":45,"column":30},"end":{"line":45,"column":38}},"41":{"start":{"line":46,"column":12},"end":{"line":50,"column":13}},"42":{"start":{"line":49,"column":16},"end":{"line":49,"column":100}},"43":{"start":{"line":53,"column":12},"end":{"line":53,"column":96}},"44":{"start":{"line":57,"column":0},"end":{"line":57,"column":44}},"45":{"start":{"line":59,"column":24},"end":{"line":59,"column":25}},"46":{"start":{"line":60,"column":19},"end":{"line":60,"column":67}},"47":{"start":{"line":61,"column":24},"end":{"line":61,"column":75}},"48":{"start":{"line":62,"column":4},"end":{"line":62,"column":55}},"49":{"start":{"line":63,"column":4},"end":{"line":63,"column":73}},"50":{"start":{"line":64,"column":4},"end":{"line":64,"column":48}},"51":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"52":{"start":{"line":66,"column":8},"end":{"line":66,"column":77}},"53":{"start":{"line":67,"column":8},"end":{"line":67,"column":81}},"54":{"start":{"line":70,"column":0},"end":{"line":70,"column":56}},"55":{"start":{"line":72,"column":19},"end":{"line":72,"column":67}},"56":{"start":{"line":73,"column":24},"end":{"line":73,"column":47}},"57":{"start":{"line":74,"column":4},"end":{"line":86,"column":5}},"58":{"start":{"line":75,"column":8},"end":{"line":75,"column":43}},"59":{"start":{"line":76,"column":8},"end":{"line":76,"column":77}},"60":{"start":{"line":77,"column":8},"end":{"line":77,"column":43}},"61":{"start":{"line":78,"column":8},"end":{"line":81,"column":9}},"62":{"start":{"line":79,"column":12},"end":{"line":79,"column":81}},"63":{"start":{"line":80,"column":12},"end":{"line":80,"column":47}},"64":{"start":{"line":84,"column":29},"end":{"line":84,"column":40}},"65":{"start":{"line":85,"column":8},"end":{"line":85,"column":74}},"66":{"start":{"line":88,"column":0},"end":{"line":88,"column":64}},"67":{"start":{"line":90,"column":20},"end":{"line":90,"column":22}},"68":{"start":{"line":91,"column":27},"end":{"line":91,"column":28}},"69":{"start":{"line":92,"column":4},"end":{"line":92,"column":29}},"70":{"start":{"line":93,"column":4},"end":{"line":105,"column":5}},"71":{"start":{"line":94,"column":33},"end":{"line":94,"column":73}},"72":{"start":{"line":95,"column":8},"end":{"line":100,"column":9}},"73":{"start":{"line":96,"column":33},"end":{"line":96,"column":55}},"74":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"75":{"start":{"line":98,"column":16},"end":{"line":98,"column":46}},"76":{"start":{"line":103,"column":29},"end":{"line":103,"column":40}},"77":{"start":{"line":104,"column":8},"end":{"line":104,"column":74}},"78":{"start":{"line":106,"column":4},"end":{"line":106,"column":19}},"79":{"start":{"line":108,"column":0},"end":{"line":108,"column":56}},"80":{"start":{"line":110,"column":4},"end":{"line":118,"column":5}},"81":{"start":{"line":111,"column":25},"end":{"line":111,"column":82}},"82":{"start":{"line":112,"column":24},"end":{"line":112,"column":69}},"83":{"start":{"line":113,"column":8},"end":{"line":113,"column":23}},"84":{"start":{"line":116,"column":29},"end":{"line":116,"column":40}},"85":{"start":{"line":117,"column":8},"end":{"line":117,"column":74}},"86":{"start":{"line":120,"column":0},"end":{"line":120,"column":38}},"87":{"start":{"line":122,"column":25},"end":{"line":122,"column":27}},"88":{"start":{"line":123,"column":25},"end":{"line":123,"column":44}},"89":{"start":{"line":124,"column":4},"end":{"line":127,"column":5}},"90":{"start":{"line":125,"column":31},"end":{"line":125,"column":38}},"91":{"start":{"line":126,"column":8},"end":{"line":126,"column":376}},"92":{"start":{"line":128,"column":4},"end":{"line":128,"column":93}},"93":{"start":{"line":131,"column":22},"end":{"line":131,"column":24}},"94":{"start":{"line":132,"column":22},"end":{"line":132,"column":41}},"95":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"96":{"start":{"line":134,"column":28},"end":{"line":134,"column":32}},"97":{"start":{"line":135,"column":8},"end":{"line":135,"column":350}},"98":{"start":{"line":137,"column":4},"end":{"line":137,"column":90}},"99":{"start":{"line":140,"column":21},"end":{"line":140,"column":74}},"100":{"start":{"line":141,"column":20},"end":{"line":141,"column":65}},"101":{"start":{"line":142,"column":4},"end":{"line":142,"column":19}},"102":{"start":{"line":145,"column":4},"end":{"line":156,"column":5}},"103":{"start":{"line":146,"column":24},"end":{"line":146,"column":50}},"104":{"start":{"line":147,"column":25},"end":{"line":147,"column":44}},"105":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"106":{"start":{"line":149,"column":12},"end":{"line":149,"column":57}},"107":{"start":{"line":151,"column":8},"end":{"line":151,"column":50}},"108":{"start":{"line":154,"column":29},"end":{"line":154,"column":40}},"109":{"start":{"line":155,"column":8},"end":{"line":155,"column":74}},"110":{"start":{"line":158,"column":0},"end":{"line":158,"column":44}},"111":{"start":{"line":160,"column":4},"end":{"line":168,"column":5}},"112":{"start":{"line":161,"column":25},"end":{"line":161,"column":82}},"113":{"start":{"line":162,"column":24},"end":{"line":162,"column":69}},"114":{"start":{"line":163,"column":8},"end":{"line":163,"column":31}},"115":{"start":{"line":166,"column":29},"end":{"line":166,"column":40}},"116":{"start":{"line":167,"column":8},"end":{"line":167,"column":74}},"117":{"start":{"line":170,"column":0},"end":{"line":170,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"createDataFolder","decl":{"start":{"line":39,"column":15},"end":{"line":39,"column":31}},"loc":{"start":{"line":39,"column":34},"end":{"line":56,"column":1}},"line":39},"8":{"name":"saveDatasetToDataCache","decl":{"start":{"line":58,"column":15},"end":{"line":58,"column":37}},"loc":{"start":{"line":58,"column":57},"end":{"line":69,"column":1}},"line":58},"9":{"name":"removeDatasetFromDataCache","decl":{"start":{"line":71,"column":15},"end":{"line":71,"column":41}},"loc":{"start":{"line":71,"column":46},"end":{"line":87,"column":1}},"line":71},"10":{"name":"getAllCachedDatasetIds","decl":{"start":{"line":89,"column":15},"end":{"line":89,"column":37}},"loc":{"start":{"line":89,"column":40},"end":{"line":107,"column":1}},"line":89},"11":{"name":"getKindFromId","decl":{"start":{"line":109,"column":15},"end":{"line":109,"column":28}},"loc":{"start":{"line":109,"column":33},"end":{"line":119,"column":1}},"line":109},"12":{"name":"createSectionDatasetFromJson","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":37}},"loc":{"start":{"line":121,"column":47},"end":{"line":129,"column":1}},"line":121},"13":{"name":"createRoomDatasetFromJson","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":34}},"loc":{"start":{"line":130,"column":44},"end":{"line":138,"column":1}},"line":130},"14":{"name":"loadJsonFileById","decl":{"start":{"line":139,"column":15},"end":{"line":139,"column":31}},"loc":{"start":{"line":139,"column":36},"end":{"line":143,"column":1}},"line":139},"15":{"name":"getDatasetFromId","decl":{"start":{"line":144,"column":15},"end":{"line":144,"column":31}},"loc":{"start":{"line":144,"column":36},"end":{"line":157,"column":1}},"line":144},"16":{"name":"getRowsFromId","decl":{"start":{"line":159,"column":15},"end":{"line":159,"column":28}},"loc":{"start":{"line":159,"column":33},"end":{"line":169,"column":1}},"line":159}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":44,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":54,"column":9}},{"start":{"line":44,"column":8},"end":{"line":54,"column":9}}],"line":44},"20":{"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":44}},"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":32}},{"start":{"line":44,"column":36},"end":{"line":44,"column":44}}],"line":44},"21":{"loc":{"start":{"line":46,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":50,"column":13}},{"start":{"line":46,"column":12},"end":{"line":50,"column":13}}],"line":46},"22":{"loc":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},{"start":{"line":65,"column":4},"end":{"line":68,"column":5}}],"line":65},"23":{"loc":{"start":{"line":78,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":81,"column":9}},{"start":{"line":78,"column":8},"end":{"line":81,"column":9}}],"line":78},"24":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"25":{"loc":{"start":{"line":97,"column":16},"end":{"line":97,"column":84}},"type":"binary-expr","locations":[{"start":{"line":97,"column":16},"end":{"line":97,"column":54}},{"start":{"line":97,"column":58},"end":{"line":97,"column":84}}],"line":97},"26":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":496,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":4,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":173,"38":173,"39":135,"40":135,"41":135,"42":0,"43":0,"44":1,"45":54,"46":54,"47":54,"48":39,"49":39,"50":39,"51":39,"52":39,"53":39,"54":1,"55":9,"56":9,"57":9,"58":9,"59":9,"60":9,"61":9,"62":9,"63":9,"64":0,"65":0,"66":1,"67":116,"68":116,"69":116,"70":116,"71":116,"72":116,"73":342,"74":342,"75":114,"76":0,"77":0,"78":116,"79":1,"80":17,"81":17,"82":17,"83":17,"84":0,"85":0,"86":1,"87":38,"88":38,"89":38,"90":2455256,"91":2455256,"92":38,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":38,"100":38,"101":38,"102":38,"103":38,"104":38,"105":38,"106":38,"107":0,"108":0,"109":0,"110":1,"111":8,"112":8,"113":8,"114":8,"115":0,"116":0,"117":1},"f":{"0":103,"1":496,"2":0,"3":1,"4":0,"5":1,"6":4,"7":173,"8":54,"9":9,"10":116,"11":17,"12":38,"13":0,"14":38,"15":38,"16":8},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[3,1],"18":[4,4],"19":[135,0],"20":[135,135],"21":[135,0],"22":[39,0],"23":[9,0],"24":[114,228],"25":[342,114],"26":[38,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/FileManagement.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/FileManagement.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"path\";\nimport * as fs from \"fs\";\nimport { InsightDatasetKind, InsightError } from \"../controller/IInsightFacade\";\nimport Dataset from \"./Dataset\";\nimport Section from \"./Section\";\nimport Room from \"./Room\";\n\nconst directoryPath = path.join(__dirname, \"..\", \"..\", \"data\"); // Moves up two level to project file root\nconst kindKeyword = \"kind\";\nconst rowsKeyword = \"rows\";\n\nexport async function createDataFolder(): Promise<void> {\n\ttry {\n\t\tawait fs.promises.mkdir(directoryPath);\n\t\t//console.log('Folder \"data\" created.');\n\t} catch (err) {\n\t\tif (err instanceof Error && (err as NodeJS.ErrnoException).code) {\n\t\t\tconst errorCode = (err as NodeJS.ErrnoException).code;\n\t\t\tif (errorCode === \"EEXIST\") {\n\t\t\t\t// Used ChatGPT here to figure out if folder already exists\n\t\t\t\t//console.log('Folder \"data\" already exists.');\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Error making data folder: \" + (err as Error).message);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"Error making data folder: \" + (err as Error).message);\n\t\t}\n\t}\n}\n\nexport async function saveDatasetToDataCache(id: string, dataset: Dataset, kind: InsightDatasetKind): Promise<void> {\n\tconst indentation = 2;\n\tlet filePath = path.join(directoryPath, `${id}.json`);\n\tconst jsonContent = JSON.stringify(dataset.toJSON(), null, indentation); // Convert to JSON into a string so we can save to file\n\tawait fs.promises.writeFile(filePath, jsonContent); // writing the json file\n\n\t// Now we are storing the kind of the dataset it is storing it in a file\n\tfilePath = path.join(directoryPath, `${id}` + kindKeyword);\n\tawait fs.promises.writeFile(filePath, kind); // writing the json file\n\n\t// Now we are storing the sections/rows of the dataset in a file\n\t// We only need to do this for sections datasets\n\tif (kind === InsightDatasetKind.Sections) {\n\t\tfilePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\t\tawait fs.promises.writeFile(filePath, dataset.getEntities().length + \"\"); // writing the json file\n\t}\n}\n\nexport async function removeDatasetFromDataCache(id: string): Promise<void> {\n\tlet filePath = path.join(directoryPath, `${id}.json`);\n\n\tconst datasetKind = await getKindFromId(id);\n\n\ttry {\n\t\tawait fs.promises.unlink(filePath); // remove the file from the cache\n\n\t\t// delete idKind\n\t\tfilePath = path.join(directoryPath, `${id}` + kindKeyword);\n\t\tawait fs.promises.unlink(filePath); // writing the json file\n\n\t\t// delete idRows\n\t\tif (datasetKind === InsightDatasetKind.Sections) {\n\t\t\tfilePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\t\t\tawait fs.promises.unlink(filePath); // writing the json file\n\t\t}\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\nexport async function getAllCachedDatasetIds(): Promise<string[]> {\n\tconst idArray: string[] = [];\n\tconst splitArrLength = 2;\n\n\tawait createDataFolder(); // create data folder just in case\n\n\ttry {\n\t\tconst datasetFileNames = await fs.promises.readdir(directoryPath);\n\n\t\t// Add all file (dataset) names into the array that we return\n\t\tfor (const datasetName of datasetFileNames) {\n\t\t\tconst splitNameArr = datasetName.split(\".\"); // Here we split on the period so \"dataset.json\" turns into [dataset, json], then we just keep the name which is at index 0\n\n\t\t\tif (splitNameArr.length === splitArrLength && splitNameArr[1] === \"json\") {\n\t\t\t\t// make sure we only add the id names gotten from jsons (because we have other files that store the number of rows and also the kind of dataset)\n\t\t\t\tidArray.push(splitNameArr[0]); // Here we split on the period so \"dataset.json\" turns into [dataset, json], then we just keep the name which is at index 0\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n\treturn idArray;\n}\n\nexport async function getKindFromId(id: string): Promise<InsightDatasetKind> {\n\ttry {\n\t\tconst filePath = path.join(directoryPath, `${id}` + kindKeyword);\n\n\t\t// Read the contents of the file\n\t\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\t\treturn content as unknown as InsightDatasetKind;\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\ninterface SectionData {\n\tuuid: string;\n\tid: string;\n\ttitle: string;\n\tinstructor: string;\n\tdept: string;\n\tyear: number;\n\tavg: number;\n\tpass: number;\n\tfail: number;\n\taudit: number;\n\tsection: string;\n}\n\ninterface RoomData {\n\tfullname: string;\n\tshortname: string;\n\tnumber: string;\n\tname: string;\n\taddress: string;\n\tlat: number;\n\tlon: number;\n\tseats: number;\n\ttype: string;\n\tfurniture: string;\n\thref: string;\n}\n\nfunction createSectionDatasetFromJson(content: string): Dataset {\n\tconst sectionArray: Section[] = [];\n\n\tconst { sections } = JSON.parse(content);\n\n\tfor (const section of sections) {\n\t\tconst sectionDataObj: SectionData = section;\n\n\t\tsectionArray.push(\n\t\t\tnew Section(\n\t\t\t\tString(sectionDataObj.uuid),\n\t\t\t\tString(sectionDataObj.id),\n\t\t\t\tString(sectionDataObj.title),\n\t\t\t\tString(sectionDataObj.instructor),\n\t\t\t\tString(sectionDataObj.dept),\n\t\t\t\tNumber(sectionDataObj.year),\n\t\t\t\tNumber(sectionDataObj.avg),\n\t\t\t\tNumber(sectionDataObj.pass),\n\t\t\t\tNumber(sectionDataObj.fail),\n\t\t\t\tNumber(sectionDataObj.audit),\n\t\t\t\tString(sectionDataObj.section)\n\t\t\t)\n\t\t);\n\t}\n\n\treturn new Dataset(sectionArray, InsightDatasetKind.Sections);\n}\n\nfunction createRoomDatasetFromJson(content: string): Dataset {\n\tconst roomArray: Room[] = [];\n\n\tconst { rooms } = JSON.parse(content);\n\n\tfor (const room of rooms) {\n\t\tconst roomDataObj: RoomData = room;\n\n\t\troomArray.push(\n\t\t\tnew Room(\n\t\t\t\tString(roomDataObj.fullname),\n\t\t\t\tString(roomDataObj.shortname),\n\t\t\t\tString(roomDataObj.number),\n\t\t\t\tString(roomDataObj.name),\n\t\t\t\tString(roomDataObj.address),\n\t\t\t\tNumber(roomDataObj.lat),\n\t\t\t\tNumber(roomDataObj.number),\n\t\t\t\tNumber(roomDataObj.seats),\n\t\t\t\tString(roomDataObj.type),\n\t\t\t\tString(roomDataObj.furniture),\n\t\t\t\tString(roomDataObj.href)\n\t\t\t)\n\t\t);\n\t}\n\n\treturn new Dataset(roomArray, InsightDatasetKind.Sections);\n}\n\nasync function loadJsonFileById(id: string): Promise<string> {\n\tconst filePath = path.join(directoryPath, `${id}` + \".json\");\n\n\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\treturn content;\n}\n\nexport async function getDatasetFromId(id: string): Promise<Dataset> {\n\ttry {\n\t\tconst content = await loadJsonFileById(id);\n\n\t\tconst { kind } = JSON.parse(content);\n\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\treturn createSectionDatasetFromJson(content);\n\t\t}\n\n\t\treturn createRoomDatasetFromJson(content);\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\nexport async function getRowsFromId(id: string): Promise<number> {\n\ttry {\n\t\tconst filePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\n\t\t// Read the contents of the file\n\t\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\t\treturn Number(content);\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7d3189bcc8050ef28459e7df79a07f558ada23d7","contentHash":"010d62fdc335f4456ee261694bdcddcaffbf5ad809b47b554aac4be831e72ee4"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Dataset.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":9,"column":8},"end":{"line":14,"column":9}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":41}},"4":{"start":{"line":13,"column":12},"end":{"line":13,"column":44}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"6":{"start":{"line":18,"column":8},"end":{"line":23,"column":9}},"7":{"start":{"line":19,"column":12},"end":{"line":19,"column":30}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"9":{"start":{"line":26,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":27,"column":29},"end":{"line":27,"column":42}},"11":{"start":{"line":28,"column":12},"end":{"line":31,"column":14}},"12":{"start":{"line":30,"column":52},"end":{"line":30,"column":68}},"13":{"start":{"line":34,"column":26},"end":{"line":34,"column":36}},"14":{"start":{"line":35,"column":12},"end":{"line":38,"column":14}},"15":{"start":{"line":37,"column":46},"end":{"line":37,"column":59}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":39},"end":{"line":16,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":24,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":13},"end":{"line":40,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":39},"end":{"line":30,"column":40}},"loc":{"start":{"line":30,"column":52},"end":{"line":30,"column":68}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":36},"end":{"line":37,"column":37}},"loc":{"start":{"line":37,"column":46},"end":{"line":37,"column":59}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":14,"column":9}},{"start":{"line":9,"column":8},"end":{"line":14,"column":9}}],"line":9},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":23,"column":9}},{"start":{"line":18,"column":8},"end":{"line":23,"column":9}}],"line":18},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":39,"column":9}},{"start":{"line":26,"column":8},"end":{"line":39,"column":9}}],"line":26}},"s":{"0":1,"1":1,"2":78,"3":0,"4":78,"5":78,"6":77,"7":0,"8":77,"9":39,"10":39,"11":39,"12":65296,"13":0,"14":0,"15":0,"16":1},"f":{"0":78,"1":77,"2":39,"3":65296,"4":0},"b":{"0":[0,78],"1":[0,77],"2":[39,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Dataset.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Dataset.ts"],"names":[],"mappings":";;AAAA,iEAAkE;AAIlE,MAAM,OAAO;IACJ,QAAQ,CAAwB;IAChC,KAAK,CAAqB;IAC1B,IAAI,CAAqB;IAEjC,YAAY,eAAmC,EAAE,IAAwB;QACxE,IAAI,IAAI,KAAK,mCAAkB,CAAC,KAAK,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG,eAAyB,CAAC;SACvC;aAAM;YACN,IAAI,CAAC,QAAQ,GAAG,eAA4B,CAAC;SAC7C;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,WAAW;QACjB,IAAI,IAAI,CAAC,IAAI,KAAK,mCAAkB,CAAC,KAAK,EAAE;YAC3C,OAAO,IAAI,CAAC,KAAe,CAAC;SAC5B;aAAM;YACN,OAAO,IAAI,CAAC,QAAqB,CAAC;SAClC;IACF,CAAC;IAEM,MAAM;QACZ,IAAI,IAAI,CAAC,IAAI,KAAK,mCAAkB,CAAC,QAAQ,EAAE;YAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAqB,CAAC;YAC5C,OAAO;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aACrD,CAAC;SACF;aAAM;YACN,MAAM,KAAK,GAAG,IAAI,CAAC,KAAe,CAAC;YACnC,OAAO;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;aAC5C,CAAC;SACF;IACF,CAAC;CACD;AAED,kBAAe,OAAO,CAAC","sourcesContent":["import { InsightDatasetKind } from \"../controller/IInsightFacade\";\nimport Room from \"./Room\";\nimport Section from \"./Section\";\n\nclass Dataset {\n\tprivate sections: Section[] | undefined;\n\tprivate rooms: Room[] | undefined;\n\tprivate kind: InsightDatasetKind;\n\n\tconstructor(sectionsOrRooms: Section[] | Room[], kind: InsightDatasetKind) {\n\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\tthis.rooms = sectionsOrRooms as Room[];\n\t\t} else {\n\t\t\tthis.sections = sectionsOrRooms as Section[];\n\t\t}\n\t\tthis.kind = kind;\n\t}\n\n\tpublic getEntities(): Section[] | Room[] {\n\t\tif (this.kind === InsightDatasetKind.Rooms) {\n\t\t\treturn this.rooms as Room[];\n\t\t} else {\n\t\t\treturn this.sections as Section[];\n\t\t}\n\t}\n\n\tpublic toJSON(): object {\n\t\tif (this.kind === InsightDatasetKind.Sections) {\n\t\t\tconst sections = this.sections as Section[];\n\t\t\treturn {\n\t\t\t\tkind: this.kind,\n\t\t\t\tsections: sections.map((section) => section.toJSON()), // Converts each Section to JSON\n\t\t\t};\n\t\t} else {\n\t\t\tconst rooms = this.rooms as Room[];\n\t\t\treturn {\n\t\t\t\tkind: this.kind,\n\t\t\t\tsections: rooms.map((room) => room.toJSON()), // Converts each Room to JSON\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport default Dataset;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b1225ea06538e0d00113f91dd9d31e8622d75f6e","contentHash":"7478ba4f69e0e835c7015c25d54eec188180cf8a348ff5b33deda01db0081484"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Section.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":28}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"11":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"12":{"start":{"line":27,"column":12},"end":{"line":27,"column":29}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":25}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":26}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":31}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":25}},"22":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"24":{"start":{"line":64,"column":8},"end":{"line":76,"column":10}},"25":{"start":{"line":79,"column":0},"end":{"line":79,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":94},"end":{"line":32,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":14},"end":{"line":35,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":15},"end":{"line":41,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":20},"end":{"line":44,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":14},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":14},"end":{"line":50,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":13},"end":{"line":53,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":14},"end":{"line":56,"column":5}},"line":54},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":14},"end":{"line":59,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":15},"end":{"line":62,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":13},"end":{"line":77,"column":5}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26}},"s":{"0":1,"1":2520552,"2":2520552,"3":2520552,"4":2520552,"5":2520552,"6":2520552,"7":2520552,"8":2520552,"9":2520552,"10":2520552,"11":2520552,"12":960561,"13":1559991,"14":6202,"15":15054,"16":16054,"17":783706,"18":717218,"19":70992,"20":699986,"21":146509,"22":13596,"23":11878,"24":65296,"25":1},"f":{"0":2520552,"1":6202,"2":15054,"3":16054,"4":783706,"5":717218,"6":70992,"7":699986,"8":146509,"9":13596,"10":11878,"11":65296},"b":{"0":[960561,1559991]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Section.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Section.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO;IACJ,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IACd,OAAO,CAAS;IAExB,YACC,EAAU,EACV,MAAc,EACd,KAAa,EACb,SAAiB,EACjB,OAAe,EACf,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa,EACb,OAAe;QAEf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAGvB,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;aAAM;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;IACF,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,MAAM;QACZ,OAAO;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;SACrB,CAAC;IACH,CAAC;CACD;AAED,kBAAe,OAAO,CAAC","sourcesContent":["class Section {\n\tprivate uuid: string;\n\tprivate id: string;\n\tprivate title: string;\n\tprivate instructor: string;\n\tprivate dept: string;\n\tprivate year: number;\n\tprivate avg: number;\n\tprivate pass: number;\n\tprivate fail: number;\n\tprivate audit: number;\n\tprivate section: string; // We will not have a getter for this because I'm pretty sure in the specifications you can't query based on this parameter\n\n\tconstructor(\n\t\tid: string,\n\t\tcourse: string,\n\t\ttitle: string,\n\t\tprofessor: string,\n\t\tsubject: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number,\n\t\tsection: string\n\t) {\n\t\tthis.uuid = id;\n\t\tthis.id = course;\n\t\tthis.title = title;\n\t\tthis.instructor = professor;\n\t\tthis.dept = subject;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t\tthis.section = section;\n\n\t\t// As per the specifications, set year to 1900 if section is \"overall\"\n\t\tif (section === \"overall\") {\n\t\t\tthis.year = 1900;\n\t\t} else {\n\t\t\tthis.year = year;\n\t\t}\n\t}\n\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tinstructor: this.instructor,\n\t\t\tdept: this.dept,\n\t\t\tyear: this.year,\n\t\t\tavg: this.avg,\n\t\t\tpass: this.pass,\n\t\t\tfail: this.fail,\n\t\t\taudit: this.audit,\n\t\t\tsection: this.section,\n\t\t};\n\t}\n}\n\nexport default Section;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4320f919c52fcfe38b64d1ada9ca3a12adcf20dc","contentHash":"f344f59a285afc30a7ed226c1cf80b048b811785e069fe58ce96c2811a4b349f"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Room.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\objects\\Room.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":35}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":30}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":24}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":26}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"21":{"start":{"line":56,"column":8},"end":{"line":56,"column":30}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":25}},"23":{"start":{"line":62,"column":8},"end":{"line":74,"column":10}},"24":{"start":{"line":77,"column":0},"end":{"line":77,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":100},"end":{"line":27,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":19},"end":{"line":33,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":14},"end":{"line":39,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":42,"column":5}},"line":40},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":13},"end":{"line":45,"column":5}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":13},"end":{"line":48,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":5}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":14},"end":{"line":54,"column":5}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":19},"end":{"line":57,"column":5}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":14},"end":{"line":60,"column":5}},"line":58},"12":{"name":"(anonymous_12)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":13},"end":{"line":75,"column":5}},"line":61}},"branchMap":{},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Room.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/objects/Room.ts"],"names":[],"mappings":";;AAAA,MAAM,IAAI;IACD,QAAQ,CAAS;IACjB,SAAS,CAAS;IAClB,MAAM,CAAS;IACf,IAAI,CAAS;IACb,OAAO,CAAS;IAChB,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,KAAK,CAAS;IACd,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,IAAI,CAAS;IAErB,YACC,QAAgB,EAChB,SAAiB,EACjB,MAAc,EACd,IAAY,EACZ,OAAe,EACf,GAAW,EACX,GAAW,EACX,KAAa,EACb,IAAY,EACZ,SAAiB,EACjB,IAAY;QAEZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO;YACN,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;IACH,CAAC;CACD;AAED,kBAAe,IAAI,CAAC","sourcesContent":["class Room {\n\tprivate fullname: string;\n\tprivate shortname: string;\n\tprivate number: string;\n\tprivate name: string;\n\tprivate address: string;\n\tprivate lat: number;\n\tprivate lon: number;\n\tprivate seats: number;\n\tprivate type: string;\n\tprivate furniture: string;\n\tprivate href: string;\n\n\tconstructor(\n\t\tfullname: string,\n\t\tshortname: string,\n\t\tnumber: string,\n\t\tname: string,\n\t\taddress: string,\n\t\tlat: number,\n\t\tlon: number,\n\t\tseats: number,\n\t\ttype: string,\n\t\tfurniture: string,\n\t\thref: string\n\t) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.type = type;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n\n\tpublic getFullName(): string {\n\t\treturn this.fullname;\n\t}\n\n\tpublic getShortName(): string {\n\t\treturn this.shortname;\n\t}\n\n\tpublic getNumber(): string {\n\t\treturn this.number;\n\t}\n\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getAddress(): string {\n\t\treturn this.address;\n\t}\n\n\tpublic getLat(): number {\n\t\treturn this.lat;\n\t}\n\n\tpublic getLon(): number {\n\t\treturn this.lon;\n\t}\n\n\tpublic getSeats(): number {\n\t\treturn this.seats;\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getFurniture(): string {\n\t\treturn this.furniture;\n\t}\n\n\tpublic getHref(): string {\n\t\treturn this.href;\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn {\n\t\t\tfullname: this.fullname,\n\t\t\tshortname: this.shortname,\n\t\t\tnumber: this.number,\n\t\t\tname: this.name,\n\t\t\taddress: this.address,\n\t\t\tlat: this.lat,\n\t\t\tlon: this.lon,\n\t\t\tseats: this.seats,\n\t\t\ttype: this.type,\n\t\t\tfurniture: this.furniture,\n\t\t\thref: this.href,\n\t\t};\n\t}\n}\n\nexport default Room;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"54892e5041bf3755aa026e0fe5cc498bb7da6157","contentHash":"2413f21587ee9e9e3d3f0d753753140cacd6532c35dc36febb3bd023cef19f11"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\QueryHandler.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\QueryHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":61}},"4":{"start":{"line":6,"column":49},"end":{"line":6,"column":100}},"5":{"start":{"line":7,"column":26},"end":{"line":7,"column":54}},"6":{"start":{"line":8,"column":28},"end":{"line":8,"column":58}},"7":{"start":{"line":9,"column":49},"end":{"line":9,"column":100}},"8":{"start":{"line":10,"column":29},"end":{"line":10,"column":60}},"9":{"start":{"line":11,"column":20},"end":{"line":11,"column":24}},"10":{"start":{"line":13,"column":4},"end":{"line":30,"column":5}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":58}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":57}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":66}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":63}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":62}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":57}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":58}},"18":{"start":{"line":29,"column":12},"end":{"line":29,"column":24}},"19":{"start":{"line":33,"column":4},"end":{"line":56,"column":5}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":42}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":40}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":43}},"23":{"start":{"line":41,"column":12},"end":{"line":41,"column":48}},"24":{"start":{"line":43,"column":12},"end":{"line":43,"column":42}},"25":{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":41}},"27":{"start":{"line":49,"column":12},"end":{"line":49,"column":42}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":42}},"29":{"start":{"line":53,"column":12},"end":{"line":53,"column":43}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":94}},"31":{"start":{"line":59,"column":33},"end":{"line":59,"column":132}},"32":{"start":{"line":60,"column":25},"end":{"line":60,"column":48}},"33":{"start":{"line":61,"column":27},"end":{"line":61,"column":50}},"34":{"start":{"line":62,"column":25},"end":{"line":62,"column":79}},"35":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"36":{"start":{"line":64,"column":8},"end":{"line":64,"column":80}},"37":{"start":{"line":66,"column":4},"end":{"line":66,"column":41}},"38":{"start":{"line":69,"column":33},"end":{"line":69,"column":132}},"39":{"start":{"line":70,"column":25},"end":{"line":70,"column":48}},"40":{"start":{"line":71,"column":27},"end":{"line":71,"column":50}},"41":{"start":{"line":72,"column":25},"end":{"line":72,"column":79}},"42":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"43":{"start":{"line":74,"column":8},"end":{"line":74,"column":80}},"44":{"start":{"line":76,"column":4},"end":{"line":76,"column":41}},"45":{"start":{"line":79,"column":33},"end":{"line":79,"column":132}},"46":{"start":{"line":80,"column":25},"end":{"line":80,"column":48}},"47":{"start":{"line":81,"column":27},"end":{"line":81,"column":50}},"48":{"start":{"line":82,"column":25},"end":{"line":82,"column":79}},"49":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"50":{"start":{"line":84,"column":8},"end":{"line":84,"column":80}},"51":{"start":{"line":86,"column":4},"end":{"line":86,"column":43}},"52":{"start":{"line":89,"column":33},"end":{"line":89,"column":131}},"53":{"start":{"line":90,"column":25},"end":{"line":90,"column":48}},"54":{"start":{"line":91,"column":27},"end":{"line":91,"column":50}},"55":{"start":{"line":92,"column":4},"end":{"line":92,"column":70}},"56":{"start":{"line":93,"column":25},"end":{"line":93,"column":79}},"57":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"58":{"start":{"line":95,"column":8},"end":{"line":95,"column":80}},"59":{"start":{"line":97,"column":4},"end":{"line":108,"column":5}},"60":{"start":{"line":98,"column":8},"end":{"line":98,"column":73}},"61":{"start":{"line":100,"column":9},"end":{"line":108,"column":5}},"62":{"start":{"line":101,"column":8},"end":{"line":101,"column":73}},"63":{"start":{"line":103,"column":9},"end":{"line":108,"column":5}},"64":{"start":{"line":104,"column":8},"end":{"line":104,"column":75}},"65":{"start":{"line":107,"column":8},"end":{"line":107,"column":47}},"66":{"start":{"line":111,"column":29},"end":{"line":111,"column":139}},"67":{"start":{"line":112,"column":21},"end":{"line":112,"column":40}},"68":{"start":{"line":113,"column":26},"end":{"line":113,"column":45}},"69":{"start":{"line":114,"column":4},"end":{"line":114,"column":78}},"70":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"71":{"start":{"line":118,"column":8},"end":{"line":118,"column":82}},"72":{"start":{"line":120,"column":4},"end":{"line":127,"column":5}},"73":{"start":{"line":121,"column":33},"end":{"line":121,"column":135}},"74":{"start":{"line":122,"column":25},"end":{"line":122,"column":44}},"75":{"start":{"line":123,"column":30},"end":{"line":123,"column":49}},"76":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"77":{"start":{"line":125,"column":12},"end":{"line":125,"column":25}},"78":{"start":{"line":128,"column":4},"end":{"line":128,"column":16}},"79":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"80":{"start":{"line":132,"column":8},"end":{"line":132,"column":81}},"81":{"start":{"line":134,"column":4},"end":{"line":141,"column":5}},"82":{"start":{"line":135,"column":33},"end":{"line":135,"column":135}},"83":{"start":{"line":136,"column":25},"end":{"line":136,"column":44}},"84":{"start":{"line":137,"column":30},"end":{"line":137,"column":49}},"85":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"86":{"start":{"line":139,"column":12},"end":{"line":139,"column":24}},"87":{"start":{"line":142,"column":4},"end":{"line":142,"column":17}},"88":{"start":{"line":145,"column":4},"end":{"line":154,"column":5}},"89":{"start":{"line":146,"column":8},"end":{"line":153,"column":9}},"90":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"91":{"start":{"line":148,"column":16},"end":{"line":148,"column":33}},"92":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"93":{"start":{"line":151,"column":16},"end":{"line":151,"column":56}},"94":{"start":{"line":155,"column":4},"end":{"line":155,"column":18}},"95":{"start":{"line":157,"column":0},"end":{"line":157,"column":54}},"96":{"start":{"line":159,"column":4},"end":{"line":190,"column":5}},"97":{"start":{"line":161,"column":12},"end":{"line":161,"column":82}},"98":{"start":{"line":161,"column":42},"end":{"line":161,"column":80}},"99":{"start":{"line":162,"column":12},"end":{"line":162,"column":18}},"100":{"start":{"line":164,"column":12},"end":{"line":164,"column":78}},"101":{"start":{"line":164,"column":42},"end":{"line":164,"column":76}},"102":{"start":{"line":165,"column":12},"end":{"line":165,"column":18}},"103":{"start":{"line":167,"column":12},"end":{"line":167,"column":84}},"104":{"start":{"line":167,"column":42},"end":{"line":167,"column":82}},"105":{"start":{"line":168,"column":12},"end":{"line":168,"column":18}},"106":{"start":{"line":170,"column":12},"end":{"line":170,"column":94}},"107":{"start":{"line":170,"column":42},"end":{"line":170,"column":92}},"108":{"start":{"line":171,"column":12},"end":{"line":171,"column":18}},"109":{"start":{"line":173,"column":12},"end":{"line":173,"column":82}},"110":{"start":{"line":173,"column":42},"end":{"line":173,"column":80}},"111":{"start":{"line":174,"column":12},"end":{"line":174,"column":18}},"112":{"start":{"line":176,"column":12},"end":{"line":176,"column":69}},"113":{"start":{"line":176,"column":42},"end":{"line":176,"column":67}},"114":{"start":{"line":177,"column":12},"end":{"line":177,"column":18}},"115":{"start":{"line":179,"column":12},"end":{"line":179,"column":67}},"116":{"start":{"line":179,"column":42},"end":{"line":179,"column":65}},"117":{"start":{"line":180,"column":12},"end":{"line":180,"column":18}},"118":{"start":{"line":182,"column":12},"end":{"line":182,"column":69}},"119":{"start":{"line":182,"column":42},"end":{"line":182,"column":67}},"120":{"start":{"line":183,"column":12},"end":{"line":183,"column":18}},"121":{"start":{"line":185,"column":12},"end":{"line":185,"column":69}},"122":{"start":{"line":185,"column":42},"end":{"line":185,"column":67}},"123":{"start":{"line":186,"column":12},"end":{"line":186,"column":18}},"124":{"start":{"line":188,"column":12},"end":{"line":188,"column":71}},"125":{"start":{"line":188,"column":42},"end":{"line":188,"column":69}},"126":{"start":{"line":189,"column":12},"end":{"line":189,"column":18}},"127":{"start":{"line":193,"column":35},"end":{"line":193,"column":37}},"128":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"129":{"start":{"line":195,"column":8},"end":{"line":195,"column":73}},"130":{"start":{"line":197,"column":4},"end":{"line":205,"column":5}},"131":{"start":{"line":198,"column":30},"end":{"line":198,"column":32}},"132":{"start":{"line":199,"column":8},"end":{"line":203,"column":9}},"133":{"start":{"line":200,"column":39},"end":{"line":200,"column":53}},"134":{"start":{"line":201,"column":29},"end":{"line":201,"column":50}},"135":{"start":{"line":202,"column":12},"end":{"line":202,"column":84}},"136":{"start":{"line":204,"column":8},"end":{"line":204,"column":51}},"137":{"start":{"line":206,"column":4},"end":{"line":206,"column":34}},"138":{"start":{"line":208,"column":0},"end":{"line":208,"column":46}},"139":{"start":{"line":210,"column":4},"end":{"line":210,"column":48}},"140":{"start":{"line":211,"column":22},"end":{"line":211,"column":27}},"141":{"start":{"line":212,"column":29},"end":{"line":212,"column":127}},"142":{"start":{"line":213,"column":21},"end":{"line":213,"column":40}},"143":{"start":{"line":214,"column":30},"end":{"line":214,"column":49}},"144":{"start":{"line":215,"column":40},"end":{"line":215,"column":138}},"145":{"start":{"line":216,"column":42},"end":{"line":216,"column":116}},"146":{"start":{"line":217,"column":24},"end":{"line":217,"column":53}},"147":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"148":{"start":{"line":219,"column":8},"end":{"line":219,"column":106}},"149":{"start":{"line":221,"column":27},"end":{"line":221,"column":84}},"150":{"start":{"line":222,"column":29},"end":{"line":222,"column":31}},"151":{"start":{"line":223,"column":4},"end":{"line":230,"column":5}},"152":{"start":{"line":224,"column":8},"end":{"line":229,"column":9}},"153":{"start":{"line":225,"column":12},"end":{"line":225,"column":43}},"154":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"155":{"start":{"line":227,"column":16},"end":{"line":227,"column":116}},"156":{"start":{"line":231,"column":4},"end":{"line":231,"column":28}},"157":{"start":{"line":233,"column":0},"end":{"line":233,"column":50}}},"fnMap":{"0":{"name":"sectionMatchesQueryRequirements","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":40}},"loc":{"start":{"line":12,"column":86},"end":{"line":31,"column":1}},"line":12},"1":{"name":"getSectionValueFromConditionKey","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":40}},"loc":{"start":{"line":32,"column":69},"end":{"line":57,"column":1}},"line":32},"2":{"name":"greaterThan","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":20}},"loc":{"start":{"line":58,"column":49},"end":{"line":67,"column":1}},"line":58},"3":{"name":"lessThan","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":17}},"loc":{"start":{"line":68,"column":46},"end":{"line":77,"column":1}},"line":68},"4":{"name":"equalTo","decl":{"start":{"line":78,"column":9},"end":{"line":78,"column":16}},"loc":{"start":{"line":78,"column":45},"end":{"line":87,"column":1}},"line":78},"5":{"name":"is","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":11}},"loc":{"start":{"line":88,"column":40},"end":{"line":109,"column":1}},"line":88},"6":{"name":"not","decl":{"start":{"line":110,"column":9},"end":{"line":110,"column":12}},"loc":{"start":{"line":110,"column":41},"end":{"line":115,"column":1}},"line":110},"7":{"name":"and","decl":{"start":{"line":116,"column":9},"end":{"line":116,"column":12}},"loc":{"start":{"line":116,"column":41},"end":{"line":129,"column":1}},"line":116},"8":{"name":"or","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":11}},"loc":{"start":{"line":130,"column":40},"end":{"line":143,"column":1}},"line":130},"9":{"name":"getKeysWithUnderscore","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":30}},"loc":{"start":{"line":144,"column":49},"end":{"line":156,"column":1}},"line":144},"10":{"name":"sortSectionUsingKey","decl":{"start":{"line":158,"column":9},"end":{"line":158,"column":28}},"loc":{"start":{"line":158,"column":59},"end":{"line":191,"column":1}},"line":158},"11":{"name":"(anonymous_11)","decl":{"start":{"line":161,"column":32},"end":{"line":161,"column":33}},"loc":{"start":{"line":161,"column":42},"end":{"line":161,"column":80}},"line":161},"12":{"name":"(anonymous_12)","decl":{"start":{"line":164,"column":32},"end":{"line":164,"column":33}},"loc":{"start":{"line":164,"column":42},"end":{"line":164,"column":76}},"line":164},"13":{"name":"(anonymous_13)","decl":{"start":{"line":167,"column":32},"end":{"line":167,"column":33}},"loc":{"start":{"line":167,"column":42},"end":{"line":167,"column":82}},"line":167},"14":{"name":"(anonymous_14)","decl":{"start":{"line":170,"column":32},"end":{"line":170,"column":33}},"loc":{"start":{"line":170,"column":42},"end":{"line":170,"column":92}},"line":170},"15":{"name":"(anonymous_15)","decl":{"start":{"line":173,"column":32},"end":{"line":173,"column":33}},"loc":{"start":{"line":173,"column":42},"end":{"line":173,"column":80}},"line":173},"16":{"name":"(anonymous_16)","decl":{"start":{"line":176,"column":32},"end":{"line":176,"column":33}},"loc":{"start":{"line":176,"column":42},"end":{"line":176,"column":67}},"line":176},"17":{"name":"(anonymous_17)","decl":{"start":{"line":179,"column":32},"end":{"line":179,"column":33}},"loc":{"start":{"line":179,"column":42},"end":{"line":179,"column":65}},"line":179},"18":{"name":"(anonymous_18)","decl":{"start":{"line":182,"column":32},"end":{"line":182,"column":33}},"loc":{"start":{"line":182,"column":42},"end":{"line":182,"column":67}},"line":182},"19":{"name":"(anonymous_19)","decl":{"start":{"line":185,"column":32},"end":{"line":185,"column":33}},"loc":{"start":{"line":185,"column":42},"end":{"line":185,"column":67}},"line":185},"20":{"name":"(anonymous_20)","decl":{"start":{"line":188,"column":32},"end":{"line":188,"column":33}},"loc":{"start":{"line":188,"column":42},"end":{"line":188,"column":69}},"line":188},"21":{"name":"parseSectionsData","decl":{"start":{"line":192,"column":9},"end":{"line":192,"column":26}},"loc":{"start":{"line":192,"column":44},"end":{"line":207,"column":1}},"line":192},"22":{"name":"getAllValidSections","decl":{"start":{"line":209,"column":15},"end":{"line":209,"column":34}},"loc":{"start":{"line":209,"column":42},"end":{"line":232,"column":1}},"line":209}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":30,"column":5}},"type":"switch","locations":[{"start":{"line":14,"column":8},"end":{"line":15,"column":58}},{"start":{"line":16,"column":8},"end":{"line":17,"column":57}},{"start":{"line":18,"column":8},"end":{"line":19,"column":66}},{"start":{"line":20,"column":8},"end":{"line":21,"column":63}},{"start":{"line":22,"column":8},"end":{"line":23,"column":62}},{"start":{"line":24,"column":8},"end":{"line":25,"column":57}},{"start":{"line":26,"column":8},"end":{"line":27,"column":58}},{"start":{"line":28,"column":8},"end":{"line":29,"column":24}}],"line":13},"1":{"loc":{"start":{"line":33,"column":4},"end":{"line":56,"column":5}},"type":"switch","locations":[{"start":{"line":34,"column":8},"end":{"line":35,"column":42}},{"start":{"line":36,"column":8},"end":{"line":37,"column":40}},{"start":{"line":38,"column":8},"end":{"line":39,"column":43}},{"start":{"line":40,"column":8},"end":{"line":41,"column":48}},{"start":{"line":42,"column":8},"end":{"line":43,"column":42}},{"start":{"line":44,"column":8},"end":{"line":45,"column":42}},{"start":{"line":46,"column":8},"end":{"line":47,"column":41}},{"start":{"line":48,"column":8},"end":{"line":49,"column":42}},{"start":{"line":50,"column":8},"end":{"line":51,"column":42}},{"start":{"line":52,"column":8},"end":{"line":53,"column":43}},{"start":{"line":54,"column":8},"end":{"line":55,"column":94}}],"line":33},"2":{"loc":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},{"start":{"line":63,"column":4},"end":{"line":65,"column":5}}],"line":63},"3":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{"line":73,"column":4},"end":{"line":75,"column":5}}],"line":73},"4":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{"line":83,"column":4},"end":{"line":85,"column":5}}],"line":83},"5":{"loc":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},{"start":{"line":94,"column":4},"end":{"line":96,"column":5}}],"line":94},"6":{"loc":{"start":{"line":97,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":108,"column":5}},{"start":{"line":97,"column":4},"end":{"line":108,"column":5}}],"line":97},"7":{"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":100}},"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":40}},{"start":{"line":97,"column":44},"end":{"line":97,"column":100}}],"line":97},"8":{"loc":{"start":{"line":100,"column":9},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":108,"column":5}},{"start":{"line":100,"column":9},"end":{"line":108,"column":5}}],"line":100},"9":{"loc":{"start":{"line":103,"column":9},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":9},"end":{"line":108,"column":5}},{"start":{"line":103,"column":9},"end":{"line":108,"column":5}}],"line":103},"10":{"loc":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},{"start":{"line":117,"column":4},"end":{"line":119,"column":5}}],"line":117},"11":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"12":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{"line":131,"column":4},"end":{"line":133,"column":5}}],"line":131},"13":{"loc":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},{"start":{"line":138,"column":8},"end":{"line":140,"column":9}}],"line":138},"14":{"loc":{"start":{"line":144,"column":36},"end":{"line":144,"column":47}},"type":"default-arg","locations":[{"start":{"line":144,"column":45},"end":{"line":144,"column":47}}],"line":144},"15":{"loc":{"start":{"line":146,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":153,"column":9}},{"start":{"line":146,"column":8},"end":{"line":153,"column":9}}],"line":146},"16":{"loc":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},{"start":{"line":147,"column":12},"end":{"line":149,"column":13}}],"line":147},"17":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},{"start":{"line":150,"column":12},"end":{"line":152,"column":13}}],"line":150},"18":{"loc":{"start":{"line":150,"column":16},"end":{"line":150,"column":65}},"type":"binary-expr","locations":[{"start":{"line":150,"column":16},"end":{"line":150,"column":44}},{"start":{"line":150,"column":48},"end":{"line":150,"column":65}}],"line":150},"19":{"loc":{"start":{"line":159,"column":4},"end":{"line":190,"column":5}},"type":"switch","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":18}},{"start":{"line":163,"column":8},"end":{"line":165,"column":18}},{"start":{"line":166,"column":8},"end":{"line":168,"column":18}},{"start":{"line":169,"column":8},"end":{"line":171,"column":18}},{"start":{"line":172,"column":8},"end":{"line":174,"column":18}},{"start":{"line":175,"column":8},"end":{"line":177,"column":18}},{"start":{"line":178,"column":8},"end":{"line":180,"column":18}},{"start":{"line":181,"column":8},"end":{"line":183,"column":18}},{"start":{"line":184,"column":8},"end":{"line":186,"column":18}},{"start":{"line":187,"column":8},"end":{"line":189,"column":18}}],"line":159},"20":{"loc":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},{"start":{"line":194,"column":4},"end":{"line":196,"column":5}}],"line":194},"21":{"loc":{"start":{"line":194,"column":8},"end":{"line":194,"column":73}},"type":"binary-expr","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":36}},{"start":{"line":194,"column":40},"end":{"line":194,"column":73}}],"line":194},"22":{"loc":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},{"start":{"line":218,"column":4},"end":{"line":220,"column":5}}],"line":218},"23":{"loc":{"start":{"line":218,"column":8},"end":{"line":218,"column":107}},"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":42}},{"start":{"line":218,"column":46},"end":{"line":218,"column":107}}],"line":218},"24":{"loc":{"start":{"line":224,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":229,"column":9}},{"start":{"line":224,"column":8},"end":{"line":229,"column":9}}],"line":224},"25":{"loc":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},{"start":{"line":226,"column":12},"end":{"line":228,"column":13}}],"line":226}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3644763,"11":452190,"12":766856,"13":129610,"14":56081,"15":581505,"16":1470677,"17":177842,"18":10002,"19":2312857,"20":6190,"21":6190,"22":6190,"23":774754,"24":715872,"25":62206,"26":593490,"27":135521,"28":6254,"29":6190,"30":0,"31":129610,"32":129609,"33":129609,"34":129609,"35":129609,"36":0,"37":129609,"38":56081,"39":56080,"40":56080,"41":56080,"42":56080,"43":0,"44":56080,"45":581505,"46":581501,"47":581501,"48":581501,"49":581501,"50":0,"51":581501,"52":1470677,"53":1470674,"54":1470674,"55":1470674,"56":1470673,"57":1470673,"58":0,"59":1470673,"60":840611,"61":630062,"62":64612,"63":565450,"64":64612,"65":500838,"66":177842,"67":177842,"68":177842,"69":177842,"70":452190,"71":1,"72":452189,"73":695683,"74":695683,"75":695683,"76":695683,"77":451036,"78":1153,"79":766856,"80":1,"81":766855,"82":1210536,"83":1210536,"84":1210536,"85":1210536,"86":6194,"87":760661,"88":165,"89":181,"90":181,"91":58,"92":181,"93":123,"94":165,"95":1,"96":20,"97":1,"98":6,"99":1,"100":1,"101":4432,"102":1,"103":1,"104":4932,"105":1,"106":1,"107":4476,"108":1,"109":1,"110":673,"111":1,"112":1,"113":4393,"114":1,"115":10,"116":53248,"117":10,"118":2,"119":5494,"120":2,"121":1,"122":3671,"123":1,"124":1,"125":2844,"126":1,"127":24,"128":24,"129":20,"130":24,"131":12713,"132":12713,"133":74994,"134":74994,"135":74994,"136":12713,"137":24,"138":1,"139":57,"140":42,"141":42,"142":42,"143":42,"144":42,"145":39,"146":38,"147":38,"148":0,"149":38,"150":38,"151":38,"152":1560702,"153":22715,"154":22715,"155":2,"156":24,"157":1},"f":{"0":3644763,"1":2312857,"2":129610,"3":56081,"4":581505,"5":1470677,"6":177842,"7":452190,"8":766856,"9":165,"10":20,"11":6,"12":4432,"13":4932,"14":4476,"15":673,"16":4393,"17":53248,"18":5494,"19":3671,"20":2844,"21":24,"22":57},"b":{"0":[452190,766856,129610,56081,581505,1470677,177842,10002],"1":[6190,6190,6190,774754,715872,62206,593490,135521,6254,6190,0],"2":[0,129609],"3":[0,56080],"4":[0,581501],"5":[0,1470673],"6":[840611,630062],"7":[1470673,905223],"8":[64612,565450],"9":[64612,500838],"10":[1,452189],"11":[451036,244647],"12":[1,766855],"13":[6194,1204342],"14":[42],"15":[181,0],"16":[58,123],"17":[123,58],"18":[181,124],"19":[1,1,1,1,1,1,10,2,1,1],"20":[20,4],"21":[24,24],"22":[0,38],"23":[38,34],"24":[22715,1537975],"25":[2,22713]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/QueryHandler.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/QueryHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult, ResultTooLargeError } from \"../controller/IInsightFacade\";\nimport { getDatasetFromId } from \"../objects/FileManagement\";\nimport Section from \"../objects/Section\";\nimport { extractAndValidateLogicalOperatorAndParameter } from \"./LogicalOperatorExtractionAndValidation\";\nimport { validateQuery } from \"./QueryValidation\";\nimport {\n\tvalidateAndExtractSectionFieldAndComparisonValue,\n\tvalidateOptionsAndGetSingleDataset,\n} from \"./ValidationHelpers\";\nimport { validateDatasetRefsInWhereAndGetSingleDataset } from \"./WhereDatasetExtractorAndRefsValidation\";\nimport { checkAstericksPlacement } from \"./WildcardValidation\";\n\nconst maxSections = 5000;\n\nfunction sectionMatchesQueryRequirements(\n\toperator: string,\n\toperatorParameter: string,\n\tsectionToCheck: Section\n): boolean {\n\tswitch (operator) {\n\t\tcase \"AND\":\n\t\t\treturn and(sectionToCheck, operatorParameter);\n\t\tcase \"OR\":\n\t\t\treturn or(sectionToCheck, operatorParameter);\n\t\tcase \"GT\":\n\t\t\treturn greaterThan(sectionToCheck, operatorParameter);\n\t\tcase \"LT\":\n\t\t\treturn lessThan(sectionToCheck, operatorParameter);\n\t\tcase \"EQ\":\n\t\t\treturn equalTo(sectionToCheck, operatorParameter);\n\t\tcase \"IS\":\n\t\t\treturn is(sectionToCheck, operatorParameter);\n\t\tcase \"NOT\":\n\t\t\treturn not(sectionToCheck, operatorParameter);\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n// If you pass in an object which represents an operator, it will return the condition key and value in an array\n// if isStringOnlyValue is true then we check to make sure that condition value is a String and not a number vice versa\n// Index 0 stores the key, index 1 stores the value\n// For example if you pass in\n//                        \"IS\": {\n//\t\t\t\t\t\t\t\"sections_dept\": \"apsc\"\n//  \t\t\t\t\t\t}\n// It should return [\"dept\", \"apsc\"]\n\nfunction getSectionValueFromConditionKey(conditionKey: string, sectionToUse: Section): string | number {\n\tswitch (conditionKey) {\n\t\tcase \"uuid\":\n\t\t\treturn sectionToUse.getUuid();\n\t\tcase \"id\":\n\t\t\treturn sectionToUse.getId();\n\t\tcase \"title\":\n\t\t\treturn sectionToUse.getTitle();\n\t\tcase \"instructor\":\n\t\t\treturn sectionToUse.getInstructor();\n\t\tcase \"dept\":\n\t\t\treturn sectionToUse.getDept();\n\t\tcase \"year\":\n\t\t\treturn sectionToUse.getYear();\n\t\tcase \"avg\":\n\t\t\treturn sectionToUse.getAvg();\n\t\tcase \"pass\":\n\t\t\treturn sectionToUse.getPass();\n\t\tcase \"fail\":\n\t\t\treturn sectionToUse.getFail();\n\t\tcase \"audit\":\n\t\t\treturn sectionToUse.getAudit();\n\t\tdefault:\n\t\t\tthrow new InsightError(`Unknown condition key: ${conditionKey}`);\n\t}\n}\n\n// operatorParameter is in the format \"datasetName_value\"\nfunction greaterThan(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = validateAndExtractSectionFieldAndComparisonValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue > conditionValue;\n}\n\n// operatorParameter is in the format \"datasetName_value\"\nfunction lessThan(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = validateAndExtractSectionFieldAndComparisonValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue < conditionValue;\n}\n\nfunction equalTo(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = validateAndExtractSectionFieldAndComparisonValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue === conditionValue;\n}\n\n// this is what is going to handle wildcards\nfunction is(section: Section, operatorParameter: any): boolean {\n\t// Index 0 will have the conditionKey, index 1 will have the index Value\n\tconst conditionKeyAndValue: any[] = validateAndExtractSectionFieldAndComparisonValue(operatorParameter, true);\n\n\t// Stores the conditionKey ie: id, uuid, avg, etc\n\tconst conditionKey = conditionKeyAndValue[0];\n\n\t// Store the value we should compare the section.conditionKey to,\n\t// So if the conditionKey is prof, and the conditionValue is \"John\" then we check does section.prof === \"John\"\n\tconst conditionValue: string = conditionKeyAndValue[1];\n\n\tcheckAstericksPlacement(conditionValue);\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"number\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\tif (conditionValue.charAt(0) === \"*\" && conditionValue.charAt(conditionValue.length - 1) === \"*\") {\n\t\t//  inputstring:  Matches inputstring exactly\n\t\treturn sectionValue.includes(conditionValue.replaceAll(\"*\", \"\"));\n\t} else if (conditionValue.charAt(0) === \"*\") {\n\t\t// *inputstring:  Ends with inputstring\n\t\treturn sectionValue.endsWith(conditionValue.replaceAll(\"*\", \"\"));\n\t} else if (conditionValue.charAt(conditionValue.length - 1) === \"*\") {\n\t\t//  inputstring*: Starts with inputstring\n\t\treturn sectionValue.startsWith(conditionValue.replaceAll(\"*\", \"\"));\n\t} else {\n\t\t//  inputstring:  Matches inputstring exactly\n\t\treturn sectionValue === conditionValue;\n\t}\n}\n\nfunction not(section: Section, operatorParameter: any): boolean {\n\tconst operatorAndParam: any[] = extractAndValidateLogicalOperatorAndParameter(operatorParameter);\n\n\tconst operator = operatorAndParam[0];\n\tconst operatorParam = operatorAndParam[1];\n\n\treturn !sectionMatchesQueryRequirements(operator, operatorParam, section);\n}\n\nfunction and(section: Section, operatorParameter: any): boolean {\n\t// remember that AND takes in an array of operations and ANDs their results together, thus\n\t// operatorParameter should already be an array!\n\n\tif (operatorParameter.length === 0) {\n\t\tthrow new InsightError(\"AND array should not be empty.\");\n\t}\n\n\tfor (const operation of operatorParameter) {\n\t\tconst operatorAndParam: string[] = extractAndValidateLogicalOperatorAndParameter(operation);\n\n\t\tconst operator = operatorAndParam[0];\n\t\tconst operatorParam = operatorAndParam[1];\n\n\t\t// If it does not matach all of the operation requirments, then return false (because its an AND)\n\t\tif (!sectionMatchesQueryRequirements(operator, operatorParam, section)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction or(section: Section, operatorParameter: string): boolean {\n\t// remember that OR takes in an array of operations and ORs their results together, thus\n\t// operatorParameter should already be an array!\n\n\tif (operatorParameter.length === 0) {\n\t\tthrow new InsightError(\"OR array should not be empty.\");\n\t}\n\n\tfor (const operation of operatorParameter) {\n\t\tconst operatorAndParam: string[] = extractAndValidateLogicalOperatorAndParameter(operation);\n\n\t\tconst operator = operatorAndParam[0];\n\t\tconst operatorParam = operatorAndParam[1];\n\n\t\t// If matches at least of the operation requirements then return true (because its an OR)\n\t\tif (sectionMatchesQueryRequirements(operator, operatorParam, section)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n// this function was generated with ChatGPT to help me get all keys that contain underscores in the query object\n// Remember that in the query, all keys that have an underscore a parameters for the dataset\nexport function getKeysWithUnderscore(obj: Record<string, any>, result: string[] = []): string[] {\n\tfor (const key in obj) {\n\t\t// Used chatgpt here to fix if statement linter error\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t// Check if the key contains an underscore\n\t\t\tif (key.includes(\"_\")) {\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\t// If the value is an object, recurse into it\n\t\t\tif (typeof obj[key] === \"object\" && obj[key] !== null) {\n\t\t\t\tgetKeysWithUnderscore(obj[key], result);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction sortSectionUsingKey(conditionKey: string, sectionsToSort: Section[]): void {\n\tswitch (conditionKey) {\n\t\tcase \"uuid\":\n\t\t\tsectionsToSort.sort((x, y) => x.getUuid().localeCompare(y.getUuid()));\n\t\t\tbreak;\n\t\tcase \"id\":\n\t\t\tsectionsToSort.sort((x, y) => x.getId().localeCompare(y.getId()));\n\t\t\tbreak;\n\t\tcase \"title\":\n\t\t\tsectionsToSort.sort((x, y) => x.getTitle().localeCompare(y.getTitle()));\n\t\t\tbreak;\n\t\tcase \"instructor\":\n\t\t\tsectionsToSort.sort((x, y) => x.getInstructor().localeCompare(y.getInstructor()));\n\t\t\tbreak;\n\t\tcase \"dept\":\n\t\t\tsectionsToSort.sort((x, y) => x.getDept().localeCompare(y.getDept()));\n\t\t\tbreak;\n\t\tcase \"year\":\n\t\t\tsectionsToSort.sort((x, y) => x.getYear() - y.getYear());\n\t\t\tbreak;\n\t\tcase \"avg\":\n\t\t\tsectionsToSort.sort((x, y) => x.getAvg() - y.getAvg());\n\t\t\tbreak;\n\t\tcase \"pass\":\n\t\t\tsectionsToSort.sort((x, y) => x.getPass() - y.getPass());\n\t\t\tbreak;\n\t\tcase \"fail\":\n\t\t\tsectionsToSort.sort((x, y) => x.getFail() - y.getFail());\n\t\t\tbreak;\n\t\tcase \"audit\":\n\t\t\tsectionsToSort.sort((x, y) => x.getAudit() - y.getAudit());\n\t\t\tbreak;\n\t}\n}\n\nexport function parseSectionsData(sections: Section[], query: any): InsightResult[] {\n\tconst insightResultsToReturn: InsightResult[] = [];\n\n\t// This sorts based on the parameter provided to ORDER\n\tif (query.OPTIONS.ORDER !== null && query.OPTIONS.ORDER !== undefined) {\n\t\tsortSectionUsingKey(query.OPTIONS.ORDER.split(\"_\")[1], sections);\n\t}\n\n\tfor (const section of sections) {\n\t\tconst insightResult: InsightResult = {};\n\n\t\tfor (const key of query.OPTIONS.COLUMNS) {\n\t\t\tconst datasetAndVariable: string[] = key.split(\"_\");\n\t\t\tconst variable = datasetAndVariable[1];\n\n\t\t\tinsightResult[key] = getSectionValueFromConditionKey(variable, section);\n\t\t}\n\n\t\tinsightResultsToReturn.push(insightResult);\n\t}\n\n\treturn insightResultsToReturn;\n}\n\nexport async function getAllValidSections(query: any): Promise<Section[]> {\n\tvalidateQuery(query);\n\n\tconst { WHERE } = query as any;\n\n\t// This will get the operator and operater parameter and store it in an array, where index 0 is the operator, and index 1 is the parameter\n\tconst operatorAndParam: any[] = extractAndValidateLogicalOperatorAndParameter(WHERE);\n\n\tconst operator = operatorAndParam[0];\n\tconst operatorParameter = operatorAndParam[1];\n\n\t// This looks at the entire query and gets the id/name of the dataset that we need to access, this also validates the WHERE object\n\t// To ensure that it is formatted correctly\n\tconst datasetNameToQueryFromWhere = validateDatasetRefsInWhereAndGetSingleDataset(WHERE);\n\n\t// This looks at the entire query and gets the id/name of the dataset that we need to access, this also validates the OPTIONS object\n\t// To ensure that it is formatted correctly\n\tconst datasetNameToQueryFromOptions = validateOptionsAndGetSingleDataset(query.OPTIONS);\n\n\tconst datasetName = datasetNameToQueryFromOptions;\n\n\t// This means that WHERE is an empty object ie: {} and does not have the datasetName within it, so we must now find it in the columns portion\n\tif (datasetNameToQueryFromWhere !== \"\" && datasetNameToQueryFromWhere !== datasetNameToQueryFromOptions) {\n\t\tthrow new InsightError(\"WHERE and COLOUMNS does not reference the same dataset\");\n\t}\n\n\t// Gets the dataset to query\n\tconst datasetToQuery = await getDatasetFromId(datasetName);\n\n\t// This will store all the sections that we should return to be processed\n\tconst sectionsToReturn: Section[] = [];\n\n\tfor (const section of datasetToQuery.getEntities() as Section[]) {\n\t\tif (sectionMatchesQueryRequirements(operator, operatorParameter, section)) {\n\t\t\tsectionsToReturn.push(section);\n\n\t\t\tif (sectionsToReturn.length > maxSections) {\n\t\t\t\tthrow new ResultTooLargeError(\"More than 5000 sections are going to be returned!\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sectionsToReturn;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4efefde2d80dfa84f20a74d4011c1a761f5e219","contentHash":"53872f23d201ce0174af8a0dfab328a16c6981b946c1bd8e0ccec10c18a92343"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\LogicalOperatorExtractionAndValidation.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\LogicalOperatorExtractionAndValidation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":26}},"4":{"start":{"line":7,"column":29},"end":{"line":7,"column":56}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":60}},"6":{"start":{"line":9,"column":28},"end":{"line":9,"column":79}},"7":{"start":{"line":10,"column":37},"end":{"line":10,"column":89}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":55}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":102}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":82}},"11":{"start":{"line":18,"column":35},"end":{"line":18,"column":37}},"12":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":59}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"16":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":86}},"18":{"start":{"line":33,"column":26},"end":{"line":33,"column":28}},"19":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":38}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":46}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":27}}},"fnMap":{"0":{"name":"extractAndValidateLogicalOperatorAndParameter","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":54}},"loc":{"start":{"line":6,"column":63},"end":{"line":12,"column":1}},"line":6},"1":{"name":"isValidLogicalOperator","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":49},"end":{"line":16,"column":1}},"line":14},"2":{"name":"getLogicalOperatorParameter","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":36}},"loc":{"start":{"line":17,"column":62},"end":{"line":23,"column":1}},"line":17},"3":{"name":"getLogicalOperators","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":28}},"loc":{"start":{"line":24,"column":37},"end":{"line":26,"column":1}},"line":24},"4":{"name":"validateThereIsASingleLogicalOperator","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":46}},"loc":{"start":{"line":27,"column":65},"end":{"line":31,"column":1}},"line":27},"5":{"name":"extractSingleValidLogicalOperator","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":42}},"loc":{"start":{"line":32,"column":61},"end":{"line":41,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"1":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"2":{"loc":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},{"start":{"line":34,"column":4},"end":{"line":39,"column":5}}],"line":34},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":81}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":48}},{"start":{"line":34,"column":52},"end":{"line":34,"column":81}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2084103,"5":2084103,"6":2084103,"7":2084103,"8":2084103,"9":1,"10":2084103,"11":2084103,"12":2084103,"13":2084101,"14":2084103,"15":2084103,"16":2084103,"17":0,"18":2084103,"19":2084103,"20":2,"21":2084101,"22":2084103},"f":{"0":2084103,"1":2084103,"2":2084103,"3":2084103,"4":2084103,"5":2084103},"b":{"0":[2084101,2],"1":[0,2084103],"2":[2,2084101],"3":[2084103,2084103]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/LogicalOperatorExtractionAndValidation.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/LogicalOperatorExtractionAndValidation.ts"],"names":[],"mappings":";;;AAAA,iEAA4D;AAE5D,MAAM,WAAW,GAAG,MAAM,CAAC;AAyB3B,SAAgB,6CAA6C,CAAC,MAAW;IACxE,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAErD,qCAAqC,CAAC,gBAAgB,CAAC,CAAC;IAExD,MAAM,eAAe,GAAG,iCAAiC,CAAC,gBAAgB,CAAC,CAAC;IAE5E,MAAM,wBAAwB,GAAG,2BAA2B,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IAEtF,OAAO,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC;AACpD,CAAC;AAVD,sGAUC;AAED,SAAS,sBAAsB,CAAC,eAAuB;IACtD,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAC/E,CAAC;AAED,SAAS,2BAA2B,CAAC,eAAuB,EAAE,MAAW;IACxE,IAAI,wBAAwB,GAAG,EAAE,CAAC;IAGlC,IAAI,eAAe,KAAK,WAAW,EAAE;QACpC,wBAAwB,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;KACnD;IAED,OAAO,wBAAwB,CAAC;AACjC,CAAC;AAwBD,SAAS,mBAAmB,CAAC,MAAW;IACvC,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,qCAAqC,CAAC,gBAA0B;IACxE,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;QAChC,MAAM,IAAI,6BAAY,CAAC,oCAAoC,CAAC,CAAC;KAC7D;AACF,CAAC;AAiCD,SAAS,iCAAiC,CAAC,gBAA0B;IACpE,IAAI,eAAe,GAAG,EAAE,CAAC;IAEzB,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9E,eAAe,GAAG,WAAW,CAAC;KAC9B;SAAM;QACN,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;KACtC;IAED,OAAO,eAAe,CAAC;AACxB,CAAC","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\n\nconst noneKeyword = \"NONE\";\n\n/**\n * Doc generated by AI btw\n * Extracts and validates the operator and its associated parameter from a given object.\n *\n * This function retrieves the keys from the provided object, ensuring that there is exactly one\n * operator defined. It validates the operator against a predefined list of valid operators\n * (\"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", \"NOT\"). If the object is empty or contains\n * an invalid operator, it handles these cases accordingly.\n *\n * @param {any} object - The object containing the operator and parameter to be validated.\n *\n * @returns {string[]} - An array containing the operator at index 0 and the corresponding\n * parameter at index 1. If the object is empty, returns the\n * operator as \"NONE\" and an empty parameter.\n *\n * @throws {InsightError} - Throws an error if the object does not contain exactly one\n * valid operator.\n *\n * @example\n * const condition = { \"AND\": [\"value1\", \"value2\"] };\n * const result = extractOperatorAndParameter(condition);\n * // result will be [\"AND\", [\"value1\", \"value2\"]]\n */\nexport function extractAndValidateLogicalOperatorAndParameter(object: any): string[] {\n\tconst logicalOperators = getLogicalOperators(object);\n\n\tvalidateThereIsASingleLogicalOperator(logicalOperators);\n\n\tconst logicalOperator = extractSingleValidLogicalOperator(logicalOperators);\n\n\tconst logicalOperatorParameter = getLogicalOperatorParameter(logicalOperator, object);\n\n\treturn [logicalOperator, logicalOperatorParameter];\n}\n\nfunction isValidLogicalOperator(logicalOperator: string): boolean {\n\treturn [\"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", \"NOT\"].includes(logicalOperator);\n}\n\nfunction getLogicalOperatorParameter(logicalOperator: string, object: any): string {\n\tlet logicalOperatorParameter = \"\";\n\n\t// IF we do indeed have an operator, then we need the value of that operator which we can get\n\tif (logicalOperator !== noneKeyword) {\n\t\tlogicalOperatorParameter = object[logicalOperator];\n\t}\n\n\treturn logicalOperatorParameter;\n}\n\n/**\n * Doc generated by AI btw\n * Retrieves the keys (operators) from the provided object.\n *\n * This function extracts the keys from an object, which can represent\n * various operators in a grammar such as \"OR\", \"AND\", \"GT\", \"LT\", etc.\n *\n * @param object - The object from which to retrieve the keys. This\n * object may contain multiple operator keys used\n * in the context of EBNF grammar.\n *\n * @returns An array of strings representing the keys (operators)\n * extracted from the provided object.\n *\n * @throws {Error} If the input is not an object or is null, an error\n * is thrown to indicate invalid input.\n *\n * @example\n * const operatorsObject = { AND: true, OR: false, GT: 10 };\n * const operators = getOperators(operatorsObject);\n * // operators will be [\"AND\", \"OR\", \"GT\"]\n */\nfunction getLogicalOperators(object: any): string[] {\n\treturn Object.keys(object);\n}\n\nfunction validateThereIsASingleLogicalOperator(logicalOperators: string[]): void {\n\tif (logicalOperators.length > 1) {\n\t\tthrow new InsightError(\"Where should have at least one key\");\n\t}\n}\n\n/**\n * Extracts and validates the first operator from a given array of operator strings.\n *\n * This function checks the provided array of operators to ensure it contains a valid\n * operator. Valid operators include \"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", and \"NOT\".\n * If the array is empty or contains an invalid operator, the function will return a\n * default value specified by `noneKeyword`.\n *\n * @param operators - An array of strings representing potential operators.\n *\n * @returns A string representing the first valid operator from the array, or `noneKeyword`\n * if no valid operators are found.\n *\n * @throws InsightError - Throws an error if the provided array contains more than one operator.\n *\n * @example\n * // Example 1: Valid operators\n * const operators1 = ['AND', 'GT', 'LT'];\n * const validOperator1 = extractValidOperator(operators1);\n * console.log(validOperator1); // Output: 'AND'\n *\n * // Example 2: Empty array\n * const operators2: string[] = [];\n * const defaultOperator = extractValidOperator(operators2);\n * console.log(defaultOperator); // Output: value of `noneKeyword`\n *\n * // Example 3: Invalid operator\n * const operators3 = ['INVALID', 'GT'];\n * const validOperator3 = extractValidOperator(operators3);\n * console.log(validOperator3); // Output: 'INVALID' if defined as a valid operator or `noneKeyword`\n */\nfunction extractSingleValidLogicalOperator(logicalOperators: string[]): string {\n\tlet logicalOperator = \"\";\n\n\tif (!isValidLogicalOperator(logicalOperator) && logicalOperators.length === 0) {\n\t\tlogicalOperator = noneKeyword;\n\t} else {\n\t\tlogicalOperator = logicalOperators[0];\n\t}\n\n\treturn logicalOperator;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fe180325bbe04ca6027c3169d76d22e4aef77c77","contentHash":"bd51c12fa9b1d1853dc880fb5cb5297920b6eb67e13f97a2acef8284dbc6f7a5"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\QueryValidation.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\QueryValidation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":31}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":46}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":46}},"13":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":72}},"15":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":72}},"17":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":80}},"19":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":80}},"21":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":74}},"23":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":74}},"25":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":76}},"27":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"28":{"start":{"line":50,"column":8},"end":{"line":50,"column":81}},"29":{"start":{"line":54,"column":4},"end":{"line":61,"column":5}},"30":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"31":{"start":{"line":56,"column":12},"end":{"line":56,"column":86}},"32":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"33":{"start":{"line":59,"column":12},"end":{"line":59,"column":91}},"34":{"start":{"line":64,"column":4},"end":{"line":68,"column":5}},"35":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"36":{"start":{"line":66,"column":12},"end":{"line":66,"column":82}},"37":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"38":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"39":{"start":{"line":73,"column":12},"end":{"line":73,"column":87}}},"fnMap":{"0":{"name":"validateQuery","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":30},"end":{"line":13,"column":1}},"line":5},"1":{"name":"isValidOptionsKey","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":26}},"loc":{"start":{"line":15,"column":32},"end":{"line":17,"column":1}},"line":15},"2":{"name":"isValidQueryKey","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":30},"end":{"line":20,"column":1}},"line":18},"3":{"name":"validateQueryExistence","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":31}},"loc":{"start":{"line":21,"column":39},"end":{"line":25,"column":1}},"line":21},"4":{"name":"validateWhereClause","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":36},"end":{"line":36,"column":1}},"line":26},"5":{"name":"validateOptions","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":24}},"loc":{"start":{"line":37,"column":34},"end":{"line":41,"column":1}},"line":37},"6":{"name":"validateOptionsColumns","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":31}},"loc":{"start":{"line":42,"column":41},"end":{"line":52,"column":1}},"line":42},"7":{"name":"validateOrderInOptions","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":31}},"loc":{"start":{"line":53,"column":41},"end":{"line":62,"column":1}},"line":53},"8":{"name":"validateKeysInOptions","decl":{"start":{"line":63,"column":9},"end":{"line":63,"column":30}},"loc":{"start":{"line":63,"column":40},"end":{"line":69,"column":1}},"line":63},"9":{"name":"validateKeysInQuery","decl":{"start":{"line":70,"column":9},"end":{"line":70,"column":28}},"loc":{"start":{"line":70,"column":36},"end":{"line":76,"column":1}},"line":70}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":22}},{"start":{"line":22,"column":26},"end":{"line":22,"column":45}}],"line":22},"2":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"3":{"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":45}},"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":22}},{"start":{"line":27,"column":26},"end":{"line":27,"column":45}}],"line":27},"4":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30},"5":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"6":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{"line":38,"column":4},"end":{"line":40,"column":5}}],"line":38},"7":{"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":24}},{"start":{"line":38,"column":28},"end":{"line":38,"column":49}}],"line":38},"8":{"loc":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},{"start":{"line":43,"column":4},"end":{"line":45,"column":5}}],"line":43},"9":{"loc":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":24}},{"start":{"line":43,"column":28},"end":{"line":43,"column":49}}],"line":43},"10":{"loc":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},{"start":{"line":46,"column":4},"end":{"line":48,"column":5}}],"line":46},"11":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":4},"end":{"line":51,"column":5}}],"line":49},"12":{"loc":{"start":{"line":54,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":61,"column":5}},{"start":{"line":54,"column":4},"end":{"line":61,"column":5}}],"line":54},"13":{"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":61}},"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":30}},{"start":{"line":54,"column":34},"end":{"line":54,"column":61}}],"line":54},"14":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"15":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58},"16":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"17":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":57,"4":57,"5":52,"6":51,"7":49,"8":44,"9":43,"10":1,"11":80,"12":87,"13":57,"14":0,"15":57,"16":4,"17":53,"18":0,"19":53,"20":1,"21":52,"22":1,"23":51,"24":1,"25":50,"26":0,"27":50,"28":1,"29":49,"30":40,"31":1,"32":39,"33":4,"34":44,"35":80,"36":1,"37":43,"38":87,"39":1},"f":{"0":57,"1":80,"2":87,"3":57,"4":57,"5":52,"6":51,"7":49,"8":44,"9":43},"b":{"0":[0,57],"1":[57,57],"2":[4,53],"3":[57,56],"4":[0,53],"5":[1,52],"6":[1,51],"7":[52,52],"8":[1,50],"9":[51,51],"10":[0,50],"11":[1,49],"12":[40,9],"13":[49,49],"14":[1,39],"15":[4,35],"16":[1,79],"17":[1,86]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/QueryValidation.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/QueryValidation.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\n\nexport function validateQuery(query: any): void {\n\tvalidateQueryExistence(query);\n\tvalidateWhereClause(query.WHERE);\n\tvalidateOptions(query.OPTIONS);\n\tvalidateOptionsColumns(query.OPTIONS.COLUMNS);\n\tvalidateOrderInOptions(query.OPTIONS);\n\tvalidateKeysInOptions(query.OPTIONS);\n\tvalidateKeysInQuery(query);\n}\n\nfunction isValidOptionsKey(key: string): boolean {\n\treturn [\"COLUMNS\", \"ORDER\"].includes(key);\n}\n\nfunction isValidQueryKey(key: string): boolean {\n\treturn [\"WHERE\", \"OPTIONS\"].includes(key);\n}\n\nfunction validateQueryExistence(query: any): void {\n\tif (query === null || query === undefined) {\n\t\tthrow new InsightError(\"query does not exist\");\n\t}\n}\n\nfunction validateWhereClause(where: any): void {\n\tif (where === null || where === undefined) {\n\t\tthrow new InsightError(\"WHERE does not exist\");\n\t}\n\n\tif (typeof where !== \"object\") {\n\t\tthrow new InsightError(\"WHERE is of the wrong format\");\n\t}\n\n\tif (Array.isArray(where)) {\n\t\tthrow new InsightError(\"WHERE should not be an array\");\n\t}\n}\n\nfunction validateOptions(options: any): void {\n\tif (options === null || options === undefined) {\n\t\tthrow new InsightError(\"OPTIONS does not exist\");\n\t}\n}\n\nfunction validateOptionsColumns(columns: any): void {\n\tif (columns === null || columns === undefined) {\n\t\tthrow new InsightError(\"COLUMNS does not exist\");\n\t}\n\n\tif (!Array.isArray(columns)) {\n\t\tthrow new InsightError(\"Columns must be an array\");\n\t}\n\n\tif (columns.length === 0) {\n\t\tthrow new InsightError(\"Columns array cannot be empty\");\n\t}\n}\n\nfunction validateOrderInOptions(options: any): void {\n\tif (options.ORDER !== null && options.ORDER !== undefined) {\n\t\tif (typeof options.ORDER !== \"string\") {\n\t\t\tthrow new InsightError(\"ORDER key is of the wrong type\");\n\t\t}\n\n\t\tif (!options.COLUMNS.includes(options.ORDER)) {\n\t\t\tthrow new InsightError(\"ORDER key must be in COLUMNS array.\");\n\t\t}\n\t}\n}\n\nfunction validateKeysInOptions(options: any): void {\n\tfor (const key of Object.keys(options)) {\n\t\tif (!isValidOptionsKey(key)) {\n\t\t\tthrow new InsightError(\"OPTIONS has an invalid key\");\n\t\t}\n\t}\n}\n\nfunction validateKeysInQuery(query: any): void {\n\tfor (const key of Object.keys(query)) {\n\t\tif (!isValidQueryKey(key)) {\n\t\t\tthrow new InsightError(`QUERY has an invalid key ${key}`);\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3597d586cfb0d582b24ee6054cfd3f6ab3ad5958","contentHash":"4ef4f012ea13e60dba1e96823855cf923a7751300130c7cfec51d06c8c4ece7f"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\ValidationHelpers.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\ValidationHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":146}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":30},"end":{"line":5,"column":31}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":68}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":73}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":90}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"8":{"start":{"line":17,"column":22},"end":{"line":17,"column":41}},"9":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":97}},"11":{"start":{"line":21,"column":25},"end":{"line":21,"column":37}},"12":{"start":{"line":22,"column":38},"end":{"line":22,"column":64}},"13":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":73}},"15":{"start":{"line":26,"column":28},"end":{"line":26,"column":48}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":86}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":56}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":108}},"19":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":114}},"21":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":89}},"23":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":89}},"25":{"start":{"line":43,"column":20},"end":{"line":43,"column":29}},"26":{"start":{"line":44,"column":22},"end":{"line":44,"column":24}},"27":{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},"28":{"start":{"line":46,"column":28},"end":{"line":46,"column":45}},"29":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"30":{"start":{"line":48,"column":12},"end":{"line":48,"column":114}},"31":{"start":{"line":50,"column":8},"end":{"line":50,"column":37}},"32":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"33":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"34":{"start":{"line":53,"column":12},"end":{"line":53,"column":97}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":23}},"36":{"start":{"line":58,"column":0},"end":{"line":58,"column":80}}},"fnMap":{"0":{"name":"isFieldValidSectionNumberField","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":47},"end":{"line":8,"column":1}},"line":6},"1":{"name":"isFieldValidSectionStringField","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":39}},"loc":{"start":{"line":9,"column":47},"end":{"line":11,"column":1}},"line":9},"2":{"name":"isFieldValidSectionField","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":33}},"loc":{"start":{"line":12,"column":41},"end":{"line":14,"column":1}},"line":12},"3":{"name":"validateAndExtractSectionFieldAndComparisonValue","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":85},"end":{"line":29,"column":1}},"line":16},"4":{"name":"validateSectionFieldTypeSameAsComparisonValue","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":54}},"loc":{"start":{"line":31,"column":91},"end":{"line":41,"column":1}},"line":31},"5":{"name":"validateOptionsAndGetSingleDataset","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":43}},"loc":{"start":{"line":42,"column":53},"end":{"line":57,"column":1}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":11},"end":{"line":13,"column":89}},"type":"binary-expr","locations":[{"start":{"line":13,"column":11},"end":{"line":13,"column":48}},{"start":{"line":13,"column":52},"end":{"line":13,"column":89}}],"line":13},"1":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18},"2":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{"line":32,"column":4},"end":{"line":34,"column":5}}],"line":32},"4":{"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":82}},"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":43}},{"start":{"line":32,"column":47},"end":{"line":32,"column":82}}],"line":32},"5":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"6":{"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":64}},"type":"binary-expr","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":43}},{"start":{"line":35,"column":47},"end":{"line":35,"column":64}}],"line":35},"7":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{"line":38,"column":4},"end":{"line":40,"column":5}}],"line":38},"8":{"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":65}},"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":43}},{"start":{"line":38,"column":47},"end":{"line":38,"column":65}}],"line":38},"9":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"10":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2237929,"5":1470710,"6":2237929,"7":1,"8":2237873,"9":2237873,"10":2,"11":2237871,"12":2237871,"13":2237871,"14":0,"15":2237871,"16":2237871,"17":2237864,"18":1,"19":2237871,"20":2,"21":2237869,"22":1,"23":2237868,"24":4,"25":39,"26":39,"27":39,"28":200,"29":200,"30":0,"31":200,"32":200,"33":200,"34":1,"35":38,"36":1},"f":{"0":2237929,"1":1470710,"2":2237929,"3":2237873,"4":2237871,"5":39},"b":{"0":[2237929,1470710],"1":[2,2237871],"2":[0,2237871],"3":[2,2237869],"4":[2237871,1470680],"5":[1,2237868],"6":[2237869,767191],"7":[4,2237864],"8":[2237868,1470678],"9":[0,200],"10":[1,199]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/ValidationHelpers.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/ValidationHelpers.ts"],"names":[],"mappings":";;;AAAA,iEAA4D;AAE5D,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAEhC,SAAS,8BAA8B,CAAC,KAAa;IACpD,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjE,CAAC;AAED,SAAS,8BAA8B,CAAC,KAAa;IACpD,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtE,CAAC;AAED,SAAgB,wBAAwB,CAAC,KAAa;IACrD,OAAO,8BAA8B,CAAC,KAAK,CAAC,IAAI,8BAA8B,CAAC,KAAK,CAAC,CAAC;AACvF,CAAC;AAFD,4DAEC;AAED,SAAgB,gDAAgD,CAAC,MAAW,EAAE,iBAA0B;IACvG,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEtC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC3B,MAAM,IAAI,6BAAY,CAAC,+CAA+C,CAAC,CAAC;KACxE;IAED,MAAM,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAGlC,MAAM,yBAAyB,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE7D,IAAI,CAAC,wBAAwB,CAAC,yBAAyB,CAAC,EAAE;QACzD,MAAM,IAAI,6BAAY,CAAC,uBAAuB,CAAC,CAAC;KAChD;IAED,MAAM,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IAE7C,6CAA6C,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;IAElF,OAAO,CAAC,yBAAyB,EAAE,eAAe,CAAC,CAAC;AACrD,CAAC;AArBD,4GAqBC;AAED,SAAS,6CAA6C,CAAC,eAAoB,EAAE,iBAA0B;IACtG,IAAI,OAAO,eAAe,KAAK,QAAQ,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;QAC/E,MAAM,IAAI,6BAAY,CAAC,gEAAgE,CAAC,CAAC;KACzF;IAED,IAAI,OAAO,eAAe,KAAK,QAAQ,IAAI,iBAAiB,EAAE;QAC7D,MAAM,IAAI,6BAAY,CAAC,uCAAuC,CAAC,CAAC;KAChE;IAED,IAAI,OAAO,eAAe,KAAK,QAAQ,IAAI,CAAC,iBAAiB,EAAE;QAC9D,MAAM,IAAI,6BAAY,CAAC,uCAAuC,CAAC,CAAC;KAChE;AACF,CAAC;AAED,SAAgB,kCAAkC,CAAC,OAAY;IAE9D,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;IAClC,IAAI,WAAW,GAAG,EAAE,CAAC;IAErB,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,OAAO,EAAE;QACrC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAGtC,IAAI,WAAW,CAAC,MAAM,KAAK,qBAAqB,EAAE;YACjD,MAAM,IAAI,6BAAY,CAAC,4DAA4D,CAAC,CAAC;SACrF;QAED,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAGzB,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;YACvB,MAAM,IAAI,6BAAY,CAAC,2CAA2C,CAAC,CAAC;SACpE;KACD;IAED,OAAO,WAAW,CAAC;AACpB,CAAC;AAvBD,gFAuBC","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\n\nconst seperatedArrayLengths = 2;\n\nfunction isFieldValidSectionNumberField(field: string): boolean {\n\treturn [\"year\", \"avg\", \"pass\", \"fail\", \"audit\"].includes(field);\n}\n\nfunction isFieldValidSectionStringField(param: string): boolean {\n\treturn [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\"].includes(param);\n}\n\nexport function isFieldValidSectionField(param: string): boolean {\n\treturn isFieldValidSectionNumberField(param) || isFieldValidSectionStringField(param);\n}\n\nexport function validateAndExtractSectionFieldAndComparisonValue(object: any, isStringOnlyValue: boolean): any[] {\n\tconst operators = Object.keys(object);\n\n\tif (operators.length !== 1) {\n\t\tthrow new InsightError(\"Object should have exactly one condition key.\");\n\t}\n\n\tconst conditionKey = operators[0];\n\n\t// Remember that the condition key is formatted like this \"sections_dept\", thus splitting at _, dept should be at index 1\n\tconst sectionFieldToBeEvaluated = conditionKey.split(\"_\")[1];\n\n\tif (!isFieldValidSectionField(sectionFieldToBeEvaluated)) {\n\t\tthrow new InsightError(\"Invalid condition Key\");\n\t}\n\n\tconst comparisonValue = object[conditionKey];\n\n\tvalidateSectionFieldTypeSameAsComparisonValue(comparisonValue, isStringOnlyValue);\n\n\treturn [sectionFieldToBeEvaluated, comparisonValue];\n}\n\nfunction validateSectionFieldTypeSameAsComparisonValue(comparisonValue: any, isStringOnlyValue: boolean): void {\n\tif (typeof comparisonValue !== \"number\" && typeof comparisonValue !== \"string\") {\n\t\tthrow new InsightError(\"condition value is of an invalid type, not number or a string!\");\n\t}\n\n\tif (typeof comparisonValue === \"number\" && isStringOnlyValue) {\n\t\tthrow new InsightError(\"condition value is of the wrong type!\");\n\t}\n\n\tif (typeof comparisonValue === \"string\" && !isStringOnlyValue) {\n\t\tthrow new InsightError(\"condition value is of the wrong type!\");\n\t}\n}\n\nexport function validateOptionsAndGetSingleDataset(options: any): string {\n\t// We intialize a set, remember, a set cannot hold duplicate values\n\tconst nameSet = new Set<string>();\n\tlet datasetName = \"\";\n\n\tfor (const column of options.COLUMNS) {\n\t\tconst columnParts = column.split(\"_\");\n\n\t\t// Check if the column contains a dataset name\n\t\tif (columnParts.length !== seperatedArrayLengths) {\n\t\t\tthrow new InsightError(\"Invalid column name format. Should be 'datasetName_param'.\");\n\t\t}\n\n\t\tdatasetName = columnParts[0];\n\t\tnameSet.add(datasetName);\n\n\t\t// Ensure that only one dataset name is allowed\n\t\tif (nameSet.size !== 1) {\n\t\t\tthrow new InsightError(\"You can only use one dataset in the query\");\n\t\t}\n\t}\n\n\treturn datasetName;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5caa9486393fd46dd56fa5a7ec57c2e8e704a8f0","contentHash":"ae51b8418d1694f30953d029904dc1e9c2faec9e323fcd31e897d8fb7d76b5b1"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\WhereDatasetExtractorAndRefsValidation.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\WhereDatasetExtractorAndRefsValidation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":58}},"5":{"start":{"line":8,"column":27},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":22},"end":{"line":9,"column":24}},"7":{"start":{"line":10,"column":4},"end":{"line":17,"column":5}},"8":{"start":{"line":11,"column":36},"end":{"line":11,"column":83}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":63}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":58}},"11":{"start":{"line":14,"column":22},"end":{"line":14,"column":58}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":66}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":102}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"17":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"18":{"start":{"line":24,"column":8},"end":{"line":24,"column":99}},"19":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":76}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":40}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"23":{"start":{"line":39,"column":4},"end":{"line":39,"column":34}},"24":{"start":{"line":42,"column":31},"end":{"line":42,"column":32}},"25":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":86}}},"fnMap":{"0":{"name":"validateDatasetRefsInWhereAndGetSingleDataset","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":54}},"loc":{"start":{"line":7,"column":62},"end":{"line":19,"column":1}},"line":7},"1":{"name":"assertSingleDatasetReference","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":37}},"loc":{"start":{"line":21,"column":67},"end":{"line":26,"column":1}},"line":21},"2":{"name":"validateDatasetField","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":29}},"loc":{"start":{"line":27,"column":37},"end":{"line":31,"column":1}},"line":27},"3":{"name":"getDatasetNameAndFieldInArray","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":38}},"loc":{"start":{"line":32,"column":58},"end":{"line":34,"column":1}},"line":32},"4":{"name":"getDatasetName","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":23}},"loc":{"start":{"line":35,"column":45},"end":{"line":37,"column":1}},"line":35},"5":{"name":"getDatasetField","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":24}},"loc":{"start":{"line":38,"column":46},"end":{"line":40,"column":1}},"line":38},"6":{"name":"validateDatasetNameAndFieldFormat","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":42}},"loc":{"start":{"line":41,"column":64},"end":{"line":46,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"1":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"2":{"loc":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},{"start":{"line":43,"column":4},"end":{"line":45,"column":5}}],"line":43}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":42,"6":42,"7":42,"8":58,"9":58,"10":58,"11":58,"12":58,"13":56,"14":39,"15":1,"16":56,"17":56,"18":1,"19":58,"20":2,"21":58,"22":58,"23":58,"24":58,"25":58,"26":0},"f":{"0":42,"1":56,"2":58,"3":58,"4":58,"5":58,"6":58},"b":{"0":[1,55],"1":[2,56],"2":[0,58]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/WhereDatasetExtractorAndRefsValidation.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/WhereDatasetExtractorAndRefsValidation.ts"],"names":[],"mappings":";;;AAAA,iEAA4D;AAC5D,iDAAuD;AACvD,2DAA+D;AAE/D,SAAgB,6CAA6C,CAAC,KAAU;IACvE,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;IACzC,IAAI,WAAW,GAAG,EAAE,CAAC;IAGrB,KAAK,MAAM,gBAAgB,IAAI,IAAA,oCAAqB,EAAC,KAAK,CAAC,EAAE;QAC5D,MAAM,mBAAmB,GAAG,6BAA6B,CAAC,gBAAgB,CAAC,CAAC;QAE5E,iCAAiC,CAAC,mBAAmB,CAAC,CAAC;QAEvD,WAAW,GAAG,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAElD,MAAM,KAAK,GAAG,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAEnD,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAC5B,4BAA4B,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;KAC1D;IACD,OAAO,WAAW,CAAC;AACpB,CAAC;AAlBD,sGAkBC;AAED,SAAS,4BAA4B,CAAC,WAAmB,EAAE,cAA2B;IAErF,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAIhC,IAAI,cAAc,CAAC,IAAI,KAAK,CAAC,EAAE;QAC9B,MAAM,IAAI,6BAAY,CAAC,iDAAiD,CAAC,CAAC;KAC1E;AACF,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAa;IAE1C,IAAI,CAAC,IAAA,4CAAwB,EAAC,KAAK,CAAC,EAAE;QACrC,MAAM,IAAI,6BAAY,CAAC,0BAA0B,CAAC,CAAC;KACnD;AACF,CAAC;AAED,SAAS,6BAA6B,CAAC,iBAAyB;IAC/D,OAAO,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,cAAc,CAAC,mBAA6B;IACpD,OAAO,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,eAAe,CAAC,mBAA6B;IACrD,OAAO,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,iCAAiC,CAAC,mBAA6B;IAKvE,MAAM,kBAAkB,GAAG,CAAC,CAAC;IAC7B,IAAI,mBAAmB,CAAC,MAAM,KAAK,kBAAkB,EAAE;QACtD,MAAM,IAAI,6BAAY,CAAC,oCAAoC,CAAC,CAAC;KAC7D;AACF,CAAC","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\nimport { getKeysWithUnderscore } from \"./QueryHandler\";\nimport { isFieldValidSectionField } from \"./ValidationHelpers\";\n\nexport function validateDatasetRefsInWhereAndGetSingleDataset(where: any): string {\n\tconst datasetNameSet = new Set<string>();\n\tlet datasetName = \"\";\n\n\t// This for loop checks that all keys have dataset names that are referenceing the same dataset, and that all parameters are valid\n\tfor (const datasetNameField of getKeysWithUnderscore(where)) {\n\t\tconst datasetNameAndField = getDatasetNameAndFieldInArray(datasetNameField);\n\n\t\tvalidateDatasetNameAndFieldFormat(datasetNameAndField);\n\n\t\tdatasetName = getDatasetName(datasetNameAndField);\n\n\t\tconst field = getDatasetField(datasetNameAndField);\n\n\t\tvalidateDatasetField(field);\n\t\tassertSingleDatasetReference(datasetName, datasetNameSet);\n\t}\n\treturn datasetName;\n}\n\nfunction assertSingleDatasetReference(datasetName: string, datasetNameSet: Set<string>): void {\n\t// Add datasetName to datasetNameSet\n\tdatasetNameSet.add(datasetName);\n\n\t// If the nameSet is larger than 1, this must mean that the query has keys such as \"dataset1_dept\" and \"dataset2_dept\",\n\t// which is not allowed because you can only query from one dataset at a time\n\tif (datasetNameSet.size !== 1) {\n\t\tthrow new InsightError(\"You can only reference one dataset in the query\");\n\t}\n}\n\nfunction validateDatasetField(field: string): void {\n\t// checks to see if filed is valid, remember filed is invalid if it is not one of the following \"year\", \"avg\", \"pass\", \"fail\", \"audit\", \"uuid\", \"id\", \"title\", \"instructor\", \"dept\"\n\tif (!isFieldValidSectionField(field)) {\n\t\tthrow new InsightError(\"Dataset field is invalid\");\n\t}\n}\n\nfunction getDatasetNameAndFieldInArray(datasetName_field: string): string[] {\n\treturn datasetName_field.split(\"_\");\n}\n\nfunction getDatasetName(datasetNameAndField: string[]): string {\n\treturn datasetNameAndField[0];\n}\n\nfunction getDatasetField(datasetNameAndField: string[]): string {\n\treturn datasetNameAndField[1];\n}\n\nfunction validateDatasetNameAndFieldFormat(datasetNameAndField: string[]): void {\n\t// Keys with underscores look like this \"datasetName_param\" for example \"sections_dept\", if we split at the underscore \"_\",\n\t// and the length of the array is not 2, then either there are too many underscores in the key, or the key does not contain both\n\t// the dataset name, and the parameter\n\n\tconst correctArrayLength = 2;\n\tif (datasetNameAndField.length !== correctArrayLength) {\n\t\tthrow new InsightError(\"Missing dataset name, or parameter\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"356bf661c62104acab0c7f8e2e7dc54fe90663c5","contentHash":"bebb2100270bfbe0d5c1b6f146f73831f8c8d6ea14f18af594de8b27d62e1ad2"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\WildcardValidation.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\WildcardValidation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":15}},"5":{"start":{"line":9,"column":30},"end":{"line":9,"column":67}},"6":{"start":{"line":10,"column":37},"end":{"line":10,"column":38}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":82}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":60}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":88}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":58}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"12":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":122}},"14":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":85}},"16":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":89}}},"fnMap":{"0":{"name":"checkAstericksPlacement","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":42},"end":{"line":14,"column":1}},"line":5},"1":{"name":"getNumberOfAstericksInString","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":37}},"loc":{"start":{"line":16,"column":46},"end":{"line":18,"column":1}},"line":16},"2":{"name":"validateAstericksAtBoundaries","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":38}},"loc":{"start":{"line":19,"column":88},"end":{"line":24,"column":1}},"line":19},"3":{"name":"validateNoAstericksInMiddle","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":36}},"loc":{"start":{"line":25,"column":65},"end":{"line":29,"column":1}},"line":25},"4":{"name":"validateTheresAMaxOfTwoAsterisks","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":41}},"loc":{"start":{"line":30,"column":87},"end":{"line":34,"column":1}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{"line":6,"column":4},"end":{"line":8,"column":5}}],"line":6},"1":{"loc":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},{"start":{"line":20,"column":4},"end":{"line":23,"column":5}}],"line":20},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":21,"column":81}},"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":49}},{"start":{"line":21,"column":9},"end":{"line":21,"column":34}},{"start":{"line":21,"column":38},"end":{"line":21,"column":80}}],"line":20},"3":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{"line":26,"column":4},"end":{"line":28,"column":5}}],"line":26},"4":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":106}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},{"start":{"line":26,"column":35},"end":{"line":26,"column":60}},{"start":{"line":26,"column":64},"end":{"line":26,"column":106}}],"line":26},"5":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1470674,"4":500838,"5":969836,"6":969836,"7":969836,"8":969836,"9":969835,"10":1,"11":969836,"12":969835,"13":0,"14":969836,"15":1,"16":969836,"17":0},"f":{"0":1470674,"1":969836,"2":969835,"3":969836,"4":969836},"b":{"0":[500838,969836],"1":[0,969835],"2":[969835,775999,775999],"3":[1,969835],"4":[969836,193837,64613],"5":[0,969836]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/WildcardValidation.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/WildcardValidation.ts"],"names":[],"mappings":";;;AAAA,iEAA4D;AAE5D,SAAgB,uBAAuB,CAAC,OAAe;IACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC3B,OAAO;KACP;IACD,MAAM,iBAAiB,GAAG,4BAA4B,CAAC,OAAO,CAAC,CAAC;IAChE,MAAM,wBAAwB,GAAG,CAAC,CAAC;IACnC,gCAAgC,CAAC,iBAAiB,EAAE,wBAAwB,CAAC,CAAC;IAC9E,2BAA2B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;IACxD,6BAA6B,CAAC,iBAAiB,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;AACrF,CAAC;AATD,0DASC;AAED,SAAS,4BAA4B,CAAC,MAAc;IACnD,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,6BAA6B,CAAC,iBAAyB,EAAE,mBAA2B,EAAE,OAAe;IAC7G,IACC,iBAAiB,KAAK,mBAAmB;QACzC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EACxE;QACD,MAAM,IAAI,6BAAY,CAAC,wEAAwE,CAAC,CAAC;KACjG;AACF,CAAC;AAED,SAAS,2BAA2B,CAAC,iBAAyB,EAAE,OAAe;IAC9E,IAAI,iBAAiB,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QACvG,MAAM,IAAI,6BAAY,CAAC,mCAAmC,CAAC,CAAC;KAC5D;AACF,CAAC;AAED,SAAS,gCAAgC,CAAC,iBAAyB,EAAE,wBAAgC;IACpG,IAAI,iBAAiB,GAAG,wBAAwB,EAAE;QACjD,MAAM,IAAI,6BAAY,CAAC,uCAAuC,CAAC,CAAC;KAChE;AACF,CAAC","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\n\nexport function checkAstericksPlacement(toCheck: string): void {\n\tif (!toCheck.includes(\"*\")) {\n\t\treturn;\n\t}\n\tconst numberOfAstericks = getNumberOfAstericksInString(toCheck);\n\tconst numberOfAstericksAllowed = 2;\n\tvalidateTheresAMaxOfTwoAsterisks(numberOfAstericks, numberOfAstericksAllowed);\n\tvalidateNoAstericksInMiddle(numberOfAstericks, toCheck);\n\tvalidateAstericksAtBoundaries(numberOfAstericks, numberOfAstericksAllowed, toCheck);\n}\n\nfunction getNumberOfAstericksInString(string: string): number {\n\treturn string.split(\"*\").length - 1;\n}\n\nfunction validateAstericksAtBoundaries(numberOfAsterisks: number, numAstericksAllowed: number, toCheck: string): void {\n\tif (\n\t\tnumberOfAsterisks === numAstericksAllowed &&\n\t\t(toCheck.charAt(0) !== \"*\" || toCheck.charAt(toCheck.length - 1) !== \"*\")\n\t) {\n\t\tthrow new InsightError(\"Asterisks must be at both the start and end of the string if there are\");\n\t}\n}\n\nfunction validateNoAstericksInMiddle(numberOfAsterisks: number, toCheck: string): void {\n\tif (numberOfAsterisks === 1 && toCheck.charAt(0) !== \"*\" && toCheck.charAt(toCheck.length - 1) !== \"*\") {\n\t\tthrow new InsightError(\"Asterisks cannot be in the middle\");\n\t}\n}\n\nfunction validateTheresAMaxOfTwoAsterisks(numberOfAsterisks: number, numberOfAsterisksAllowed: number): void {\n\tif (numberOfAsterisks > numberOfAsterisksAllowed) {\n\t\tthrow new InsightError(\"You cannot have more than 2 asterisks\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"afe6dc51c46652357b46f808ff54378fa3d59bd5","contentHash":"ddccd427e85f1a1e6d8015eb8bd5fe9adbcd38e8c0fd48bab017d35432ef009d"},"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\AddDatasetHelper.ts":{"path":"C:\\Users\\jakey\\OneDrive\\Documents\\UBC\\Year 3 Term 1\\Cpsc310\\teamProjectTandJ\\project_team209\\src\\helperFunctions\\AddDatasetHelper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":169}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":61}},"7":{"start":{"line":10,"column":18},"end":{"line":10,"column":64}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":64}},"9":{"start":{"line":12,"column":15},"end":{"line":12,"column":32}},"10":{"start":{"line":13,"column":11},"end":{"line":13,"column":24}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":62}},"13":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":108}},"15":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":97}},"17":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"18":{"start":{"line":27,"column":37},"end":{"line":27,"column":89}},"19":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":69}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":86}},"22":{"start":{"line":34,"column":16},"end":{"line":34,"column":37}},"23":{"start":{"line":35,"column":20},"end":{"line":35,"column":66}},"24":{"start":{"line":36,"column":26},"end":{"line":36,"column":55}},"25":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"26":{"start":{"line":38,"column":8},"end":{"line":38,"column":83}},"27":{"start":{"line":40,"column":24},"end":{"line":40,"column":26}},"28":{"start":{"line":41,"column":21},"end":{"line":57,"column":6}},"29":{"start":{"line":42,"column":8},"end":{"line":56,"column":9}},"30":{"start":{"line":43,"column":29},"end":{"line":43,"column":70}},"31":{"start":{"line":44,"column":12},"end":{"line":55,"column":13}},"32":{"start":{"line":45,"column":16},"end":{"line":51,"column":17}},"33":{"start":{"line":46,"column":39},"end":{"line":46,"column":59}},"34":{"start":{"line":47,"column":20},"end":{"line":47,"column":49}},"35":{"start":{"line":50,"column":20},"end":{"line":50,"column":76}},"36":{"start":{"line":54,"column":16},"end":{"line":54,"column":104}},"37":{"start":{"line":58,"column":4},"end":{"line":58,"column":32}},"38":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"39":{"start":{"line":62,"column":25},"end":{"line":62,"column":27}},"40":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"41":{"start":{"line":64,"column":27},"end":{"line":64,"column":214}},"42":{"start":{"line":65,"column":8},"end":{"line":65,"column":38}},"43":{"start":{"line":67,"column":4},"end":{"line":67,"column":24}},"44":{"start":{"line":70,"column":25},"end":{"line":70,"column":27}},"45":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"46":{"start":{"line":72,"column":27},"end":{"line":72,"column":37}},"47":{"start":{"line":73,"column":8},"end":{"line":73,"column":56}},"48":{"start":{"line":75,"column":4},"end":{"line":75,"column":24}},"49":{"start":{"line":78,"column":28},"end":{"line":78,"column":70}},"50":{"start":{"line":79,"column":25},"end":{"line":79,"column":66}},"51":{"start":{"line":80,"column":23},"end":{"line":80,"column":64}},"52":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"53":{"start":{"line":82,"column":8},"end":{"line":82,"column":80}},"54":{"start":{"line":84,"column":4},"end":{"line":84,"column":22}},"55":{"start":{"line":86,"column":0},"end":{"line":86,"column":76}},"56":{"start":{"line":88,"column":22},"end":{"line":88,"column":52}},"57":{"start":{"line":89,"column":16},"end":{"line":89,"column":58}},"58":{"start":{"line":90,"column":4},"end":{"line":90,"column":16}},"59":{"start":{"line":93,"column":4},"end":{"line":101,"column":5}},"60":{"start":{"line":94,"column":8},"end":{"line":94,"column":54}},"61":{"start":{"line":96,"column":9},"end":{"line":101,"column":5}},"62":{"start":{"line":97,"column":8},"end":{"line":97,"column":63}},"63":{"start":{"line":100,"column":8},"end":{"line":100,"column":50}},"64":{"start":{"line":103,"column":0},"end":{"line":103,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"validateDatasetParameters","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":34}},"loc":{"start":{"line":14,"column":54},"end":{"line":24,"column":1}},"line":14},"2":{"name":"checkThatIdDoesNotAlreadyExistInCache","decl":{"start":{"line":26,"column":15},"end":{"line":26,"column":52}},"loc":{"start":{"line":26,"column":57},"end":{"line":31,"column":1}},"line":26},"3":{"name":"extractCourseResultsFromZip","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":42}},"loc":{"start":{"line":33,"column":52},"end":{"line":60,"column":1}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":52},"end":{"line":41,"column":53}},"loc":{"start":{"line":41,"column":68},"end":{"line":57,"column":5}},"line":41},"5":{"name":"mapJsonToSections","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":26}},"loc":{"start":{"line":61,"column":45},"end":{"line":68,"column":1}},"line":61},"6":{"name":"mapResultsToSectionArray","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":33}},"loc":{"start":{"line":69,"column":51},"end":{"line":76,"column":1}},"line":69},"7":{"name":"createSectionsDatasetFromContent","decl":{"start":{"line":77,"column":15},"end":{"line":77,"column":47}},"loc":{"start":{"line":77,"column":63},"end":{"line":85,"column":1}},"line":77},"8":{"name":"createRoomsDataSetFromContent","decl":{"start":{"line":87,"column":15},"end":{"line":87,"column":44}},"loc":{"start":{"line":87,"column":54},"end":{"line":91,"column":1}},"line":87},"9":{"name":"createDatasetFromContent","decl":{"start":{"line":92,"column":15},"end":{"line":92,"column":39}},"loc":{"start":{"line":92,"column":55},"end":{"line":102,"column":1}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15},"4":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":105}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":19}},{"start":{"line":15,"column":23},"end":{"line":15,"column":39}},{"start":{"line":15,"column":43},"end":{"line":15,"column":59}},{"start":{"line":15,"column":63},"end":{"line":15,"column":85}},{"start":{"line":15,"column":89},"end":{"line":15,"column":105}}],"line":15},"5":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18},"6":{"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":43}},"type":"binary-expr","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":43}}],"line":18},"7":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":4},"end":{"line":23,"column":5}}],"line":21},"8":{"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":49}},"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":24}},{"start":{"line":21,"column":28},"end":{"line":21,"column":49}}],"line":21},"9":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"10":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"11":{"loc":{"start":{"line":42,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":56,"column":9}},{"start":{"line":42,"column":8},"end":{"line":56,"column":9}}],"line":42},"12":{"loc":{"start":{"line":44,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":55,"column":13}},{"start":{"line":44,"column":12},"end":{"line":55,"column":13}}],"line":44},"13":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{"line":81,"column":4},"end":{"line":83,"column":5}}],"line":81},"14":{"loc":{"start":{"line":93,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":101,"column":5}},{"start":{"line":93,"column":4},"end":{"line":101,"column":5}}],"line":93},"15":{"loc":{"start":{"line":96,"column":9},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":9},"end":{"line":101,"column":5}},{"start":{"line":96,"column":9},"end":{"line":101,"column":5}}],"line":96}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":72,"12":9,"13":63,"14":1,"15":62,"16":1,"17":1,"18":61,"19":61,"20":4,"21":1,"22":42,"23":42,"24":42,"25":42,"26":1,"27":41,"28":41,"29":6025,"30":5984,"31":5984,"32":5984,"33":5984,"34":5983,"35":1,"36":0,"37":41,"38":40,"39":5983,"40":5983,"41":65296,"42":65296,"43":5983,"44":40,"45":40,"46":5983,"47":5983,"48":40,"49":42,"50":40,"51":40,"52":40,"53":1,"54":39,"55":1,"56":15,"57":15,"58":15,"59":57,"60":15,"61":42,"62":42,"63":0,"64":1},"f":{"0":3,"1":72,"2":61,"3":42,"4":6025,"5":5983,"6":40,"7":42,"8":15,"9":57},"b":{"0":[1,1,1],"1":[2,1],"2":[3,3],"3":[9,63],"4":[72,70,70,67,67],"5":[1,62],"6":[63,62],"7":[1,61],"8":[62,61],"9":[4,57],"10":[1,41],"11":[5984,41],"12":[5984,0],"13":[1,39],"14":[15,42],"15":[42,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/AddDatasetHelper.ts","sources":["C:/Users/jakey/OneDrive/Documents/UBC/Year 3 Term 1/Cpsc310/teamProjectTandJ/project_team209/src/helperFunctions/AddDatasetHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport { InsightDatasetKind, InsightError } from \"../controller/IInsightFacade\";\nimport { getAllCachedDatasetIds } from \"../objects/FileManagement\";\nimport Section from \"../objects/Section\";\nimport Dataset from \"../objects/Dataset\";\n\nconst parse5 = require(\"parse5\");\nconst fs = require(\"fs\");\n\nexport function validateDatasetParameters(id: string, content: string, kind: InsightDatasetKind): void {\n\tif (id === null || id === undefined || id.trim() === \"\" || typeof id !== \"string\" || id.includes(\"_\")) {\n\t\tthrow new InsightError(\"Invalid id\");\n\t}\n\n\tif (kind === null || kind === undefined) {\n\t\tthrow new InsightError(\"Invalid InsightDatasetKind, its either null or undefined\");\n\t}\n\n\tif (content === null || content === undefined) {\n\t\tthrow new InsightError(\"Invalid content, its either null or undefined\");\n\t}\n}\n\nexport async function checkThatIdDoesNotAlreadyExistInCache(id: string): Promise<void> {\n\tconst idsThatExistInCacheSoFar = await getAllCachedDatasetIds();\n\n\tif (idsThatExistInCacheSoFar.includes(id)) {\n\t\tthrow new InsightError(\"id already exists\");\n\t}\n}\n\nasync function extractCourseResultsFromZip(content: string): Promise<any[]> {\n\tconst zip = new JSZip();\n\n\tconst zipData = await zip.loadAsync(content, { base64: true });\n\n\tconst firstFileName = Object.keys(zipData.files)[0]; // Get the name of the first file\n\n\tif (firstFileName !== \"courses/\") {\n\t\tthrow new InsightError(\"no folder 'courses' in zip file\");\n\t}\n\n\tconst resultsJson: any[] = []; // To store the results from each file as a Json\n\n\tconst promises = Object.keys(zipData.files).map(async (path) => {\n\t\tif (path !== \"courses/\") {\n\t\t\tconst fileData = await zipData.file(path)?.async(\"string\"); // Read the file\n\t\t\tif (fileData) {\n\t\t\t\ttry {\n\t\t\t\t\tconst resultJson = JSON.parse(fileData); // Parse the JSON string into resultsJson Object\n\t\t\t\t\tresultsJson.push(resultJson); // Store the object in the resultsJson\n\t\t\t\t} catch (_error) {\n\t\t\t\t\tthrow new InsightError(\"Invalid json\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Invalid json, path not found for some reason\");\n\t\t\t}\n\t\t}\n\t});\n\n\t// wait for all promises to finish\n\tawait Promise.all(promises);\n\treturn resultsJson;\n}\n\nfunction mapJsonToSections(sectionJsonArray: any[]): Section[] {\n\tconst sectionArray: Section[] = [];\n\n\tfor (const section of sectionJsonArray) {\n\t\tconst newSection = new Section(\n\t\t\tsection.id,\n\t\t\tsection.Course,\n\t\t\tsection.Title,\n\t\t\tsection.Professor,\n\t\t\tsection.Subject,\n\t\t\tsection.Year,\n\t\t\tsection.Avg,\n\t\t\tsection.Pass,\n\t\t\tsection.Fail,\n\t\t\tsection.Audit,\n\t\t\tsection.Section\n\t\t);\n\n\t\tsectionArray.push(newSection);\n\t}\n\n\treturn sectionArray;\n}\n\nfunction mapResultsToSectionArray(resultJsonArray: any[]): Section[] {\n\tconst sectionArray: Section[] = [];\n\n\tfor (const resultJson of resultJsonArray) {\n\t\tconst { result } = resultJson;\n\t\tsectionArray.push(...mapJsonToSections(result));\n\t}\n\n\treturn sectionArray;\n}\n\nexport async function createSectionsDatasetFromContent(content: string, kind: InsightDatasetKind): Promise<Dataset> {\n\tconst resultJsonArray: any[] = await extractCourseResultsFromZip(content);\n\n\tconst sectionArray = mapResultsToSectionArray(resultJsonArray);\n\n\tconst newDataset = new Dataset(sectionArray, kind);\n\n\tif (sectionArray.length === 0) {\n\t\tthrow new InsightError(\"Invalid dataset, no sections\");\n\t}\n\n\treturn newDataset;\n}\n\nasync function createRoomsDataSetFromContent(content: string): Promise<Dataset> {\n\t// Decode the base64 string provided by content\n\tconst zipDecode = Buffer.from(content, \"base64\");\n\n\t// Load zip with JSZip\n\tconst zip = await JSZip.loadAsync(zipDecode);\n\n\t// Find and read the index.htm file within the campus folder\n\treturn null as any;\n}\n\nexport async function createDatasetFromContent(content: string, kind: InsightDatasetKind): Promise<Dataset> {\n\tif (kind === InsightDatasetKind.Rooms) {\n\t\treturn createRoomsDataSetFromContent(content);\n\t} else if (kind === InsightDatasetKind.Sections) {\n\t\treturn createSectionsDatasetFromContent(content, kind);\n\t} else {\n\t\tthrow new InsightError();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"159fb973bee8138096765e2b2fc57b747b8b9fd4","contentHash":"892f7169612439f1a026123b963fc3658b1cc66af68a49e132f535b6762f0cc3"}}