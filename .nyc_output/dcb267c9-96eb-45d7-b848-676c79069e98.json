{"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/IInsightFacade.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":51,"6":51,"7":1,"8":3,"9":3,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":51,"2":3,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/IInsightFacade.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"824a14ba119f38d1dd5756c1879130106173df4f","contentHash":"cd52b263a64a91c8a8b0e87d419244cafb93b4b1d7b99cee755ea8f874fee747"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/InsightFacade.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":64}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":64}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":61}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":65}},"8":{"start":{"line":11,"column":14},"end":{"line":11,"column":30}},"9":{"start":{"line":14,"column":20},"end":{"line":14,"column":31}},"10":{"start":{"line":15,"column":24},"end":{"line":15,"column":70}},"11":{"start":{"line":16,"column":30},"end":{"line":16,"column":59}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":87}},"14":{"start":{"line":20,"column":28},"end":{"line":20,"column":30}},"15":{"start":{"line":21,"column":25},"end":{"line":37,"column":10}},"16":{"start":{"line":22,"column":12},"end":{"line":36,"column":13}},"17":{"start":{"line":23,"column":33},"end":{"line":23,"column":74}},"18":{"start":{"line":24,"column":16},"end":{"line":35,"column":17}},"19":{"start":{"line":25,"column":20},"end":{"line":31,"column":21}},"20":{"start":{"line":26,"column":43},"end":{"line":26,"column":63}},"21":{"start":{"line":27,"column":24},"end":{"line":27,"column":53}},"22":{"start":{"line":30,"column":24},"end":{"line":30,"column":80}},"23":{"start":{"line":34,"column":20},"end":{"line":34,"column":108}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":36}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":27}},"26":{"start":{"line":42,"column":29},"end":{"line":42,"column":31}},"27":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"28":{"start":{"line":44,"column":31},"end":{"line":44,"column":218}},"29":{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},"30":{"start":{"line":47,"column":8},"end":{"line":47,"column":28}},"31":{"start":{"line":50,"column":29},"end":{"line":50,"column":31}},"32":{"start":{"line":51,"column":8},"end":{"line":54,"column":9}},"33":{"start":{"line":52,"column":31},"end":{"line":52,"column":41}},"34":{"start":{"line":53,"column":12},"end":{"line":53,"column":76}},"35":{"start":{"line":55,"column":8},"end":{"line":55,"column":28}},"36":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"37":{"start":{"line":59,"column":12},"end":{"line":59,"column":66}},"38":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"39":{"start":{"line":62,"column":12},"end":{"line":62,"column":112}},"40":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"41":{"start":{"line":65,"column":12},"end":{"line":65,"column":101}},"42":{"start":{"line":67,"column":41},"end":{"line":67,"column":93}},"43":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"44":{"start":{"line":69,"column":12},"end":{"line":69,"column":73}},"45":{"start":{"line":71,"column":8},"end":{"line":71,"column":55}},"46":{"start":{"line":72,"column":32},"end":{"line":72,"column":71}},"47":{"start":{"line":73,"column":29},"end":{"line":73,"column":84}},"48":{"start":{"line":74,"column":27},"end":{"line":74,"column":62}},"49":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"50":{"start":{"line":76,"column":12},"end":{"line":76,"column":84}},"51":{"start":{"line":78,"column":8},"end":{"line":78,"column":81}},"52":{"start":{"line":79,"column":8},"end":{"line":79,"column":68}},"53":{"start":{"line":82,"column":22},"end":{"line":82,"column":31}},"54":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"55":{"start":{"line":84,"column":12},"end":{"line":84,"column":82}},"56":{"start":{"line":86,"column":41},"end":{"line":86,"column":93}},"57":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"58":{"start":{"line":88,"column":12},"end":{"line":88,"column":98}},"59":{"start":{"line":90,"column":8},"end":{"line":90,"column":67}},"60":{"start":{"line":91,"column":8},"end":{"line":91,"column":18}},"61":{"start":{"line":94,"column":25},"end":{"line":94,"column":77}},"62":{"start":{"line":95,"column":31},"end":{"line":95,"column":85}},"63":{"start":{"line":96,"column":8},"end":{"line":96,"column":30}},"64":{"start":{"line":99,"column":20},"end":{"line":99,"column":72}},"65":{"start":{"line":100,"column":25},"end":{"line":108,"column":10}},"66":{"start":{"line":101,"column":25},"end":{"line":101,"column":70}},"67":{"start":{"line":102,"column":28},"end":{"line":102,"column":73}},"68":{"start":{"line":103,"column":12},"end":{"line":107,"column":14}},"69":{"start":{"line":109,"column":25},"end":{"line":109,"column":52}},"70":{"start":{"line":110,"column":8},"end":{"line":110,"column":24}},"71":{"start":{"line":113,"column":0},"end":{"line":113,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":39},"end":{"line":40,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":72},"end":{"line":37,"column":9}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":51},"end":{"line":48,"column":5}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":55},"end":{"line":56,"column":5}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":40},"end":{"line":80,"column":5}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":28},"end":{"line":92,"column":5}},"line":81},"7":{"name":"(anonymous_7)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":30},"end":{"line":97,"column":5}},"line":93},"8":{"name":"(anonymous_8)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":25},"end":{"line":111,"column":5}},"line":98},"9":{"name":"(anonymous_9)","decl":{"start":{"line":100,"column":33},"end":{"line":100,"column":34}},"loc":{"start":{"line":100,"column":47},"end":{"line":108,"column":9}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"4":{"loc":{"start":{"line":22,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":36,"column":13}},{"start":{"line":22,"column":12},"end":{"line":36,"column":13}}],"line":22},"5":{"loc":{"start":{"line":24,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":24,"column":16},"end":{"line":35,"column":17}},{"start":{"line":24,"column":16},"end":{"line":35,"column":17}}],"line":24},"6":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58},"7":{"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":109}},"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":43}},{"start":{"line":58,"column":47},"end":{"line":58,"column":63}},{"start":{"line":58,"column":67},"end":{"line":58,"column":89}},{"start":{"line":58,"column":93},"end":{"line":58,"column":109}}],"line":58},"8":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61},"9":{"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":47}},"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":47}}],"line":61},"10":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"11":{"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":53}},"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":28}},{"start":{"line":64,"column":32},"end":{"line":64,"column":53}}],"line":64},"12":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"13":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"14":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"15":{"loc":{"start":{"line":83,"column":12},"end":{"line":83,"column":108}},"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":27}},{"start":{"line":83,"column":31},"end":{"line":83,"column":42}},{"start":{"line":83,"column":46},"end":{"line":83,"column":62}},{"start":{"line":83,"column":66},"end":{"line":83,"column":88}},{"start":{"line":83,"column":92},"end":{"line":83,"column":108}}],"line":83},"16":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":38,"10":38,"11":38,"12":38,"13":4,"14":34,"15":34,"16":6011,"17":5977,"18":5977,"19":5977,"20":5977,"21":5976,"22":1,"23":0,"24":34,"25":33,"26":5976,"27":5976,"28":65170,"29":65170,"30":5976,"31":33,"32":33,"33":5976,"34":5976,"35":33,"36":48,"37":5,"38":43,"39":1,"40":42,"41":1,"42":41,"43":41,"44":3,"45":38,"46":38,"47":33,"48":33,"49":33,"50":1,"51":32,"52":32,"53":16,"54":16,"55":4,"56":12,"57":12,"58":3,"59":9,"60":9,"61":56,"62":24,"63":24,"64":4,"65":4,"66":8,"67":8,"68":8,"69":4,"70":4,"71":1},"f":{"0":2,"1":38,"2":6011,"3":5976,"4":33,"5":48,"6":16,"7":56,"8":4,"9":8},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[4,34],"4":[5977,34],"5":[5977,0],"6":[5,43],"7":[48,47,47,44,44],"8":[1,42],"9":[43,42],"10":[1,41],"11":[42,41],"12":[3,38],"13":[1,32],"14":[4,12],"15":[16,14,13,12,12],"16":[3,9]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/InsightFacade.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import Dataset from \"../objects/Dataset\";\nimport Section from \"../objects/Section\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport {\n\tcreateDataFolder,\n\tgetAllCachedDatasetIds,\n\tgetKindFromId,\n\tgetRowsFromId,\n\tremoveDatasetFromDataCache,\n\tsaveDatasetToDataCache,\n} from \"../objects/FileManagement\";\nimport { getAllValidSections, parseSectionsData } from \"../helperFunctions/QueryHandler\";\nconst JSZip = require(\"jszip\");\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate async getResultsJsonArray(content: string): Promise<any[]> {\n\t\tconst zip = new JSZip();\n\n\t\tconst zipData = await zip.loadAsync(content, { base64: true });\n\n\t\tconst firstFileName = Object.keys(zipData.files)[0]; // Get the name of the first file\n\n\t\tif (firstFileName !== \"courses/\") {\n\t\t\tthrow new InsightError(\"no folder 'courses' in zip file\");\n\t\t}\n\n\t\tconst resultsJson: any[] = []; // To store the results from each file as a Json\n\n\t\tconst promises = Object.keys(zipData.files).map(async (path) => {\n\t\t\tif (path !== \"courses/\") {\n\t\t\t\tconst fileData = await zipData.file(path)?.async(\"string\"); // Read the file\n\t\t\t\tif (fileData) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst resultJson = JSON.parse(fileData); // Parse the JSON string into resultsJson Object\n\t\t\t\t\t\tresultsJson.push(resultJson); // Store the object in the resultsJson\n\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\tthrow new InsightError(\"Invalid json\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InsightError(\"Invalid json, path not found for some reason\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// wait for all promises to finish\n\t\tawait Promise.all(promises);\n\t\treturn resultsJson;\n\t}\n\n\tprivate turnResultJsonToSectionArray(sectionJsonArray: any[]): Section[] {\n\t\tconst sectionArray: Section[] = [];\n\n\t\tfor (const section of sectionJsonArray) {\n\t\t\tconst newSection = new Section(\n\t\t\t\tsection.id,\n\t\t\t\tsection.Course,\n\t\t\t\tsection.Title,\n\t\t\t\tsection.Professor,\n\t\t\t\tsection.Subject,\n\t\t\t\tsection.Year,\n\t\t\t\tsection.Avg,\n\t\t\t\tsection.Pass,\n\t\t\t\tsection.Fail,\n\t\t\t\tsection.Audit,\n\t\t\t\tsection.Section\n\t\t\t);\n\n\t\t\tsectionArray.push(newSection);\n\t\t}\n\n\t\treturn sectionArray;\n\t}\n\n\tprivate turnResultJsonArrayToSectionArray(resultJsonArray: any[]): Section[] {\n\t\tconst sectionArray: Section[] = [];\n\n\t\tfor (const resultJson of resultJsonArray) {\n\t\t\tconst { result } = resultJson;\n\t\t\tsectionArray.push(...this.turnResultJsonToSectionArray(result));\n\t\t}\n\n\t\treturn sectionArray;\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// jsonContents now contains all the parsed JSON objects from the files\n\n\t\tif (id === null || id === undefined || id.trim() === \"\" || typeof id !== \"string\" || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id\");\n\t\t}\n\n\t\tif (kind === null || kind === undefined) {\n\t\t\tthrow new InsightError(\"Invalid InsightDatasetKind, its either null or undefined\");\n\t\t}\n\n\t\tif (content === null || content === undefined) {\n\t\t\tthrow new InsightError(\"Invalid content, its either null or undefined\");\n\t\t}\n\n\t\tconst idsThatExistInCacheSoFar = await getAllCachedDatasetIds();\n\n\t\tif (idsThatExistInCacheSoFar.includes(id)) {\n\t\t\tthrow new InsightError(\"id already exists\");\n\t\t}\n\n\t\tawait createDataFolder();\n\n\t\tconst resultJsonArray: any[] = await this.getResultsJsonArray(content);\n\n\t\tconst sectionArray = this.turnResultJsonArrayToSectionArray(resultJsonArray);\n\n\t\tconst newDataset = new Dataset(sectionArray);\n\n\t\tif (sectionArray.length === 0) {\n\t\t\tthrow new InsightError(\"Invalid dataset, no sections\");\n\t\t}\n\n\t\tawait saveDatasetToDataCache(id, newDataset, kind);\n\n\t\treturn await getAllCachedDatasetIds();\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tconst regex = /^[^_]+$/;\n\n\t\t// checks if id is valid, otherwise throws error\n\t\tif (!regex.test(id) || id === null || id.trim() === \"\" || typeof id !== \"string\" || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id (removeDataset)\");\n\t\t}\n\n\t\tconst idsThatExistInCacheSoFar = await getAllCachedDatasetIds();\n\n\t\tif (!idsThatExistInCacheSoFar.includes(id)) {\n\t\t\tthrow new NotFoundError(\"ID submitted is not found (removeDataset)\");\n\t\t}\n\n\t\tawait removeDatasetFromDataCache(id);\n\t\treturn id;\n\t}\n\n\t// Reminder that query will use keys from the dataset\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// gets all sections\n\t\tconst sections: Section[] = await getAllValidSections(query);\n\t\tconst insightResults: InsightResult[] = parseSectionsData(sections, query);\n\n\t\treturn insightResults;\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tconst ids = await getAllCachedDatasetIds();\n\n\t\t// Create an array of promises for each dataset\n\t\tconst promises = ids.map(async (id) => {\n\t\t\tconst kind = await getKindFromId(id); // Get the kind of dataset\n\t\t\tconst numRows = await getRowsFromId(id); // Get the number of rows in the dataset\n\n\t\t\t// Construct the object\n\t\t\treturn {\n\t\t\t\tid: id,\n\t\t\t\tkind: kind,\n\t\t\t\tnumRows: numRows,\n\t\t\t} as InsightDataset; // Type assertion\n\t\t});\n\n\t\t// Wait for all promises to resolve and return the array\n\t\tconst datasets = await Promise.all(promises);\n\t\treturn datasets; // Return the resolved datasets\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cb912d361fa906349e1f71bf1609e1d4c8da98c0","contentHash":"4d560f4c2b0ec8ae55aff0faec60ab3f96cbd5043979a5dee288c92de3bd2d3e"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Dataset.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"3":{"start":{"line":12,"column":8},"end":{"line":14,"column":10}},"4":{"start":{"line":13,"column":53},"end":{"line":13,"column":69}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":26},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":13},"end":{"line":15,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":40},"end":{"line":13,"column":41}},"loc":{"start":{"line":13,"column":53},"end":{"line":13,"column":69}},"line":13}},"branchMap":{},"s":{"0":1,"1":70,"2":69,"3":32,"4":65170,"5":1},"f":{"0":70,"1":69,"2":32,"3":65170},"b":{},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Dataset.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Dataset.ts"],"names":[],"mappings":";;AAEA,MAAM,OAAO;IACJ,QAAQ,CAAY;IAE5B,YAAY,QAAmB;QAC9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,MAAM;QACZ,OAAO;YACN,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC1D,CAAC;IACH,CAAC;CACD;AAED,kBAAe,OAAO,CAAC","sourcesContent":["import Section from \"./Section\";\n\nclass Dataset {\n\tprivate sections: Section[];\n\n\tconstructor(sections: Section[]) {\n\t\tthis.sections = sections;\n\t}\n\n\tpublic getSections(): Section[] {\n\t\treturn this.sections;\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn {\n\t\t\tsections: this.sections.map((section) => section.toJSON()), // Converts each Section to JSON\n\t\t};\n\t}\n}\n\nexport default Dataset;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dbb3fd6f2ce52f6aa5c17623ca0b65bcbf83cd3b","contentHash":"cfd9c85d98c3d3ab068229dc1b78cfd11c382f2ad95ba7b9005ad601a1ba32a5"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Section.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":28}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"11":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"12":{"start":{"line":27,"column":12},"end":{"line":27,"column":29}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":25}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":26}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":31}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":25}},"22":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"24":{"start":{"line":64,"column":8},"end":{"line":76,"column":10}},"25":{"start":{"line":79,"column":0},"end":{"line":79,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":94},"end":{"line":32,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":14},"end":{"line":35,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":15},"end":{"line":41,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":20},"end":{"line":44,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":14},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":14},"end":{"line":50,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":13},"end":{"line":53,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":14},"end":{"line":56,"column":5}},"line":54},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":14},"end":{"line":59,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":15},"end":{"line":62,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":13},"end":{"line":77,"column":5}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26}},"s":{"0":1,"1":2455814,"2":2455814,"3":2455814,"4":2455814,"5":2455814,"6":2455814,"7":2455814,"8":2455814,"9":2455814,"10":2455814,"11":2455814,"12":935877,"13":1519937,"14":6202,"15":15054,"16":16054,"17":783706,"18":717218,"19":70992,"20":699986,"21":146509,"22":13596,"23":11878,"24":65170,"25":1},"f":{"0":2455814,"1":6202,"2":15054,"3":16054,"4":783706,"5":717218,"6":70992,"7":699986,"8":146509,"9":13596,"10":11878,"11":65170},"b":{"0":[935877,1519937]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Section.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/Section.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO;IACJ,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IACd,OAAO,CAAS;IAExB,YACC,EAAU,EACV,MAAc,EACd,KAAa,EACb,SAAiB,EACjB,OAAe,EACf,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa,EACb,OAAe;QAEf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAGvB,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;aAAM;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;IACF,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,MAAM;QACZ,OAAO;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;SACrB,CAAC;IACH,CAAC;CACD;AAED,kBAAe,OAAO,CAAC","sourcesContent":["class Section {\n\tprivate uuid: string;\n\tprivate id: string;\n\tprivate title: string;\n\tprivate instructor: string;\n\tprivate dept: string;\n\tprivate year: number;\n\tprivate avg: number;\n\tprivate pass: number;\n\tprivate fail: number;\n\tprivate audit: number;\n\tprivate section: string; // We will not have a getter for this because I'm pretty sure in the specifications you can't query based on this parameter\n\n\tconstructor(\n\t\tid: string,\n\t\tcourse: string,\n\t\ttitle: string,\n\t\tprofessor: string,\n\t\tsubject: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number,\n\t\tsection: string\n\t) {\n\t\tthis.uuid = id;\n\t\tthis.id = course;\n\t\tthis.title = title;\n\t\tthis.instructor = professor;\n\t\tthis.dept = subject;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t\tthis.section = section;\n\n\t\t// As per the specifications, set year to 1900 if section is \"overall\"\n\t\tif (section === \"overall\") {\n\t\t\tthis.year = 1900;\n\t\t} else {\n\t\t\tthis.year = year;\n\t\t}\n\t}\n\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tinstructor: this.instructor,\n\t\t\tdept: this.dept,\n\t\t\tyear: this.year,\n\t\t\tavg: this.avg,\n\t\t\tpass: this.pass,\n\t\t\tfail: this.fail,\n\t\t\taudit: this.audit,\n\t\t\tsection: this.section,\n\t\t};\n\t}\n}\n\nexport default Section;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80a546ed767721cbaad4cf95f3afa1afe0073b54","contentHash":"6fe40f233a37b5c35cb09d8ffe81dc62d12887d5d9d36a08299cf4eff21627e4"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/FileManagement.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/FileManagement.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":212}},"28":{"start":{"line":30,"column":15},"end":{"line":30,"column":47}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},"30":{"start":{"line":32,"column":25},"end":{"line":32,"column":64}},"31":{"start":{"line":33,"column":18},"end":{"line":33,"column":55}},"32":{"start":{"line":34,"column":18},"end":{"line":34,"column":55}},"33":{"start":{"line":35,"column":22},"end":{"line":35,"column":72}},"34":{"start":{"line":36,"column":20},"end":{"line":36,"column":26}},"35":{"start":{"line":37,"column":20},"end":{"line":37,"column":26}},"36":{"start":{"line":39,"column":4},"end":{"line":54,"column":5}},"37":{"start":{"line":40,"column":8},"end":{"line":40,"column":47}},"38":{"start":{"line":43,"column":8},"end":{"line":53,"column":9}},"39":{"start":{"line":44,"column":30},"end":{"line":44,"column":38}},"40":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"41":{"start":{"line":48,"column":16},"end":{"line":48,"column":100}},"42":{"start":{"line":52,"column":12},"end":{"line":52,"column":96}},"43":{"start":{"line":56,"column":0},"end":{"line":56,"column":44}},"44":{"start":{"line":58,"column":24},"end":{"line":58,"column":25}},"45":{"start":{"line":59,"column":19},"end":{"line":59,"column":67}},"46":{"start":{"line":60,"column":24},"end":{"line":60,"column":75}},"47":{"start":{"line":61,"column":4},"end":{"line":61,"column":55}},"48":{"start":{"line":62,"column":4},"end":{"line":62,"column":73}},"49":{"start":{"line":63,"column":4},"end":{"line":63,"column":48}},"50":{"start":{"line":64,"column":4},"end":{"line":64,"column":73}},"51":{"start":{"line":65,"column":4},"end":{"line":65,"column":77}},"52":{"start":{"line":67,"column":0},"end":{"line":67,"column":56}},"53":{"start":{"line":69,"column":19},"end":{"line":69,"column":67}},"54":{"start":{"line":70,"column":4},"end":{"line":80,"column":5}},"55":{"start":{"line":71,"column":8},"end":{"line":71,"column":43}},"56":{"start":{"line":72,"column":8},"end":{"line":72,"column":77}},"57":{"start":{"line":73,"column":8},"end":{"line":73,"column":43}},"58":{"start":{"line":74,"column":8},"end":{"line":74,"column":77}},"59":{"start":{"line":75,"column":8},"end":{"line":75,"column":43}},"60":{"start":{"line":78,"column":29},"end":{"line":78,"column":40}},"61":{"start":{"line":79,"column":8},"end":{"line":79,"column":74}},"62":{"start":{"line":82,"column":0},"end":{"line":82,"column":64}},"63":{"start":{"line":84,"column":20},"end":{"line":84,"column":22}},"64":{"start":{"line":85,"column":27},"end":{"line":85,"column":28}},"65":{"start":{"line":86,"column":4},"end":{"line":86,"column":29}},"66":{"start":{"line":87,"column":4},"end":{"line":99,"column":5}},"67":{"start":{"line":88,"column":33},"end":{"line":88,"column":73}},"68":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"69":{"start":{"line":90,"column":33},"end":{"line":90,"column":55}},"70":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"71":{"start":{"line":92,"column":16},"end":{"line":92,"column":46}},"72":{"start":{"line":97,"column":29},"end":{"line":97,"column":40}},"73":{"start":{"line":98,"column":8},"end":{"line":98,"column":74}},"74":{"start":{"line":100,"column":4},"end":{"line":100,"column":19}},"75":{"start":{"line":102,"column":0},"end":{"line":102,"column":56}},"76":{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},"77":{"start":{"line":105,"column":25},"end":{"line":105,"column":82}},"78":{"start":{"line":106,"column":24},"end":{"line":106,"column":69}},"79":{"start":{"line":107,"column":8},"end":{"line":107,"column":23}},"80":{"start":{"line":110,"column":29},"end":{"line":110,"column":40}},"81":{"start":{"line":111,"column":8},"end":{"line":111,"column":74}},"82":{"start":{"line":114,"column":0},"end":{"line":114,"column":38}},"83":{"start":{"line":116,"column":4},"end":{"line":131,"column":5}},"84":{"start":{"line":117,"column":25},"end":{"line":117,"column":78}},"85":{"start":{"line":118,"column":24},"end":{"line":118,"column":69}},"86":{"start":{"line":119,"column":29},"end":{"line":119,"column":48}},"87":{"start":{"line":120,"column":29},"end":{"line":120,"column":31}},"88":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"89":{"start":{"line":122,"column":35},"end":{"line":122,"column":42}},"90":{"start":{"line":123,"column":12},"end":{"line":123,"column":380}},"91":{"start":{"line":125,"column":32},"end":{"line":125,"column":67}},"92":{"start":{"line":126,"column":8},"end":{"line":126,"column":31}},"93":{"start":{"line":129,"column":29},"end":{"line":129,"column":40}},"94":{"start":{"line":130,"column":8},"end":{"line":130,"column":74}},"95":{"start":{"line":133,"column":0},"end":{"line":133,"column":44}},"96":{"start":{"line":135,"column":4},"end":{"line":143,"column":5}},"97":{"start":{"line":136,"column":25},"end":{"line":136,"column":82}},"98":{"start":{"line":137,"column":24},"end":{"line":137,"column":69}},"99":{"start":{"line":138,"column":8},"end":{"line":138,"column":31}},"100":{"start":{"line":141,"column":29},"end":{"line":141,"column":40}},"101":{"start":{"line":142,"column":8},"end":{"line":142,"column":74}},"102":{"start":{"line":145,"column":0},"end":{"line":145,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"createDataFolder","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":31}},"loc":{"start":{"line":38,"column":34},"end":{"line":55,"column":1}},"line":38},"8":{"name":"saveDatasetToDataCache","decl":{"start":{"line":57,"column":15},"end":{"line":57,"column":37}},"loc":{"start":{"line":57,"column":57},"end":{"line":66,"column":1}},"line":57},"9":{"name":"removeDatasetFromDataCache","decl":{"start":{"line":68,"column":15},"end":{"line":68,"column":41}},"loc":{"start":{"line":68,"column":46},"end":{"line":81,"column":1}},"line":68},"10":{"name":"getAllCachedDatasetIds","decl":{"start":{"line":83,"column":15},"end":{"line":83,"column":37}},"loc":{"start":{"line":83,"column":40},"end":{"line":101,"column":1}},"line":83},"11":{"name":"getKindFromId","decl":{"start":{"line":103,"column":15},"end":{"line":103,"column":28}},"loc":{"start":{"line":103,"column":33},"end":{"line":113,"column":1}},"line":103},"12":{"name":"getDatasetFromId","decl":{"start":{"line":115,"column":15},"end":{"line":115,"column":31}},"loc":{"start":{"line":115,"column":36},"end":{"line":132,"column":1}},"line":115},"13":{"name":"getRowsFromId","decl":{"start":{"line":134,"column":15},"end":{"line":134,"column":28}},"loc":{"start":{"line":134,"column":33},"end":{"line":144,"column":1}},"line":134}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":43,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":53,"column":9}},{"start":{"line":43,"column":8},"end":{"line":53,"column":9}}],"line":43},"20":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":44}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":32}},{"start":{"line":43,"column":36},"end":{"line":43,"column":44}}],"line":43},"21":{"loc":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},{"start":{"line":45,"column":12},"end":{"line":49,"column":13}}],"line":45},"22":{"loc":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},{"start":{"line":91,"column":12},"end":{"line":93,"column":13}}],"line":91},"23":{"loc":{"start":{"line":91,"column":16},"end":{"line":91,"column":84}},"type":"binary-expr","locations":[{"start":{"line":91,"column":16},"end":{"line":91,"column":54}},{"start":{"line":91,"column":58},"end":{"line":91,"column":84}}],"line":91}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":392,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":127,"37":127,"38":102,"39":102,"40":102,"41":0,"42":0,"43":1,"44":32,"45":32,"46":32,"47":32,"48":32,"49":32,"50":32,"51":32,"52":1,"53":9,"54":9,"55":9,"56":9,"57":9,"58":9,"59":9,"60":0,"61":0,"62":1,"63":89,"64":89,"65":89,"66":89,"67":89,"68":89,"69":300,"70":300,"71":100,"72":0,"73":0,"74":89,"75":1,"76":8,"77":8,"78":8,"79":8,"80":0,"81":0,"82":1,"83":37,"84":37,"85":37,"86":37,"87":37,"88":37,"89":2390644,"90":2390644,"91":37,"92":37,"93":0,"94":0,"95":1,"96":8,"97":8,"98":8,"99":8,"100":0,"101":0,"102":1},"f":{"0":103,"1":392,"2":0,"3":1,"4":0,"5":1,"6":3,"7":127,"8":32,"9":9,"10":89,"11":8,"12":37,"13":8},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[2,1],"18":[3,3],"19":[102,0],"20":[102,102],"21":[102,0],"22":[100,200],"23":[300,100]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/FileManagement.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/objects/FileManagement.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"path\";\nimport * as fs from \"fs\";\nimport { InsightDatasetKind, InsightError } from \"../controller/IInsightFacade\";\nimport Dataset from \"./Dataset\";\nimport Section from \"./Section\";\n\nconst directoryPath = path.join(__dirname, \"..\", \"..\", \"data\"); // Moves up two level to project file root\nconst kindKeyword = \"kind\";\nconst rowsKeyword = \"rows\";\n\nexport async function createDataFolder(): Promise<void> {\n\ttry {\n\t\tawait fs.promises.mkdir(directoryPath);\n\t\t//console.log('Folder \"data\" created.');\n\t} catch (err) {\n\t\tif (err instanceof Error && (err as NodeJS.ErrnoException).code) {\n\t\t\tconst errorCode = (err as NodeJS.ErrnoException).code;\n\t\t\tif (errorCode === \"EEXIST\") {\n\t\t\t\t// Used ChatGPT here to figure out if folder already exists\n\t\t\t\t//console.log('Folder \"data\" already exists.');\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Error making data folder: \" + (err as Error).message);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"Error making data folder: \" + (err as Error).message);\n\t\t}\n\t}\n}\n\nexport async function saveDatasetToDataCache(id: string, dataset: Dataset, kind: InsightDatasetKind): Promise<void> {\n\tconst indentation = 2;\n\tlet filePath = path.join(directoryPath, `${id}.json`);\n\tconst jsonContent = JSON.stringify(dataset.toJSON(), null, indentation); // Convert to JSON into a string so we can save to file\n\tawait fs.promises.writeFile(filePath, jsonContent); // writing the json file\n\n\t// Now we are storing the kind of the dataset it is storing it in a file\n\tfilePath = path.join(directoryPath, `${id}` + kindKeyword);\n\tawait fs.promises.writeFile(filePath, kind); // writing the json file\n\n\t// Now we are storing the sections/rows of the dataset in a file\n\tfilePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\tawait fs.promises.writeFile(filePath, dataset.getSections().length + \"\"); // writing the json file\n}\n\nexport async function removeDatasetFromDataCache(id: string): Promise<void> {\n\tlet filePath = path.join(directoryPath, `${id}.json`);\n\n\ttry {\n\t\tawait fs.promises.unlink(filePath); // remove the file from the cache\n\n\t\t// delete idKind\n\t\tfilePath = path.join(directoryPath, `${id}` + kindKeyword);\n\t\tawait fs.promises.unlink(filePath); // writing the json file\n\n\t\t// delete idRows\n\t\tfilePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\t\tawait fs.promises.unlink(filePath); // writing the json file\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\nexport async function getAllCachedDatasetIds(): Promise<string[]> {\n\tconst idArray: string[] = [];\n\tconst splitArrLength = 2;\n\n\tawait createDataFolder(); // create data folder just in case\n\n\ttry {\n\t\tconst datasetFileNames = await fs.promises.readdir(directoryPath);\n\n\t\t// Add all file (dataset) names into the array that we return\n\t\tfor (const datasetName of datasetFileNames) {\n\t\t\tconst splitNameArr = datasetName.split(\".\"); // Here we split on the period so \"dataset.json\" turns into [dataset, json], then we just keep the name which is at index 0\n\n\t\t\tif (splitNameArr.length === splitArrLength && splitNameArr[1] === \"json\") {\n\t\t\t\t// make sure we only add the id names gotten from jsons (because we have other files that store the number of rows and also the kind of dataset)\n\t\t\t\tidArray.push(splitNameArr[0]); // Here we split on the period so \"dataset.json\" turns into [dataset, json], then we just keep the name which is at index 0\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n\treturn idArray;\n}\n\nexport async function getKindFromId(id: string): Promise<InsightDatasetKind> {\n\ttry {\n\t\tconst filePath = path.join(directoryPath, `${id}` + kindKeyword);\n\n\t\t// Read the contents of the file\n\t\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\t\treturn content as unknown as InsightDatasetKind;\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\ninterface SectionData {\n\tuuid: string;\n\tid: string;\n\ttitle: string;\n\tinstructor: string;\n\tdept: string;\n\tyear: number;\n\tavg: number;\n\tpass: number;\n\tfail: number;\n\taudit: number;\n\tsection: string;\n}\n\nexport async function getDatasetFromId(id: string): Promise<Dataset> {\n\ttry {\n\t\tconst filePath = path.join(directoryPath, `${id}` + \".json\");\n\n\t\t// Read the contents of the file\n\t\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\t\tconst { sections } = JSON.parse(content);\n\n\t\tconst sectionArray: Section[] = [];\n\n\t\tfor (const section of sections) {\n\t\t\tconst sectionDataObj: SectionData = section;\n\n\t\t\tsectionArray.push(\n\t\t\t\tnew Section(\n\t\t\t\t\tString(sectionDataObj.uuid),\n\t\t\t\t\tString(sectionDataObj.id),\n\t\t\t\t\tString(sectionDataObj.title),\n\t\t\t\t\tString(sectionDataObj.instructor),\n\t\t\t\t\tString(sectionDataObj.dept),\n\t\t\t\t\tNumber(sectionDataObj.year),\n\t\t\t\t\tNumber(sectionDataObj.avg),\n\t\t\t\t\tNumber(sectionDataObj.pass),\n\t\t\t\t\tNumber(sectionDataObj.fail),\n\t\t\t\t\tNumber(sectionDataObj.audit),\n\t\t\t\t\tString(sectionDataObj.section)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst datasetToReturn = new Dataset(sectionArray);\n\n\t\treturn datasetToReturn;\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n\nexport async function getRowsFromId(id: string): Promise<number> {\n\ttry {\n\t\tconst filePath = path.join(directoryPath, `${id}` + rowsKeyword);\n\n\t\t// Read the contents of the file\n\t\tconst content = await fs.promises.readFile(filePath, \"utf-8\");\n\n\t\treturn Number(content);\n\t} catch (err) {\n\t\tconst errorMessage = (err as Error).message;\n\t\tthrow new InsightError(\"Error: \" + errorMessage);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8f2f37ee38fb6701b3285a821d9ee8e48ab52692","contentHash":"7c6afa3d77723e9994b29aeaa17cbff006ec40abc728d71d19c8a32c0cf20ee6"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/QueryHandler.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/QueryHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":61}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":58}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":24}},"6":{"start":{"line":9,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":58}},"8":{"start":{"line":13,"column":12},"end":{"line":13,"column":57}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":66}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":63}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":62}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":57}},"13":{"start":{"line":23,"column":12},"end":{"line":23,"column":58}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"15":{"start":{"line":29,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":42}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":40}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":43}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":48}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":42}},"21":{"start":{"line":41,"column":12},"end":{"line":41,"column":42}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":41}},"23":{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},"24":{"start":{"line":47,"column":12},"end":{"line":47,"column":42}},"25":{"start":{"line":49,"column":12},"end":{"line":49,"column":43}},"26":{"start":{"line":51,"column":12},"end":{"line":51,"column":94}},"27":{"start":{"line":55,"column":33},"end":{"line":55,"column":118}},"28":{"start":{"line":56,"column":25},"end":{"line":56,"column":48}},"29":{"start":{"line":57,"column":27},"end":{"line":57,"column":50}},"30":{"start":{"line":58,"column":25},"end":{"line":58,"column":79}},"31":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":80}},"33":{"start":{"line":62,"column":4},"end":{"line":62,"column":41}},"34":{"start":{"line":65,"column":33},"end":{"line":65,"column":118}},"35":{"start":{"line":66,"column":25},"end":{"line":66,"column":48}},"36":{"start":{"line":67,"column":27},"end":{"line":67,"column":50}},"37":{"start":{"line":68,"column":25},"end":{"line":68,"column":79}},"38":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"39":{"start":{"line":70,"column":8},"end":{"line":70,"column":80}},"40":{"start":{"line":72,"column":4},"end":{"line":72,"column":41}},"41":{"start":{"line":75,"column":33},"end":{"line":75,"column":118}},"42":{"start":{"line":76,"column":25},"end":{"line":76,"column":48}},"43":{"start":{"line":77,"column":27},"end":{"line":77,"column":50}},"44":{"start":{"line":78,"column":25},"end":{"line":78,"column":79}},"45":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"46":{"start":{"line":80,"column":8},"end":{"line":80,"column":80}},"47":{"start":{"line":82,"column":4},"end":{"line":82,"column":43}},"48":{"start":{"line":85,"column":33},"end":{"line":85,"column":117}},"49":{"start":{"line":86,"column":25},"end":{"line":86,"column":48}},"50":{"start":{"line":87,"column":27},"end":{"line":87,"column":50}},"51":{"start":{"line":88,"column":4},"end":{"line":88,"column":69}},"52":{"start":{"line":89,"column":25},"end":{"line":89,"column":79}},"53":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"54":{"start":{"line":91,"column":8},"end":{"line":91,"column":80}},"55":{"start":{"line":93,"column":4},"end":{"line":104,"column":5}},"56":{"start":{"line":94,"column":8},"end":{"line":94,"column":73}},"57":{"start":{"line":96,"column":9},"end":{"line":104,"column":5}},"58":{"start":{"line":97,"column":8},"end":{"line":97,"column":73}},"59":{"start":{"line":99,"column":9},"end":{"line":104,"column":5}},"60":{"start":{"line":100,"column":8},"end":{"line":100,"column":75}},"61":{"start":{"line":103,"column":8},"end":{"line":103,"column":47}},"62":{"start":{"line":107,"column":29},"end":{"line":107,"column":107}},"63":{"start":{"line":108,"column":21},"end":{"line":108,"column":40}},"64":{"start":{"line":109,"column":26},"end":{"line":109,"column":45}},"65":{"start":{"line":110,"column":4},"end":{"line":110,"column":78}},"66":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"67":{"start":{"line":114,"column":8},"end":{"line":114,"column":82}},"68":{"start":{"line":116,"column":4},"end":{"line":123,"column":5}},"69":{"start":{"line":117,"column":33},"end":{"line":117,"column":103}},"70":{"start":{"line":118,"column":25},"end":{"line":118,"column":44}},"71":{"start":{"line":119,"column":30},"end":{"line":119,"column":49}},"72":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"73":{"start":{"line":121,"column":12},"end":{"line":121,"column":25}},"74":{"start":{"line":124,"column":4},"end":{"line":124,"column":16}},"75":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"76":{"start":{"line":128,"column":8},"end":{"line":128,"column":81}},"77":{"start":{"line":130,"column":4},"end":{"line":137,"column":5}},"78":{"start":{"line":131,"column":33},"end":{"line":131,"column":103}},"79":{"start":{"line":132,"column":25},"end":{"line":132,"column":44}},"80":{"start":{"line":133,"column":30},"end":{"line":133,"column":49}},"81":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"82":{"start":{"line":135,"column":12},"end":{"line":135,"column":24}},"83":{"start":{"line":138,"column":4},"end":{"line":138,"column":17}},"84":{"start":{"line":141,"column":4},"end":{"line":150,"column":5}},"85":{"start":{"line":142,"column":8},"end":{"line":149,"column":9}},"86":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"87":{"start":{"line":144,"column":16},"end":{"line":144,"column":33}},"88":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"89":{"start":{"line":147,"column":16},"end":{"line":147,"column":56}},"90":{"start":{"line":151,"column":4},"end":{"line":151,"column":18}},"91":{"start":{"line":153,"column":0},"end":{"line":153,"column":54}},"92":{"start":{"line":155,"column":4},"end":{"line":186,"column":5}},"93":{"start":{"line":157,"column":12},"end":{"line":157,"column":82}},"94":{"start":{"line":157,"column":42},"end":{"line":157,"column":80}},"95":{"start":{"line":158,"column":12},"end":{"line":158,"column":18}},"96":{"start":{"line":160,"column":12},"end":{"line":160,"column":78}},"97":{"start":{"line":160,"column":42},"end":{"line":160,"column":76}},"98":{"start":{"line":161,"column":12},"end":{"line":161,"column":18}},"99":{"start":{"line":163,"column":12},"end":{"line":163,"column":84}},"100":{"start":{"line":163,"column":42},"end":{"line":163,"column":82}},"101":{"start":{"line":164,"column":12},"end":{"line":164,"column":18}},"102":{"start":{"line":166,"column":12},"end":{"line":166,"column":94}},"103":{"start":{"line":166,"column":42},"end":{"line":166,"column":92}},"104":{"start":{"line":167,"column":12},"end":{"line":167,"column":18}},"105":{"start":{"line":169,"column":12},"end":{"line":169,"column":82}},"106":{"start":{"line":169,"column":42},"end":{"line":169,"column":80}},"107":{"start":{"line":170,"column":12},"end":{"line":170,"column":18}},"108":{"start":{"line":172,"column":12},"end":{"line":172,"column":69}},"109":{"start":{"line":172,"column":42},"end":{"line":172,"column":67}},"110":{"start":{"line":173,"column":12},"end":{"line":173,"column":18}},"111":{"start":{"line":175,"column":12},"end":{"line":175,"column":67}},"112":{"start":{"line":175,"column":42},"end":{"line":175,"column":65}},"113":{"start":{"line":176,"column":12},"end":{"line":176,"column":18}},"114":{"start":{"line":178,"column":12},"end":{"line":178,"column":69}},"115":{"start":{"line":178,"column":42},"end":{"line":178,"column":67}},"116":{"start":{"line":179,"column":12},"end":{"line":179,"column":18}},"117":{"start":{"line":181,"column":12},"end":{"line":181,"column":69}},"118":{"start":{"line":181,"column":42},"end":{"line":181,"column":67}},"119":{"start":{"line":182,"column":12},"end":{"line":182,"column":18}},"120":{"start":{"line":184,"column":12},"end":{"line":184,"column":71}},"121":{"start":{"line":184,"column":42},"end":{"line":184,"column":69}},"122":{"start":{"line":185,"column":12},"end":{"line":185,"column":18}},"123":{"start":{"line":189,"column":35},"end":{"line":189,"column":37}},"124":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"125":{"start":{"line":191,"column":8},"end":{"line":191,"column":73}},"126":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"127":{"start":{"line":194,"column":30},"end":{"line":194,"column":32}},"128":{"start":{"line":195,"column":8},"end":{"line":199,"column":9}},"129":{"start":{"line":196,"column":39},"end":{"line":196,"column":53}},"130":{"start":{"line":197,"column":29},"end":{"line":197,"column":50}},"131":{"start":{"line":198,"column":12},"end":{"line":198,"column":84}},"132":{"start":{"line":200,"column":8},"end":{"line":200,"column":51}},"133":{"start":{"line":202,"column":4},"end":{"line":202,"column":34}},"134":{"start":{"line":204,"column":0},"end":{"line":204,"column":46}},"135":{"start":{"line":206,"column":4},"end":{"line":206,"column":50}},"136":{"start":{"line":207,"column":22},"end":{"line":207,"column":27}},"137":{"start":{"line":208,"column":29},"end":{"line":208,"column":95}},"138":{"start":{"line":209,"column":21},"end":{"line":209,"column":40}},"139":{"start":{"line":210,"column":30},"end":{"line":210,"column":49}},"140":{"start":{"line":211,"column":40},"end":{"line":211,"column":104}},"141":{"start":{"line":212,"column":42},"end":{"line":212,"column":116}},"142":{"start":{"line":213,"column":24},"end":{"line":213,"column":53}},"143":{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},"144":{"start":{"line":215,"column":8},"end":{"line":215,"column":106}},"145":{"start":{"line":217,"column":27},"end":{"line":217,"column":84}},"146":{"start":{"line":218,"column":29},"end":{"line":218,"column":31}},"147":{"start":{"line":219,"column":4},"end":{"line":226,"column":5}},"148":{"start":{"line":220,"column":8},"end":{"line":225,"column":9}},"149":{"start":{"line":221,"column":12},"end":{"line":221,"column":43}},"150":{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},"151":{"start":{"line":223,"column":16},"end":{"line":223,"column":116}},"152":{"start":{"line":227,"column":4},"end":{"line":227,"column":28}},"153":{"start":{"line":229,"column":0},"end":{"line":229,"column":50}}},"fnMap":{"0":{"name":"sectionMatchesQueryRequirements","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":40}},"loc":{"start":{"line":8,"column":86},"end":{"line":27,"column":1}},"line":8},"1":{"name":"getSectionValueFromConditionKey","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":40}},"loc":{"start":{"line":28,"column":69},"end":{"line":53,"column":1}},"line":28},"2":{"name":"greaterThan","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":49},"end":{"line":63,"column":1}},"line":54},"3":{"name":"lessThan","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":17}},"loc":{"start":{"line":64,"column":46},"end":{"line":73,"column":1}},"line":64},"4":{"name":"equalTo","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":16}},"loc":{"start":{"line":74,"column":45},"end":{"line":83,"column":1}},"line":74},"5":{"name":"is","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":11}},"loc":{"start":{"line":84,"column":40},"end":{"line":105,"column":1}},"line":84},"6":{"name":"not","decl":{"start":{"line":106,"column":9},"end":{"line":106,"column":12}},"loc":{"start":{"line":106,"column":41},"end":{"line":111,"column":1}},"line":106},"7":{"name":"and","decl":{"start":{"line":112,"column":9},"end":{"line":112,"column":12}},"loc":{"start":{"line":112,"column":41},"end":{"line":125,"column":1}},"line":112},"8":{"name":"or","decl":{"start":{"line":126,"column":9},"end":{"line":126,"column":11}},"loc":{"start":{"line":126,"column":40},"end":{"line":139,"column":1}},"line":126},"9":{"name":"getKeysWithUnderscore","decl":{"start":{"line":140,"column":9},"end":{"line":140,"column":30}},"loc":{"start":{"line":140,"column":49},"end":{"line":152,"column":1}},"line":140},"10":{"name":"sortSectionUsingKey","decl":{"start":{"line":154,"column":9},"end":{"line":154,"column":28}},"loc":{"start":{"line":154,"column":59},"end":{"line":187,"column":1}},"line":154},"11":{"name":"(anonymous_11)","decl":{"start":{"line":157,"column":32},"end":{"line":157,"column":33}},"loc":{"start":{"line":157,"column":42},"end":{"line":157,"column":80}},"line":157},"12":{"name":"(anonymous_12)","decl":{"start":{"line":160,"column":32},"end":{"line":160,"column":33}},"loc":{"start":{"line":160,"column":42},"end":{"line":160,"column":76}},"line":160},"13":{"name":"(anonymous_13)","decl":{"start":{"line":163,"column":32},"end":{"line":163,"column":33}},"loc":{"start":{"line":163,"column":42},"end":{"line":163,"column":82}},"line":163},"14":{"name":"(anonymous_14)","decl":{"start":{"line":166,"column":32},"end":{"line":166,"column":33}},"loc":{"start":{"line":166,"column":42},"end":{"line":166,"column":92}},"line":166},"15":{"name":"(anonymous_15)","decl":{"start":{"line":169,"column":32},"end":{"line":169,"column":33}},"loc":{"start":{"line":169,"column":42},"end":{"line":169,"column":80}},"line":169},"16":{"name":"(anonymous_16)","decl":{"start":{"line":172,"column":32},"end":{"line":172,"column":33}},"loc":{"start":{"line":172,"column":42},"end":{"line":172,"column":67}},"line":172},"17":{"name":"(anonymous_17)","decl":{"start":{"line":175,"column":32},"end":{"line":175,"column":33}},"loc":{"start":{"line":175,"column":42},"end":{"line":175,"column":65}},"line":175},"18":{"name":"(anonymous_18)","decl":{"start":{"line":178,"column":32},"end":{"line":178,"column":33}},"loc":{"start":{"line":178,"column":42},"end":{"line":178,"column":67}},"line":178},"19":{"name":"(anonymous_19)","decl":{"start":{"line":181,"column":32},"end":{"line":181,"column":33}},"loc":{"start":{"line":181,"column":42},"end":{"line":181,"column":67}},"line":181},"20":{"name":"(anonymous_20)","decl":{"start":{"line":184,"column":32},"end":{"line":184,"column":33}},"loc":{"start":{"line":184,"column":42},"end":{"line":184,"column":69}},"line":184},"21":{"name":"parseSectionsData","decl":{"start":{"line":188,"column":9},"end":{"line":188,"column":26}},"loc":{"start":{"line":188,"column":44},"end":{"line":203,"column":1}},"line":188},"22":{"name":"getAllValidSections","decl":{"start":{"line":205,"column":15},"end":{"line":205,"column":34}},"loc":{"start":{"line":205,"column":42},"end":{"line":228,"column":1}},"line":205}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":26,"column":5}},"type":"switch","locations":[{"start":{"line":10,"column":8},"end":{"line":11,"column":58}},{"start":{"line":12,"column":8},"end":{"line":13,"column":57}},{"start":{"line":14,"column":8},"end":{"line":15,"column":66}},{"start":{"line":16,"column":8},"end":{"line":17,"column":63}},{"start":{"line":18,"column":8},"end":{"line":19,"column":62}},{"start":{"line":20,"column":8},"end":{"line":21,"column":57}},{"start":{"line":22,"column":8},"end":{"line":23,"column":58}},{"start":{"line":24,"column":8},"end":{"line":25,"column":24}}],"line":9},"1":{"loc":{"start":{"line":29,"column":4},"end":{"line":52,"column":5}},"type":"switch","locations":[{"start":{"line":30,"column":8},"end":{"line":31,"column":42}},{"start":{"line":32,"column":8},"end":{"line":33,"column":40}},{"start":{"line":34,"column":8},"end":{"line":35,"column":43}},{"start":{"line":36,"column":8},"end":{"line":37,"column":48}},{"start":{"line":38,"column":8},"end":{"line":39,"column":42}},{"start":{"line":40,"column":8},"end":{"line":41,"column":42}},{"start":{"line":42,"column":8},"end":{"line":43,"column":41}},{"start":{"line":44,"column":8},"end":{"line":45,"column":42}},{"start":{"line":46,"column":8},"end":{"line":47,"column":42}},{"start":{"line":48,"column":8},"end":{"line":49,"column":43}},{"start":{"line":50,"column":8},"end":{"line":51,"column":94}}],"line":29},"2":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":4},"end":{"line":61,"column":5}}],"line":59},"3":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{"line":69,"column":4},"end":{"line":71,"column":5}}],"line":69},"4":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{"line":79,"column":4},"end":{"line":81,"column":5}}],"line":79},"5":{"loc":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},{"start":{"line":90,"column":4},"end":{"line":92,"column":5}}],"line":90},"6":{"loc":{"start":{"line":93,"column":4},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":104,"column":5}},{"start":{"line":93,"column":4},"end":{"line":104,"column":5}}],"line":93},"7":{"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":100}},"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":40}},{"start":{"line":93,"column":44},"end":{"line":93,"column":100}}],"line":93},"8":{"loc":{"start":{"line":96,"column":9},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":9},"end":{"line":104,"column":5}},{"start":{"line":96,"column":9},"end":{"line":104,"column":5}}],"line":96},"9":{"loc":{"start":{"line":99,"column":9},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":9},"end":{"line":104,"column":5}},{"start":{"line":99,"column":9},"end":{"line":104,"column":5}}],"line":99},"10":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":4},"end":{"line":115,"column":5}}],"line":113},"11":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"12":{"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},{"start":{"line":127,"column":4},"end":{"line":129,"column":5}}],"line":127},"13":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"14":{"loc":{"start":{"line":140,"column":36},"end":{"line":140,"column":47}},"type":"default-arg","locations":[{"start":{"line":140,"column":45},"end":{"line":140,"column":47}}],"line":140},"15":{"loc":{"start":{"line":142,"column":8},"end":{"line":149,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":149,"column":9}},{"start":{"line":142,"column":8},"end":{"line":149,"column":9}}],"line":142},"16":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143},"17":{"loc":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},{"start":{"line":146,"column":12},"end":{"line":148,"column":13}}],"line":146},"18":{"loc":{"start":{"line":146,"column":16},"end":{"line":146,"column":65}},"type":"binary-expr","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":44}},{"start":{"line":146,"column":48},"end":{"line":146,"column":65}}],"line":146},"19":{"loc":{"start":{"line":155,"column":4},"end":{"line":186,"column":5}},"type":"switch","locations":[{"start":{"line":156,"column":8},"end":{"line":158,"column":18}},{"start":{"line":159,"column":8},"end":{"line":161,"column":18}},{"start":{"line":162,"column":8},"end":{"line":164,"column":18}},{"start":{"line":165,"column":8},"end":{"line":167,"column":18}},{"start":{"line":168,"column":8},"end":{"line":170,"column":18}},{"start":{"line":171,"column":8},"end":{"line":173,"column":18}},{"start":{"line":174,"column":8},"end":{"line":176,"column":18}},{"start":{"line":177,"column":8},"end":{"line":179,"column":18}},{"start":{"line":180,"column":8},"end":{"line":182,"column":18}},{"start":{"line":183,"column":8},"end":{"line":185,"column":18}}],"line":155},"20":{"loc":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},{"start":{"line":190,"column":4},"end":{"line":192,"column":5}}],"line":190},"21":{"loc":{"start":{"line":190,"column":8},"end":{"line":190,"column":73}},"type":"binary-expr","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":36}},{"start":{"line":190,"column":40},"end":{"line":190,"column":73}}],"line":190},"22":{"loc":{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},{"start":{"line":214,"column":4},"end":{"line":216,"column":5}}],"line":214},"23":{"loc":{"start":{"line":214,"column":8},"end":{"line":214,"column":107}},"type":"binary-expr","locations":[{"start":{"line":214,"column":8},"end":{"line":214,"column":42}},{"start":{"line":214,"column":46},"end":{"line":214,"column":107}}],"line":214},"24":{"loc":{"start":{"line":220,"column":8},"end":{"line":225,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":225,"column":9}},{"start":{"line":220,"column":8},"end":{"line":225,"column":9}}],"line":220},"25":{"loc":{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},{"start":{"line":222,"column":12},"end":{"line":224,"column":13}}],"line":222}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3639762,"7":452190,"8":766856,"9":129610,"10":56081,"11":581505,"12":1470677,"13":177842,"14":5001,"15":2312857,"16":6190,"17":6190,"18":6190,"19":774754,"20":715872,"21":62206,"22":593490,"23":135521,"24":6254,"25":6190,"26":0,"27":129610,"28":129609,"29":129609,"30":129609,"31":129609,"32":0,"33":129609,"34":56081,"35":56080,"36":56080,"37":56080,"38":56080,"39":0,"40":56080,"41":581505,"42":581501,"43":581501,"44":581501,"45":581501,"46":0,"47":581501,"48":1470677,"49":1470674,"50":1470674,"51":1470674,"52":1470673,"53":1470673,"54":0,"55":1470673,"56":840611,"57":630062,"58":64612,"59":565450,"60":64612,"61":500838,"62":177842,"63":177842,"64":177842,"65":177842,"66":452190,"67":1,"68":452189,"69":695683,"70":695683,"71":695683,"72":695683,"73":451036,"74":1153,"75":766856,"76":1,"77":766855,"78":1210536,"79":1210536,"80":1210536,"81":1210536,"82":6194,"83":760661,"84":164,"85":181,"86":181,"87":58,"88":181,"89":123,"90":164,"91":1,"92":20,"93":1,"94":6,"95":1,"96":1,"97":4432,"98":1,"99":1,"100":4932,"101":1,"102":1,"103":4476,"104":1,"105":1,"106":673,"107":1,"108":1,"109":4393,"110":1,"111":10,"112":53248,"113":10,"114":2,"115":5494,"116":2,"117":1,"118":3671,"119":1,"120":1,"121":2844,"122":1,"123":24,"124":24,"125":20,"126":24,"127":12713,"128":12713,"129":74994,"130":74994,"131":74994,"132":12713,"133":24,"134":1,"135":56,"136":41,"137":41,"138":41,"139":41,"140":41,"141":38,"142":37,"143":37,"144":0,"145":37,"146":37,"147":37,"148":1555701,"149":17714,"150":17714,"151":1,"152":24,"153":1},"f":{"0":3639762,"1":2312857,"2":129610,"3":56081,"4":581505,"5":1470677,"6":177842,"7":452190,"8":766856,"9":164,"10":20,"11":6,"12":4432,"13":4932,"14":4476,"15":673,"16":4393,"17":53248,"18":5494,"19":3671,"20":2844,"21":24,"22":56},"b":{"0":[452190,766856,129610,56081,581505,1470677,177842,5001],"1":[6190,6190,6190,774754,715872,62206,593490,135521,6254,6190,0],"2":[0,129609],"3":[0,56080],"4":[0,581501],"5":[0,1470673],"6":[840611,630062],"7":[1470673,905223],"8":[64612,565450],"9":[64612,500838],"10":[1,452189],"11":[451036,244647],"12":[1,766855],"13":[6194,1204342],"14":[41],"15":[181,0],"16":[58,123],"17":[123,58],"18":[181,124],"19":[1,1,1,1,1,1,10,2,1,1],"20":[20,4],"21":[24,24],"22":[0,37],"23":[37,34],"24":[17714,1537975],"25":[1,17713]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/QueryHandler.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/QueryHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult, ResultTooLargeError } from \"../controller/IInsightFacade\";\nimport { getDatasetFromId } from \"../objects/FileManagement\";\nimport Section from \"../objects/Section\";\nimport {\n\tcheckAstericksPlacement,\n\tgetAndValidateConditionKeyandValue,\n\tgetAndValidateOperatorandParameter,\n\tvalidateOptionsAndGetSingleDataset,\n\tvalidateQuery,\n\tvalidateWhereAndGetSingleDataset,\n} from \"./ValidationHelpers\";\n\nconst maxSections = 5000;\n\nfunction sectionMatchesQueryRequirements(\n\toperator: string,\n\toperatorParameter: string,\n\tsectionToCheck: Section\n): boolean {\n\tswitch (operator) {\n\t\tcase \"AND\":\n\t\t\treturn and(sectionToCheck, operatorParameter);\n\t\tcase \"OR\":\n\t\t\treturn or(sectionToCheck, operatorParameter);\n\t\tcase \"GT\":\n\t\t\treturn greaterThan(sectionToCheck, operatorParameter);\n\t\tcase \"LT\":\n\t\t\treturn lessThan(sectionToCheck, operatorParameter);\n\t\tcase \"EQ\":\n\t\t\treturn equalTo(sectionToCheck, operatorParameter);\n\t\tcase \"IS\":\n\t\t\treturn is(sectionToCheck, operatorParameter);\n\t\tcase \"NOT\":\n\t\t\treturn not(sectionToCheck, operatorParameter);\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n// If you pass in an object which represents an operator, it will return the condition key and value in an array\n// if isStringOnlyValue is true then we check to make sure that condition value is a String and not a number vice versa\n// Index 0 stores the key, index 1 stores the value\n// For example if you pass in\n//                        \"IS\": {\n//\t\t\t\t\t\t\t\"sections_dept\": \"apsc\"\n//  \t\t\t\t\t\t}\n// It should return [\"dept\", \"apsc\"]\n\nfunction getSectionValueFromConditionKey(conditionKey: string, sectionToUse: Section): string | number {\n\tswitch (conditionKey) {\n\t\tcase \"uuid\":\n\t\t\treturn sectionToUse.getUuid();\n\t\tcase \"id\":\n\t\t\treturn sectionToUse.getId();\n\t\tcase \"title\":\n\t\t\treturn sectionToUse.getTitle();\n\t\tcase \"instructor\":\n\t\t\treturn sectionToUse.getInstructor();\n\t\tcase \"dept\":\n\t\t\treturn sectionToUse.getDept();\n\t\tcase \"year\":\n\t\t\treturn sectionToUse.getYear();\n\t\tcase \"avg\":\n\t\t\treturn sectionToUse.getAvg();\n\t\tcase \"pass\":\n\t\t\treturn sectionToUse.getPass();\n\t\tcase \"fail\":\n\t\t\treturn sectionToUse.getFail();\n\t\tcase \"audit\":\n\t\t\treturn sectionToUse.getAudit();\n\t\tdefault:\n\t\t\tthrow new InsightError(`Unknown condition key: ${conditionKey}`);\n\t}\n}\n\n// operatorParameter is in the format \"datasetName_value\"\nfunction greaterThan(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = getAndValidateConditionKeyandValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue > conditionValue;\n}\n\n// operatorParameter is in the format \"datasetName_value\"\nfunction lessThan(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = getAndValidateConditionKeyandValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue < conditionValue;\n}\n\nfunction equalTo(section: Section, operatorParameter: any): boolean {\n\tconst conditionKeyAndValue: any[] = getAndValidateConditionKeyandValue(operatorParameter, false);\n\n\tconst conditionKey = conditionKeyAndValue[0];\n\tconst conditionValue = conditionKeyAndValue[1];\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"string\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\treturn sectionValue === conditionValue;\n}\n\n// this is what is going to handle wildcards\nfunction is(section: Section, operatorParameter: any): boolean {\n\t// Index 0 will have the conditionKey, index 1 will have the index Value\n\tconst conditionKeyAndValue: any[] = getAndValidateConditionKeyandValue(operatorParameter, true);\n\n\t// Stores the conditionKey ie: id, uuid, avg, etc\n\tconst conditionKey = conditionKeyAndValue[0];\n\n\t// Store the value we should compare the section.conditionKey to,\n\t// So if the conditionKey is prof, and the conditionValue is \"John\" then we check does section.prof === \"John\"\n\tconst conditionValue: string = conditionKeyAndValue[1];\n\n\tcheckAstericksPlacement(conditionValue);\n\n\tconst sectionValue = getSectionValueFromConditionKey(conditionKey, section);\n\n\tif (typeof sectionValue === \"number\") {\n\t\tthrow new InsightError(\"Wrong type for section value\");\n\t}\n\n\tif (conditionValue.charAt(0) === \"*\" && conditionValue.charAt(conditionValue.length - 1) === \"*\") {\n\t\t//  inputstring:  Matches inputstring exactly\n\t\treturn sectionValue.includes(conditionValue.replaceAll(\"*\", \"\"));\n\t} else if (conditionValue.charAt(0) === \"*\") {\n\t\t// *inputstring:  Ends with inputstring\n\t\treturn sectionValue.endsWith(conditionValue.replaceAll(\"*\", \"\"));\n\t} else if (conditionValue.charAt(conditionValue.length - 1) === \"*\") {\n\t\t//  inputstring*: Starts with inputstring\n\t\treturn sectionValue.startsWith(conditionValue.replaceAll(\"*\", \"\"));\n\t} else {\n\t\t//  inputstring:  Matches inputstring exactly\n\t\treturn sectionValue === conditionValue;\n\t}\n}\n\nfunction not(section: Section, operatorParameter: any): boolean {\n\tconst operatorAndParam: any[] = getAndValidateOperatorandParameter(operatorParameter);\n\n\tconst operator = operatorAndParam[0];\n\tconst operatorParam = operatorAndParam[1];\n\n\treturn !sectionMatchesQueryRequirements(operator, operatorParam, section);\n}\n\nfunction and(section: Section, operatorParameter: any): boolean {\n\t// remember that AND takes in an array of operations and ANDs their results together, thus\n\t// operatorParameter should already be an array!\n\n\tif (operatorParameter.length === 0) {\n\t\tthrow new InsightError(\"AND array should not be empty.\");\n\t}\n\n\tfor (const operation of operatorParameter) {\n\t\tconst operatorAndParam: string[] = getAndValidateOperatorandParameter(operation);\n\n\t\tconst operator = operatorAndParam[0];\n\t\tconst operatorParam = operatorAndParam[1];\n\n\t\t// If it does not matach all of the operation requirments, then return false (because its an AND)\n\t\tif (!sectionMatchesQueryRequirements(operator, operatorParam, section)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction or(section: Section, operatorParameter: string): boolean {\n\t// remember that OR takes in an array of operations and ORs their results together, thus\n\t// operatorParameter should already be an array!\n\n\tif (operatorParameter.length === 0) {\n\t\tthrow new InsightError(\"OR array should not be empty.\");\n\t}\n\n\tfor (const operation of operatorParameter) {\n\t\tconst operatorAndParam: string[] = getAndValidateOperatorandParameter(operation);\n\n\t\tconst operator = operatorAndParam[0];\n\t\tconst operatorParam = operatorAndParam[1];\n\n\t\t// If matches at least of the operation requirements then return true (because its an OR)\n\t\tif (sectionMatchesQueryRequirements(operator, operatorParam, section)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n// this function was generated with ChatGPT to help me get all keys that contain underscores in the query object\n// Remember that in the query, all keys that have an underscore a parameters for the dataset\nexport function getKeysWithUnderscore(obj: Record<string, any>, result: string[] = []): string[] {\n\tfor (const key in obj) {\n\t\t// Used chatgpt here to fix if statement linter error\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t// Check if the key contains an underscore\n\t\t\tif (key.includes(\"_\")) {\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\t// If the value is an object, recurse into it\n\t\t\tif (typeof obj[key] === \"object\" && obj[key] !== null) {\n\t\t\t\tgetKeysWithUnderscore(obj[key], result);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction sortSectionUsingKey(conditionKey: string, sectionsToSort: Section[]): void {\n\tswitch (conditionKey) {\n\t\tcase \"uuid\":\n\t\t\tsectionsToSort.sort((x, y) => x.getUuid().localeCompare(y.getUuid()));\n\t\t\tbreak;\n\t\tcase \"id\":\n\t\t\tsectionsToSort.sort((x, y) => x.getId().localeCompare(y.getId()));\n\t\t\tbreak;\n\t\tcase \"title\":\n\t\t\tsectionsToSort.sort((x, y) => x.getTitle().localeCompare(y.getTitle()));\n\t\t\tbreak;\n\t\tcase \"instructor\":\n\t\t\tsectionsToSort.sort((x, y) => x.getInstructor().localeCompare(y.getInstructor()));\n\t\t\tbreak;\n\t\tcase \"dept\":\n\t\t\tsectionsToSort.sort((x, y) => x.getDept().localeCompare(y.getDept()));\n\t\t\tbreak;\n\t\tcase \"year\":\n\t\t\tsectionsToSort.sort((x, y) => x.getYear() - y.getYear());\n\t\t\tbreak;\n\t\tcase \"avg\":\n\t\t\tsectionsToSort.sort((x, y) => x.getAvg() - y.getAvg());\n\t\t\tbreak;\n\t\tcase \"pass\":\n\t\t\tsectionsToSort.sort((x, y) => x.getPass() - y.getPass());\n\t\t\tbreak;\n\t\tcase \"fail\":\n\t\t\tsectionsToSort.sort((x, y) => x.getFail() - y.getFail());\n\t\t\tbreak;\n\t\tcase \"audit\":\n\t\t\tsectionsToSort.sort((x, y) => x.getAudit() - y.getAudit());\n\t\t\tbreak;\n\t}\n}\n\nexport function parseSectionsData(sections: Section[], query: any): InsightResult[] {\n\tconst insightResultsToReturn: InsightResult[] = [];\n\n\t// This sorts based on the parameter provided to ORDER\n\tif (query.OPTIONS.ORDER !== null && query.OPTIONS.ORDER !== undefined) {\n\t\tsortSectionUsingKey(query.OPTIONS.ORDER.split(\"_\")[1], sections);\n\t}\n\n\tfor (const section of sections) {\n\t\tconst insightResult: InsightResult = {};\n\n\t\tfor (const key of query.OPTIONS.COLUMNS) {\n\t\t\tconst datasetAndVariable: string[] = key.split(\"_\");\n\t\t\tconst variable = datasetAndVariable[1];\n\n\t\t\tinsightResult[key] = getSectionValueFromConditionKey(variable, section);\n\t\t}\n\n\t\tinsightResultsToReturn.push(insightResult);\n\t}\n\n\treturn insightResultsToReturn;\n}\n\nexport async function getAllValidSections(query: any): Promise<Section[]> {\n\tvalidateQuery(query);\n\n\tconst { WHERE } = query as any;\n\n\t// This will get the operator and operater parameter and store it in an array, where index 0 is the operator, and index 1 is the parameter\n\tconst operatorAndParam: any[] = getAndValidateOperatorandParameter(WHERE);\n\n\tconst operator = operatorAndParam[0];\n\tconst operatorParameter = operatorAndParam[1];\n\n\t// This looks at the entire query and gets the id/name of the dataset that we need to access, this also validates the WHERE object\n\t// To ensure that it is formatted correctly\n\tconst datasetNameToQueryFromWhere = validateWhereAndGetSingleDataset(WHERE);\n\n\t// This looks at the entire query and gets the id/name of the dataset that we need to access, this also validates the OPTIONS object\n\t// To ensure that it is formatted correctly\n\tconst datasetNameToQueryFromOptions = validateOptionsAndGetSingleDataset(query.OPTIONS);\n\n\tconst datasetName = datasetNameToQueryFromOptions;\n\n\t// This means that WHERE is an empty object ie: {} and does not have the datasetName within it, so we must now find it in the columns portion\n\tif (datasetNameToQueryFromWhere !== \"\" && datasetNameToQueryFromWhere !== datasetNameToQueryFromOptions) {\n\t\tthrow new InsightError(\"WHERE and COLOUMNS does not reference the same dataset\");\n\t}\n\n\t// Gets the dataset to query\n\tconst datasetToQuery = await getDatasetFromId(datasetName);\n\n\t// This will store all the sections that we should return to be processed\n\tconst sectionsToReturn: Section[] = [];\n\n\tfor (const section of datasetToQuery.getSections()) {\n\t\tif (sectionMatchesQueryRequirements(operator, operatorParameter, section)) {\n\t\t\tsectionsToReturn.push(section);\n\n\t\t\tif (sectionsToReturn.length > maxSections) {\n\t\t\t\tthrow new ResultTooLargeError(\"More than 5000 sections are going to be returned!\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sectionsToReturn;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e95f402c29c44f4a95c86c007ef5d6a21d3d96dd","contentHash":"9927095c90dd9969d2be47d6dbb2ca321356cfd1529d31682f1580d376e424e3"},"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/ValidationHelpers.ts":{"path":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/ValidationHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":243}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":30},"end":{"line":7,"column":31}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":70}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":73}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":60}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":46}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":46}},"12":{"start":{"line":27,"column":22},"end":{"line":27,"column":41}},"13":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":97}},"15":{"start":{"line":31,"column":25},"end":{"line":31,"column":37}},"16":{"start":{"line":32,"column":22},"end":{"line":32,"column":48}},"17":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":73}},"19":{"start":{"line":36,"column":27},"end":{"line":36,"column":47}},"20":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":114}},"22":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"23":{"start":{"line":41,"column":8},"end":{"line":41,"column":89}},"24":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":89}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":39}},"27":{"start":{"line":48,"column":0},"end":{"line":48,"column":80}},"28":{"start":{"line":50,"column":20},"end":{"line":50,"column":29}},"29":{"start":{"line":51,"column":22},"end":{"line":51,"column":24}},"30":{"start":{"line":52,"column":4},"end":{"line":62,"column":5}},"31":{"start":{"line":53,"column":28},"end":{"line":53,"column":45}},"32":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":114}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":37}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":33}},"36":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"37":{"start":{"line":60,"column":12},"end":{"line":60,"column":97}},"38":{"start":{"line":63,"column":4},"end":{"line":63,"column":23}},"39":{"start":{"line":65,"column":0},"end":{"line":65,"column":80}},"40":{"start":{"line":67,"column":20},"end":{"line":67,"column":29}},"41":{"start":{"line":68,"column":22},"end":{"line":68,"column":24}},"42":{"start":{"line":69,"column":4},"end":{"line":83,"column":5}},"43":{"start":{"line":70,"column":36},"end":{"line":70,"column":50}},"44":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"45":{"start":{"line":72,"column":12},"end":{"line":72,"column":90}},"46":{"start":{"line":74,"column":8},"end":{"line":74,"column":45}},"47":{"start":{"line":75,"column":26},"end":{"line":75,"column":48}},"48":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"49":{"start":{"line":77,"column":12},"end":{"line":77,"column":76}},"50":{"start":{"line":79,"column":8},"end":{"line":79,"column":33}},"51":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"52":{"start":{"line":81,"column":12},"end":{"line":81,"column":97}},"53":{"start":{"line":84,"column":4},"end":{"line":84,"column":23}},"54":{"start":{"line":86,"column":0},"end":{"line":86,"column":76}},"55":{"start":{"line":88,"column":22},"end":{"line":88,"column":41}},"56":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"57":{"start":{"line":90,"column":8},"end":{"line":90,"column":86}},"58":{"start":{"line":92,"column":19},"end":{"line":92,"column":31}},"59":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"60":{"start":{"line":94,"column":8},"end":{"line":94,"column":31}},"61":{"start":{"line":96,"column":28},"end":{"line":96,"column":30}},"62":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"63":{"start":{"line":98,"column":8},"end":{"line":98,"column":45}},"64":{"start":{"line":100,"column":4},"end":{"line":100,"column":41}},"65":{"start":{"line":102,"column":0},"end":{"line":102,"column":80}},"66":{"start":{"line":104,"column":4},"end":{"line":117,"column":5}},"67":{"start":{"line":105,"column":34},"end":{"line":105,"column":63}},"68":{"start":{"line":106,"column":41},"end":{"line":106,"column":42}},"69":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"70":{"start":{"line":108,"column":12},"end":{"line":108,"column":89}},"71":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"72":{"start":{"line":111,"column":12},"end":{"line":111,"column":89}},"73":{"start":{"line":113,"column":8},"end":{"line":116,"column":9}},"74":{"start":{"line":115,"column":12},"end":{"line":115,"column":89}},"75":{"start":{"line":119,"column":0},"end":{"line":119,"column":58}},"76":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"77":{"start":{"line":122,"column":8},"end":{"line":122,"column":76}},"78":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"79":{"start":{"line":125,"column":8},"end":{"line":125,"column":81}},"80":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"81":{"start":{"line":128,"column":8},"end":{"line":128,"column":82}},"82":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"83":{"start":{"line":133,"column":8},"end":{"line":133,"column":87}},"84":{"start":{"line":135,"column":4},"end":{"line":139,"column":5}},"85":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"86":{"start":{"line":137,"column":12},"end":{"line":137,"column":82}},"87":{"start":{"line":140,"column":4},"end":{"line":144,"column":5}},"88":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"89":{"start":{"line":142,"column":12},"end":{"line":142,"column":87}},"90":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"91":{"start":{"line":148,"column":8},"end":{"line":148,"column":72}},"92":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"93":{"start":{"line":151,"column":8},"end":{"line":151,"column":72}},"94":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"95":{"start":{"line":154,"column":8},"end":{"line":154,"column":74}},"96":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"97":{"start":{"line":157,"column":8},"end":{"line":157,"column":74}},"98":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"99":{"start":{"line":160,"column":8},"end":{"line":160,"column":80}},"100":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"101":{"start":{"line":163,"column":8},"end":{"line":163,"column":80}},"102":{"start":{"line":165,"column":4},"end":{"line":165,"column":26}},"103":{"start":{"line":167,"column":0},"end":{"line":167,"column":38}}},"fnMap":{"0":{"name":"isValidOperator","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":24}},"loc":{"start":{"line":8,"column":30},"end":{"line":10,"column":1}},"line":8},"1":{"name":"isValidNumParam","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":32},"end":{"line":13,"column":1}},"line":11},"2":{"name":"isValidStrParam","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":32},"end":{"line":16,"column":1}},"line":14},"3":{"name":"isValidParam","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":21}},"loc":{"start":{"line":17,"column":29},"end":{"line":19,"column":1}},"line":17},"4":{"name":"isValidOptionsKey","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":26}},"loc":{"start":{"line":20,"column":32},"end":{"line":22,"column":1}},"line":20},"5":{"name":"isValidQueryKey","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":24}},"loc":{"start":{"line":23,"column":30},"end":{"line":25,"column":1}},"line":23},"6":{"name":"getAndValidateConditionKeyandValue","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":43}},"loc":{"start":{"line":26,"column":71},"end":{"line":47,"column":1}},"line":26},"7":{"name":"validateOptionsAndGetSingleDataset","decl":{"start":{"line":49,"column":9},"end":{"line":49,"column":43}},"loc":{"start":{"line":49,"column":53},"end":{"line":64,"column":1}},"line":49},"8":{"name":"validateWhereAndGetSingleDataset","decl":{"start":{"line":66,"column":9},"end":{"line":66,"column":41}},"loc":{"start":{"line":66,"column":49},"end":{"line":85,"column":1}},"line":66},"9":{"name":"getAndValidateOperatorandParameter","decl":{"start":{"line":87,"column":9},"end":{"line":87,"column":43}},"loc":{"start":{"line":87,"column":52},"end":{"line":101,"column":1}},"line":87},"10":{"name":"checkAstericksPlacement","decl":{"start":{"line":103,"column":9},"end":{"line":103,"column":32}},"loc":{"start":{"line":103,"column":42},"end":{"line":118,"column":1}},"line":103},"11":{"name":"validateQuery1","decl":{"start":{"line":120,"column":9},"end":{"line":120,"column":23}},"loc":{"start":{"line":120,"column":31},"end":{"line":145,"column":1}},"line":120},"12":{"name":"validateQuery","decl":{"start":{"line":146,"column":9},"end":{"line":146,"column":22}},"loc":{"start":{"line":146,"column":30},"end":{"line":166,"column":1}},"line":146}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":11},"end":{"line":18,"column":59}},"type":"binary-expr","locations":[{"start":{"line":18,"column":11},"end":{"line":18,"column":33}},{"start":{"line":18,"column":37},"end":{"line":18,"column":59}}],"line":18},"1":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"2":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"3":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":80}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":42}},{"start":{"line":37,"column":46},"end":{"line":37,"column":80}}],"line":37},"5":{"loc":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},{"start":{"line":40,"column":4},"end":{"line":42,"column":5}}],"line":40},"6":{"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":63}},"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":42}},{"start":{"line":40,"column":46},"end":{"line":40,"column":63}}],"line":40},"7":{"loc":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},{"start":{"line":43,"column":4},"end":{"line":45,"column":5}}],"line":43},"8":{"loc":{"start":{"line":43,"column":8},"end":{"line":43,"column":64}},"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":42}},{"start":{"line":43,"column":46},"end":{"line":43,"column":64}}],"line":43},"9":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"10":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}}],"line":59},"11":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"12":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{"line":76,"column":8},"end":{"line":78,"column":9}}],"line":76},"13":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"14":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{"line":89,"column":4},"end":{"line":91,"column":5}}],"line":89},"15":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"16":{"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":60}},"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":34}},{"start":{"line":93,"column":38},"end":{"line":93,"column":60}}],"line":93},"17":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{"line":97,"column":4},"end":{"line":99,"column":5}}],"line":97},"18":{"loc":{"start":{"line":104,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":117,"column":5}},{"start":{"line":104,"column":4},"end":{"line":117,"column":5}}],"line":104},"19":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"20":{"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},{"start":{"line":110,"column":8},"end":{"line":112,"column":9}}],"line":110},"21":{"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":110}},"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":35}},{"start":{"line":110,"column":39},"end":{"line":110,"column":64}},{"start":{"line":110,"column":68},"end":{"line":110,"column":110}}],"line":110},"22":{"loc":{"start":{"line":113,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":116,"column":9}},{"start":{"line":113,"column":8},"end":{"line":116,"column":9}}],"line":113},"23":{"loc":{"start":{"line":113,"column":12},"end":{"line":114,"column":85}},"type":"binary-expr","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":58}},{"start":{"line":114,"column":13},"end":{"line":114,"column":38}},{"start":{"line":114,"column":42},"end":{"line":114,"column":84}}],"line":113},"24":{"loc":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},{"start":{"line":121,"column":4},"end":{"line":123,"column":5}}],"line":121},"25":{"loc":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},{"start":{"line":124,"column":4},"end":{"line":126,"column":5}}],"line":124},"26":{"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},{"start":{"line":127,"column":4},"end":{"line":129,"column":5}}],"line":127},"27":{"loc":{"start":{"line":127,"column":8},"end":{"line":127,"column":116}},"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":36}},{"start":{"line":127,"column":40},"end":{"line":127,"column":73}},{"start":{"line":127,"column":77},"end":{"line":127,"column":116}}],"line":127},"28":{"loc":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},{"start":{"line":130,"column":4},"end":{"line":134,"column":5}}],"line":130},"29":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":60}},"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":36}},{"start":{"line":131,"column":8},"end":{"line":131,"column":41}},{"start":{"line":132,"column":8},"end":{"line":132,"column":60}}],"line":130},"30":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"31":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"32":{"loc":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},{"start":{"line":147,"column":4},"end":{"line":149,"column":5}}],"line":147},"33":{"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":45}},"type":"binary-expr","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":22}},{"start":{"line":147,"column":26},"end":{"line":147,"column":45}}],"line":147},"34":{"loc":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},{"start":{"line":150,"column":4},"end":{"line":152,"column":5}}],"line":150},"35":{"loc":{"start":{"line":150,"column":8},"end":{"line":150,"column":57}},"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":28}},{"start":{"line":150,"column":32},"end":{"line":150,"column":57}}],"line":150},"36":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{"line":153,"column":4},"end":{"line":155,"column":5}}],"line":153},"37":{"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":61}},"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":30}},{"start":{"line":153,"column":34},"end":{"line":153,"column":61}}],"line":153},"38":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{"line":156,"column":4},"end":{"line":158,"column":5}}],"line":156},"39":{"loc":{"start":{"line":156,"column":8},"end":{"line":156,"column":77}},"type":"binary-expr","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":38}},{"start":{"line":156,"column":42},"end":{"line":156,"column":77}}],"line":156},"40":{"loc":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},{"start":{"line":159,"column":4},"end":{"line":161,"column":5}}],"line":159},"41":{"loc":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},{"start":{"line":162,"column":4},"end":{"line":164,"column":5}}],"line":162}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2084102,"7":767221,"8":2237929,"9":2237929,"10":79,"11":85,"12":2237873,"13":2237873,"14":2,"15":2237871,"16":2237871,"17":2237871,"18":0,"19":2237871,"20":2237871,"21":2,"22":2237869,"23":1,"24":2237868,"25":4,"26":2237864,"27":1,"28":38,"29":38,"30":38,"31":199,"32":199,"33":0,"34":199,"35":199,"36":199,"37":1,"38":37,"39":1,"40":41,"41":41,"42":41,"43":58,"44":58,"45":0,"46":58,"47":58,"48":58,"49":2,"50":56,"51":56,"52":1,"53":38,"54":1,"55":2084102,"56":2084102,"57":0,"58":2084102,"59":2084102,"60":1,"61":2084102,"62":2084102,"63":2084101,"64":2084102,"65":1,"66":1470674,"67":969836,"68":969836,"69":969836,"70":0,"71":969836,"72":1,"73":969835,"74":0,"75":1,"76":49,"77":0,"78":49,"79":1,"80":48,"81":1,"82":47,"83":4,"84":43,"85":79,"86":1,"87":42,"88":85,"89":1,"90":56,"91":0,"92":56,"93":4,"94":52,"95":1,"96":51,"97":1,"98":50,"99":0,"100":50,"101":1,"102":49,"103":1},"f":{"0":2084102,"1":767221,"2":2237929,"3":2237929,"4":79,"5":85,"6":2237873,"7":38,"8":41,"9":2084102,"10":1470674,"11":49,"12":56},"b":{"0":[2237929,767221],"1":[2,2237871],"2":[0,2237871],"3":[2,2237869],"4":[2237871,1470680],"5":[1,2237868],"6":[2237869,767191],"7":[4,2237864],"8":[2237868,1470678],"9":[0,199],"10":[1,198],"11":[0,58],"12":[2,56],"13":[1,55],"14":[0,2084102],"15":[1,2084101],"16":[2084102,1],"17":[2084101,1],"18":[969836,500838],"19":[0,969836],"20":[1,969835],"21":[969836,193837,64613],"22":[0,969835],"23":[969835,775999,775999],"24":[0,49],"25":[1,48],"26":[1,47],"27":[48,48,40],"28":[4,43],"29":[47,47,39],"30":[1,78],"31":[1,84],"32":[0,56],"33":[56,56],"34":[4,52],"35":[56,55],"36":[1,51],"37":[52,52],"38":[1,50],"39":[51,51],"40":[0,50],"41":[1,49]},"inputSourceMap":{"version":3,"file":"/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/ValidationHelpers.ts","sources":["/Users/terenceyin/Desktop/CPSC 310/project_team209/src/helperFunctions/ValidationHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\nimport { getKeysWithUnderscore } from \"./QueryHandler\";\n\nconst noneKeyword = \"NONE\";\nconst seperatedArrayLengths = 2;\n\nfunction isValidOperator(key: string): boolean {\n\treturn [\"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", \"NOT\"].includes(key);\n}\n\nfunction isValidNumParam(param: string): boolean {\n\treturn [\"year\", \"avg\", \"pass\", \"fail\", \"audit\"].includes(param);\n}\n\nfunction isValidStrParam(param: string): boolean {\n\treturn [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\"].includes(param);\n}\n\nfunction isValidParam(param: string): boolean {\n\treturn isValidStrParam(param) || isValidNumParam(param);\n}\n\nfunction isValidOptionsKey(key: string): boolean {\n\treturn [\"COLUMNS\", \"ORDER\"].includes(key);\n}\n\nfunction isValidQueryKey(key: string): boolean {\n\treturn [\"WHERE\", \"OPTIONS\"].includes(key);\n}\n\nexport function getAndValidateConditionKeyandValue(object: any, isStringOnlyValue: boolean): any[] {\n\tconst operators = Object.keys(object);\n\n\tif (operators.length !== 1) {\n\t\tthrow new InsightError(\"Object should have exactly one condition key.\");\n\t}\n\n\tconst conditionKey = operators[0];\n\n\t// Remember that the condition key is formatted like this \"sections_dept\", thus splitting at _, dept should be at index 1\n\tconst condition = conditionKey.split(\"_\")[1];\n\n\tif (!isValidParam(condition)) {\n\t\tthrow new InsightError(\"Invalid condition Key\");\n\t}\n\n\tconst conditionValue = object[conditionKey];\n\n\tif (typeof conditionValue !== \"number\" && typeof conditionValue !== \"string\") {\n\t\tthrow new InsightError(\"condition value is of an invalid type, not number or a string!\");\n\t}\n\n\tif (typeof conditionValue === \"number\" && isStringOnlyValue) {\n\t\tthrow new InsightError(\"condition value is of the wrong type!\");\n\t}\n\n\tif (typeof conditionValue === \"string\" && !isStringOnlyValue) {\n\t\tthrow new InsightError(\"condition value is of the wrong type!\");\n\t}\n\n\treturn [condition, conditionValue];\n}\n\nexport function validateOptionsAndGetSingleDataset(options: any): string {\n\t// We intialize a set, remember, a set cannot hold duplicate values\n\tconst nameSet = new Set<string>();\n\tlet datasetName = \"\";\n\n\tfor (const column of options.COLUMNS) {\n\t\tconst columnParts = column.split(\"_\");\n\n\t\t// Check if the column contains a dataset name\n\t\tif (columnParts.length !== seperatedArrayLengths) {\n\t\t\tthrow new InsightError(\"Invalid column name format. Should be 'datasetName_param'.\");\n\t\t}\n\n\t\tdatasetName = columnParts[0];\n\t\tnameSet.add(datasetName);\n\n\t\t// Ensure that only one dataset name is allowed\n\t\tif (nameSet.size !== 1) {\n\t\t\tthrow new InsightError(\"You can only use one dataset in the query\");\n\t\t}\n\t}\n\n\treturn datasetName;\n}\n\nexport function validateWhereAndGetSingleDataset(where: any): string {\n\t// We intialize a set, remember, a set cannot hold duplicate values\n\tconst nameSet = new Set<string>();\n\tlet datasetName = \"\";\n\n\t// This for loop checks that all keys have dataset names that are referenceing the same dataset, and that all parameters are valid\n\tfor (const key of getKeysWithUnderscore(where)) {\n\t\tconst datasetNameAndParam = key.split(\"_\");\n\n\t\t// Keys with underscores look like this \"datasetName_param\" for example \"sections_dept\", if we split at the underscore \"_\",\n\t\t// and the length of the array is not 2, then either there are too many underscores in the key, or the key does not contain both\n\t\t// the dataset name, and the parameter\n\n\t\tif (datasetNameAndParam.length !== seperatedArrayLengths) {\n\t\t\tthrow new InsightError(\"Missing dataset name, or parameter\");\n\t\t}\n\n\t\tdatasetName = datasetNameAndParam[0];\n\t\tconst parameter = datasetNameAndParam[1];\n\n\t\t// checks to see if parameter is valid, remember parameter is invalid if it is not one of the following \"year\", \"avg\", \"pass\", \"fail\", \"audit\", \"uuid\", \"id\", \"title\", \"instructor\", \"dept\"\n\t\tif (!isValidParam(parameter)) {\n\t\t\tthrow new InsightError(\"Parameter is invalid\");\n\t\t}\n\n\t\t// here we add the datasetName to the nameSet\n\t\tnameSet.add(datasetName);\n\n\t\t// If the nameSet is larger than 1, this must mean that the query has keys such as \"dataset1_dept\" and \"dataset2_dept\",\n\t\t// which is not allowed because you can only query from one dataset at a time\n\t\tif (nameSet.size !== 1) {\n\t\t\tthrow new InsightError(\"You can only use one dataset in the query\");\n\t\t}\n\t}\n\n\treturn datasetName;\n}\n\n// This will take any object and return its operator and parameter in a string array\n// Index 0 stores the operator, index 1 stores the operator parameter\nexport function getAndValidateOperatorandParameter(object: any): string[] {\n\t// This will get what EBNF grammar is being used (OR, AND, GT, LT, etc), the operation will be stored in keysOfWhere, there may be multiple keys in where\n\tconst operators = Object.keys(object);\n\n\t// object can only ever have exactly one operator/key, so we must check for that and throw an error if there is not exactly one operator\n\tif (operators.length > 1) {\n\t\tthrow new InsightError(\"Where should have at least one key\");\n\t}\n\n\t// Here we are getting the key from the key array of the object which should be either \"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", \"NOT\".\n\tlet operator = operators[0];\n\n\t// Remember the only valid operators are the ones listed in the specification \"AND\", \"OR\", \"GT\", \"LT\", \"EQ\", \"IS\", \"NOT\",\n\t//if the key does not equal to one of these strings then this must mean that WHERE is an empty object and thus we have no operators\n\t// So we set operators to \"NONE\"\n\tif (!isValidOperator(operator) && operators.length === 0) {\n\t\toperator = noneKeyword;\n\t}\n\n\tlet operatorParameter = \"\";\n\n\t// IF we do indeed have an operator, then we need the value of that operator which we can get\n\tif (operator !== noneKeyword) {\n\t\toperatorParameter = object[operator];\n\t}\n\n\treturn [operator, operatorParameter];\n}\n\nexport function checkAstericksPlacement(toCheck: string): void {\n\tif (toCheck.includes(\"*\")) {\n\t\tconst numberOfAstericks = toCheck.split(\"*\").length - 1;\n\n\t\tconst numberOfAstericksAllowed = 2;\n\n\t\tif (numberOfAstericks > numberOfAstericksAllowed) {\n\t\t\tthrow new InsightError(\"Asterisks cannot be in the middle\");\n\t\t}\n\n\t\tif (numberOfAstericks === 1 && toCheck.charAt(0) !== \"*\" && toCheck.charAt(toCheck.length - 1) !== \"*\") {\n\t\t\tthrow new InsightError(\"Asterisks cannot be in the middle\");\n\t\t}\n\n\t\tif (\n\t\t\tnumberOfAstericks === numberOfAstericksAllowed &&\n\t\t\t(toCheck.charAt(0) !== \"*\" || toCheck.charAt(toCheck.length - 1) !== \"*\")\n\t\t) {\n\t\t\tthrow new InsightError(\"Astericks cannot be in the middle\");\n\t\t}\n\t}\n}\n\nfunction validateQuery1(query: any): void {\n\tif (!Array.isArray(query.OPTIONS.COLUMNS)) {\n\t\tthrow new InsightError(\"Columns must be an array\");\n\t}\n\n\tif (query.OPTIONS.COLUMNS.length === 0) {\n\t\tthrow new InsightError(\"Columns array cannot be empty\");\n\t}\n\n\tif (query.OPTIONS.ORDER !== null && query.OPTIONS.ORDER !== undefined && typeof query.OPTIONS.ORDER !== \"string\") {\n\t\tthrow new InsightError(\"ORDER key is of the wrong type\");\n\t}\n\n\tif (\n\t\tquery.OPTIONS.ORDER !== null &&\n\t\tquery.OPTIONS.ORDER !== undefined &&\n\t\t!query.OPTIONS.COLUMNS.includes(query.OPTIONS.ORDER)\n\t) {\n\t\tthrow new InsightError(\"ORDER key must be in COLUMNS array.\");\n\t}\n\n\tfor (const key of Object.keys(query.OPTIONS)) {\n\t\tif (!isValidOptionsKey(key)) {\n\t\t\tthrow new InsightError(\"OPTIONS has as invalid key\");\n\t\t}\n\t}\n\n\tfor (const key of Object.keys(query)) {\n\t\tif (!isValidQueryKey(key)) {\n\t\t\tthrow new InsightError(`QUERY has an invalid key ${key}`);\n\t\t}\n\t}\n}\n\nexport function validateQuery(query: any): void {\n\tif (query === null || query === undefined) {\n\t\tthrow new InsightError(\"query does not exist\");\n\t}\n\n\tif (query.WHERE === null || query.WHERE === undefined) {\n\t\tthrow new InsightError(\"WHERE does not exist\");\n\t}\n\n\tif (query.OPTIONS === null || query.OPTIONS === undefined) {\n\t\tthrow new InsightError(\"OPTIONS does not exist\");\n\t}\n\n\tif (query.OPTIONS.COLUMNS === null || query.OPTIONS.COLUMNS === undefined) {\n\t\tthrow new InsightError(\"COLUMNS does not exist\");\n\t}\n\n\tif (typeof query.WHERE !== \"object\") {\n\t\tthrow new InsightError(\"WHERE is of the wrong format\");\n\t}\n\n\tif (Array.isArray(query.WHERE)) {\n\t\tthrow new InsightError(\"WHERE should not be an array\");\n\t}\n\n\t// Seperate because of the linter errors... this function was too long\n\tvalidateQuery1(query);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2602612b2b8e084f5db4d7b3f51cb2d51a0db311","contentHash":"70c35d10c1f1d9ad956cabefe89a4e7b6e6a617c4827db11bce6a1482a3de9f4"}}